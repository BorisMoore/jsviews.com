{"version":3,"sources":["jsrender-node.js"],"names":["global","getDerivedMethod","baseMethod","method","ret","tag","this","prevBase","base","apply","arguments","getMethod","$isFunction","_d","noop","tagHandlersFromProps","tagCtx","prop","props","rHasHandlers","test","fix","constructor","prototype","retVal","val","dbgBreak","console","log","e","baseApply","JsViewsError","message","name","$","link","$extend","target","source","$viewsDelimiters","openChars","closeChars","$isArray","$views","linkChar","error","delimOpenChar0","delimOpenChar1","delimCloseChar0","delimCloseChar1","$subSettings","delimiters","rTag","$sub","RegExp","rTmpl","$viewsSettings","getView","inner","type","undefined","views","i","l","found","view","root","_","useKey","get","length","parent","getNestedIndex","index","getIndex","getPathObject","ob","path","ltOb","fn","prevOb","tokens","split","lt","contextParameter","key","value","wrapped","deps","res","obsCtxPrm","tagElse","callView","newRes","storeView","isUpdate","isRenderCall","store","ctx","hasOwnProperty","$helpers","linked","_cxp","scope","isTop","_ocps","_ocp","_vw","_key","ind","updateValue","observable","setProperty","_ceo","unshift","cvtArgs","data","_ucp","getTemplate","tmpl","getRsc","$templates","convertVal","converter","onError","linkCtx","argsLen","bindTo","boundTag","bnds","_lr","args","_bd","_lc","_tg","bnd","unlinked","inline","tagName","convert","onArrayChange","flow","tagCtxs","_is","extendCtx","_er","onRender","convertArgs","bound","boundArgs","bindFrom","slice","argOrProp","arg0","context","convertBoundArgs","getResource","resourceType","itemName","renderTag","parentView","bindToOrBindFrom","bindArray","m","isNaN","parseInt","topView","tagDef","template","tags","attr","parentTag","n","itemRet","tagCtxCtx","ctxPrm","initVal","content","callInit","mapDef","thisMap","bdArgs","tagDataMap","contentCtx","bindFromLength","bindToLength","linkedElement","defaultCtx","parentTmpl","lateRender","params","tmpls","render","renderContent","bndArgs","_getTmpl","init","_ctr","ths","arrVws","dataBoundOnly","dataMap","map","parents","parentTags","rendering","rndr","argDefault","linkedCtxParam","fromIndex","toIndex","_dfAt","noVws","HTML","_cp","cvt","src","unmap","tgt","rWrappedInViewMarker","links","renderWithViews","$converters","html","View","contentTmpl","parentView_","self_","self","isArray","id","viewId","cache","_ct","_cchCt","scp","indexStr","push","splice","compileChildResources","storeName","storeNames","resources","jsvStores","compileTag","Tag","baseTag","compiledDef","depends","$tags","_parentTmpl","compileTmpl","options","lookupTemplate","nodeType","elem","nodeFs","readFileSync","code","rootDirPath","replace","compiledTmpl","tmplOrMarkup","_html","markup","tmplName","tmplObject","tmplFn","rEscapeQuotes","getDefaultVal","defaultVal","call","addParentRef","ref","Object","defineProperty","configurable","compileViewModel","JsvVm","vm","iterate","action","getterType","parentRef","j","getterCount","getters","getter","viewModels","JSON","parse","childOb","arr","merge","viewModel","$expando","getterNames","mod","assigned","newModArr","k","model","$observable","refresh","concat","unmapArray","modelArr","charAt","extend","proto","cnstr","privField","set","Function","htmlTag","wrapMap","$subSettingsAdvanced","_wm","rFirstElem","exec","toLowerCase","div","trim","registerStore","storeSettings","theStore","item","compile","thisStore","onStore","OBJECT","getTgt","addSetting","st","Map","baseMap","noIteration","isTopRenderCall","prevData","prevIndex","result","useViews","newView","childView","itemResult","swapContent","outerOnRender","itemVar","newCtx","noLinking","_wrp","nl","syntaxError","helpers","contentView","onRenderError","fallback","Err","isLinkExpr","convertBack","hasElse","pushprecedingContent","shift","loc","substr","rNewLine","blockTagCheck","block","parseTag","all","bind","colon","codeTag","slash","bind2","closeBlock","late","openTagName","isLateOb","pathBindings","ctxProps","paramsArgs","paramsProps","paramsCtxProps","useTrigger","allowCode","rUnescapeQuotes","rTestElseIf","current","substring","stack","pop","parseParams","rBuildHash","onerror","isCtxPrm","keyToken","keyValue","arg","param","hasHandlers","newNode","parsedParam","bindings","astTop","buildCode","setPaths","pathsArr","paths","skp","paramStructure","paramCode","paramVals","parseTokens","lftPrn0","lftPrn","operator","err","eq","path2","prn","comma","lftPrn2","apos","quot","rtPrn","rtPrnDot","prn2","space","full","parsePath","allPath","not","object","helper","viewProperty","pathTokens","leafToken","subPath","binds","named","bindto","_jsvto","bndCtx","bd","theOb","_cpfn","sb","prm","pathStart","fnDp","compiledPathStart","compiledPath","join","expr","newOb","lftPrnFCall","aposed","quoted","bndStack","_cpPthSt","_cpKey","cpFnStore","fnCall","prnDp","indexOf","prnStack","prnInd","paramIndex","boundName","rPath","prnStart","0","rBracketQuote","rPrm","ast","node","hasTag","hasEncoder","getsVal","hasCnvt","useCnvt","tmplBindings","boundOnErrStart","boundOnErrEnd","tagRender","nestedTmpls","nestedTmpl","tagAndElses","nextIsElse","oldCode","isElse","isGetVal","tagCtxFn","tagStart","trigger","retStrOpen","retStrClose","tmplBindingKey","templates","converters","tmplOptions","debug","refs","debugMode","_tag","parentContext","getTargetProps","propsArr","expando","noFunctions","isFunction","getTargetSorted","mapped","start","end","propParams","filter","sort","directSort","step","reverse","v","a","b","onFilter","sorted","paged","getCharEntity","ch","charEntities","charCodeAt","getCharFromEntity","match","token","charsFromEntities","htmlEncode","text","rIsHtml","rHtmlEncode","dataEncode","rDataEncode","dataUnencode","rDataUnencode","exports","jsvStoreName","setting","versionNumber","rAttrEncode","&","<",">","\u0000","'","\"","`","=","amp","gt","$render","jsviews","sub","syntaxErr","settings","advSet","_thp","_gm","_cnvt","_err","_sq","advanced","Error","_getOb","getCache","Array","obj","jsrender","_clFns","_jsv","if","done","selected","for","sortDataMap","cloned","setDataMap","range","include","*",":*","dbg","encode","unencode","url","encodeURI","jsr","require","nodePath","nodePathSep","sep","resolve","renderFile","__express","filepath","callback","realpathSync","module"],"mappings":"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","file":"jsrender-node.min.js","sourcesContent":["/*! JsRender v1.0.9: http://jsviews.com/#jsrender */\n/*! **VERSION FOR NODE.JS** (For WEB see http://jsviews.com/download/jsrender.js) */\n/*\n * Best-of-breed templating in browser or on Node.js.\n * Does not require jQuery, or HTML DOM\n * Integrates with JsViews (http://jsviews.com/#jsviews)\n *\n * Copyright 2020, Boris Moore\n * Released under the MIT License.\n */\n\n//jshint -W018, -W041, -W120\n\n(function(global) {\n\"use strict\";\nif (typeof exports !== 'object' ) {\n\tthrow \"Outside Node.js use //jsviews.com/download/jsrender.js\";\n}\n\n//========================== Top-level vars ==========================\n\n\t// global var is the this object, which is window when running in the usual browser environment\nvar versionNumber = \"v1.0.9\",\n\t$, jsvStoreName, rTag, rTmplString, topView, $views,\n\t_ocp = \"_ocp\",      // Observable contextual parameter\n\n\t$isFunction, $isArray, $templates, $converters, $helpers, $tags, $sub, $subSettings, $subSettingsAdvanced, $viewsSettings,\n\tdelimOpenChar0, delimOpenChar1, delimCloseChar0, delimCloseChar1, linkChar, setting, baseOnError,\n\n\tisRenderCall,\n\trNewLine = /[ \\t]*(\\r\\n|\\n|\\r)/g,\n\trUnescapeQuotes = /\\\\(['\"\\\\])/g, // Unescape quotes and trim\n\trEscapeQuotes = /['\"\\\\]/g, // Escape quotes and \\ character\n\trBuildHash = /(?:\\x08|^)(onerror:)?(?:(~?)(([\\w$.]+):)?([^\\x08]+))\\x08(,)?([^\\x08]+)/gi,\n\trTestElseIf = /^if\\s/,\n\trFirstElem = /<(\\w+)[>\\s]/,\n\trAttrEncode = /[\\x00`><\"'&=]/g, // Includes > encoding since rConvertMarkers in JsViews does not skip > characters in attribute strings\n\trIsHtml = /[\\x00`><\\\"'&=]/,\n\trHasHandlers = /^on[A-Z]|^convert(Back)?$/,\n\trWrappedInViewMarker = /^\\#\\d+_`[\\s\\S]*\\/\\d+_`$/,\n\trHtmlEncode = rAttrEncode,\n\trDataEncode = /[&<>]/g,\n\trDataUnencode = /&(amp|gt|lt);/g,\n\trBracketQuote = /\\[['\"]?|['\"]?\\]/g,\n\tviewId = 0,\n\tcharEntities = {\n\t\t\"&\": \"&amp;\",\n\t\t\"<\": \"&lt;\",\n\t\t\">\": \"&gt;\",\n\t\t\"\\x00\": \"&#0;\",\n\t\t\"'\": \"&#39;\",\n\t\t'\"': \"&#34;\",\n\t\t\"`\": \"&#96;\",\n\t\t\"=\": \"&#61;\"\n\t},\n\tcharsFromEntities = {\n\t\tamp: \"&\",\n\t\tgt: \">\",\n\t\tlt: \"<\"\n\t},\n\tHTML = \"html\",\n\tOBJECT = \"object\",\n\ttmplAttr = \"data-jsv-tmpl\",\n\tjsvTmpl = \"jsvTmpl\",\n\tindexStr = \"For #index in nested block use #getIndex().\",\n\tcpFnStore = {},     // Compiled furnctions for computed values in template expressions (properties, methods, helpers)\n\t$render = {},\n\n\tjsvStores = {\n\t\ttemplate: {\n\t\t\tcompile: compileTmpl\n\t\t},\n\t\ttag: {\n\t\t\tcompile: compileTag\n\t\t},\n\t\tviewModel: {\n\t\t\tcompile: compileViewModel\n\t\t},\n\t\thelper: {},\n\t\tconverter: {}\n\t};\n\n\t// views object ($.views if jQuery is loaded, jsrender.views if no jQuery, e.g. in Node.js)\n\t$views = {\n\t\tjsviews: versionNumber,\n\t\tsub: {\n\t\t\t// subscription, e.g. JsViews integration\n\t\t\trPath: /^(!*?)(?:null|true|false|\\d[\\d.]*|([\\w$]+|\\.|~([\\w$]+)|#(view|([\\w$]+))?)([\\w$.^]*?)(?:[.[^]([\\w$]+)\\]?)?)$/g,\n\t\t\t//        not                               object     helper    view  viewProperty pathTokens      leafToken\n\n\t\t\trPrm: /(\\()(?=\\s*\\()|(?:([([])\\s*)?(?:(\\^?)(~?[\\w$.^]+)?\\s*((\\+\\+|--)|\\+|-|~(?![\\w$])|&&|\\|\\||===|!==|==|!=|<=|>=|[<>%*:?\\/]|(=))\\s*|(!*?(@)?[#~]?[\\w$.^]+)([([])?)|(,\\s*)|(?:(\\()\\s*)?\\\\?(?:(')|(\"))|(?:\\s*(([)\\]])(?=[.^]|\\s*$|[^([])|[)\\]])([([]?))|(\\s+)/g,\n\t\t\t//   lftPrn0           lftPrn         bound     path               operator     err                                          eq      path2 late            prn      comma  lftPrn2          apos quot        rtPrn  rtPrnDot                  prn2     space\n\n\t\t\tView: View,\n\t\t\tErr: JsViewsError,\n\t\t\ttmplFn: tmplFn,\n\t\t\tparse: parseParams,\n\t\t\textend: $extend,\n\t\t\textendCtx: extendCtx,\n\t\t\tsyntaxErr: syntaxError,\n\t\t\tonStore: {\n\t\t\t\ttemplate: function(name, item) {\n\t\t\t\t\tif (item === null) {\n\t\t\t\t\t\tdelete $render[name];\n\t\t\t\t\t} else if (name) {\n\t\t\t\t\t\t$render[name] = item;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\taddSetting: addSetting,\n\t\t\tsettings: {\n\t\t\t\tallowCode: false\n\t\t\t},\n\t\t\tadvSet: noop, // Update advanced settings\n\t\t\t_thp: tagHandlersFromProps,\n\t\t\t_gm: getMethod,\n\t\t\t_tg: function() {}, // Constructor for tagDef\n\t\t\t_cnvt: convertVal,\n\t\t\t_tag: renderTag,\n\t\t\t_er: error,\n\t\t\t_err: onRenderError,\n\t\t\t_cp: retVal, // Get observable contextual parameters (or properties) ~foo=expr. In JsRender, simply returns val.\n\t\t\t_sq: function(token) {\n\t\t\t\tif (token === \"constructor\") {\n\t\t\t\t\tsyntaxError(\"\");\n\t\t\t\t}\n\t\t\t\treturn token;\n\t\t\t}\n\t\t},\n\t\tsettings: {\n\t\t\tdelimiters: $viewsDelimiters,\n\t\t\tadvanced: function(value) {\n\t\t\t\treturn value\n\t\t\t\t\t? (\n\t\t\t\t\t\t\t$extend($subSettingsAdvanced, value),\n\t\t\t\t\t\t\t$sub.advSet(),\n\t\t\t\t\t\t\t$viewsSettings\n\t\t\t\t\t\t)\n\t\t\t\t\t\t: $subSettingsAdvanced;\n\t\t\t\t}\n\t\t},\n\t\tmap: dataMap // If jsObservable loaded first, use that definition of dataMap\n\t};\n\nfunction getDerivedMethod(baseMethod, method) {\n\treturn function() {\n\t\tvar ret,\n\t\t\ttag = this,\n\t\t\tprevBase = tag.base;\n\n\t\ttag.base = baseMethod; // Within method call, calling this.base will call the base method\n\t\tret = method.apply(tag, arguments); // Call the method\n\t\ttag.base = prevBase; // Replace this.base to be the base method of the previous call, for chained calls\n\t\treturn ret;\n\t};\n}\n\nfunction getMethod(baseMethod, method) {\n\t// For derived methods (or handlers declared declaratively as in {{:foo onChange=~fooChanged}} replace by a derived method, to allow using this.base(...)\n\t// or this.baseApply(arguments) to call the base implementation. (Equivalent to this._super(...) and this._superApply(arguments) in jQuery UI)\n\tif ($isFunction(method)) {\n\t\tmethod = getDerivedMethod(\n\t\t\t\t!baseMethod\n\t\t\t\t\t? noop // no base method implementation, so use noop as base method\n\t\t\t\t\t: baseMethod._d\n\t\t\t\t\t\t? baseMethod // baseMethod is a derived method, so use it\n\t\t\t\t\t\t: getDerivedMethod(noop, baseMethod), // baseMethod is not derived so make its base method be the noop method\n\t\t\t\tmethod\n\t\t\t);\n\t\tmethod._d = (baseMethod && baseMethod._d || 0) + 1; // Add flag for derived method (incremented for derived of derived...)\n\t}\n\treturn method;\n}\n\nfunction tagHandlersFromProps(tag, tagCtx) {\n\tvar prop,\n\t\tprops = tagCtx.props;\n\tfor (prop in props) {\n\t\tif (rHasHandlers.test(prop) && !(tag[prop] && tag[prop].fix)) { // Don't override handlers with fix expando (used in datepicker and spinner)\n\t\t\ttag[prop] = prop !== \"convert\" ? getMethod(tag.constructor.prototype[prop], props[prop]) : props[prop];\n\t\t\t// Copy over the onFoo props, convert and convertBack from tagCtx.props to tag (overrides values in tagDef).\n\t\t\t// Note: unsupported scenario: if handlers are dynamically added ^onFoo=expression this will work, but dynamically removing will not work.\n\t\t}\n\t}\n}\n\nfunction retVal(val) {\n\treturn val;\n}\n\nfunction noop() {\n\treturn \"\";\n}\n\nfunction dbgBreak(val) {\n\t// Usage examples: {{dbg:...}}, {{:~dbg(...)}}, {{dbg .../}}, {^{for ... onAfterLink=~dbg}} etc.\n\ttry {\n\t\tconsole.log(\"JsRender dbg breakpoint: \" + val);\n\t\tthrow \"dbg breakpoint\"; // To break here, stop on caught exceptions.\n\t}\n\tcatch (e) {}\n\treturn this.base ? this.baseApply(arguments) : val;\n}\n\nfunction JsViewsError(message) {\n\t// Error exception type for JsViews/JsRender\n\t// Override of $.views.sub.Error is possible\n\tthis.name = ($.link ? \"JsViews\" : \"JsRender\") + \" Error\";\n\tthis.message = message || this.name;\n}\n\nfunction $extend(target, source) {\n\tif (target) {\n\t\tfor (var name in source) {\n\t\t\ttarget[name] = source[name];\n\t\t}\n\t\treturn target;\n\t}\n}\n\n(JsViewsError.prototype = new Error()).constructor = JsViewsError;\n\n//========================== Top-level functions ==========================\n\n//===================\n// views.delimiters\n//===================\n\n\t/**\n\t* Set the tag opening and closing delimiters and 'link' character. Default is \"{{\", \"}}\" and \"^\"\n\t* openChars, closeChars: opening and closing strings, each with two characters\n\t* $.views.settings.delimiters(...)\n\t*\n\t* @param {string}   openChars\n\t* @param {string}   [closeChars]\n\t* @param {string}   [link]\n\t* @returns {Settings}\n\t*\n\t* Get delimiters\n\t* delimsArray = $.views.settings.delimiters()\n\t*\n\t* @returns {string[]}\n\t*/\nfunction $viewsDelimiters(openChars, closeChars, link) {\n\tif (!openChars) {\n\t\treturn $subSettings.delimiters;\n\t}\n\tif ($isArray(openChars)) {\n\t\treturn $viewsDelimiters.apply($views, openChars);\n\t}\n\tlinkChar = link ? link[0] : linkChar;\n\tif (!/^(\\W|_){5}$/.test(openChars + closeChars + linkChar)) {\n\t\terror(\"Invalid delimiters\"); // Must be non-word characters, and openChars and closeChars must each be length 2\n\t}\n\tdelimOpenChar0 = openChars[0];\n\tdelimOpenChar1 = openChars[1];\n\tdelimCloseChar0 = closeChars[0];\n\tdelimCloseChar1 = closeChars[1];\n\n\t$subSettings.delimiters = [delimOpenChar0 + delimOpenChar1, delimCloseChar0 + delimCloseChar1, linkChar];\n\n\t// Escape the characters - since they could be regex special characters\n\topenChars = \"\\\\\" + delimOpenChar0 + \"(\\\\\" + linkChar + \")?\\\\\" + delimOpenChar1; // Default is \"{^{\"\n\tcloseChars = \"\\\\\" + delimCloseChar0 + \"\\\\\" + delimCloseChar1;                   // Default is \"}}\"\n\t// Build regex with new delimiters\n\t//          [tag    (followed by / space or })  or cvtr+colon or html or code] followed by space+params then convertBack?\n\trTag = \"(?:(\\\\w+(?=[\\\\/\\\\s\\\\\" + delimCloseChar0 + \"]))|(\\\\w+)?(:)|(>)|(\\\\*))\\\\s*((?:[^\\\\\"\n\t\t+ delimCloseChar0 + \"]|\\\\\" + delimCloseChar0 + \"(?!\\\\\" + delimCloseChar1 + \"))*?)\";\n\n\t// Make rTag available to JsViews (or other components) for parsing binding expressions\n\t$sub.rTag = \"(?:\" + rTag + \")\";\n\t//                        { ^? {   tag+params slash?  or closingTag                                                   or comment\n\trTag = new RegExp(\"(?:\" + openChars + rTag + \"(\\\\/)?|\\\\\" + delimOpenChar0 + \"(\\\\\" + linkChar + \")?\\\\\" + delimOpenChar1 + \"(?:(?:\\\\/(\\\\w+))\\\\s*|!--[\\\\s\\\\S]*?--))\" + closeChars, \"g\");\n\n\t// Default:  bind     tagName         cvt   cln html code    params            slash   bind2         closeBlk  comment\n\t//      /(?:{(\\^)?{(?:(\\w+(?=[\\/\\s}]))|(\\w+)?(:)|(>)|(\\*))\\s*((?:[^}]|}(?!}))*?)(\\/)?|{(\\^)?{(?:(?:\\/(\\w+))\\s*|!--[\\s\\S]*?--))}}\n\n\t$sub.rTmpl = new RegExp(\"^\\\\s|\\\\s$|<.*>|([^\\\\\\\\]|^)[{}]|\" + openChars + \".*\" + closeChars);\n\t// $sub.rTmpl looks for initial or final white space, html tags or { or } char not preceded by \\\\, or JsRender tags {{xxx}}.\n\t// Each of these strings are considered NOT to be jQuery selectors\n\treturn $viewsSettings;\n}\n\n//=========\n// View.get\n//=========\n\nfunction getView(inner, type) { //view.get(inner, type)\n\tif (!type && inner !== true) {\n\t\t// view.get(type)\n\t\ttype = inner;\n\t\tinner = undefined;\n\t}\n\n\tvar views, i, l, found,\n\t\tview = this,\n\t\troot = type === \"root\";\n\t\t// view.get(\"root\") returns view.root, view.get() returns view.parent, view.get(true) returns view.views[0].\n\n\tif (inner) {\n\t\t// Go through views - this one, and all nested ones, depth-first - and return first one with given type.\n\t\t// If type is undefined, i.e. view.get(true), return first child view.\n\t\tfound = type && view.type === type && view;\n\t\tif (!found) {\n\t\t\tviews = view.views;\n\t\t\tif (view._.useKey) {\n\t\t\t\tfor (i in views) {\n\t\t\t\t\tif (found = type ? views[i].get(inner, type) : views[i]) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0, l = views.length; !found && i < l; i++) {\n\t\t\t\t\tfound = type ? views[i].get(inner, type) : views[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (root) {\n\t\t// Find root view. (view whose parent is top view)\n\t\tfound = view.root;\n\t} else if (type) {\n\t\twhile (view && !found) {\n\t\t\t// Go through views - this one, and all parent ones - and return first one with given type.\n\t\t\tfound = view.type === type ? view : undefined;\n\t\t\tview = view.parent;\n\t\t}\n\t} else {\n\t\tfound = view.parent;\n\t}\n\treturn found || undefined;\n}\n\nfunction getNestedIndex() {\n\tvar view = this.get(\"item\");\n\treturn view ? view.index : undefined;\n}\n\ngetNestedIndex.depends = function() {\n\treturn [this.get(\"item\"), \"index\"];\n};\n\nfunction getIndex() {\n\treturn this.index;\n}\n\ngetIndex.depends = \"index\";\n\n//==================\n// View.ctxPrm, etc.\n//==================\n\n/* Internal private: view._getOb() */\nfunction getPathObject(ob, path, ltOb, fn) {\n\t// Iterate through path to late paths: @a.b.c paths\n\t// Return \"\" (or noop if leaf is a function @a.b.c(...) ) if intermediate object not yet available\n\tvar prevOb, tokens, l,\n\t\ti = 0;\n\tif (ltOb === 1) {\n\t\tfn = 1;\n\t\tltOb = undefined;\n\t}\n\t// Paths like ^a^b^c or ~^a^b^c will not throw if an object in path is undefined.\n\tif (path) {\n\t\ttokens = path.split(\".\");\n\t\tl = tokens.length;\n\n\t\tfor (; ob && i < l; i++) {\n\t\t\tprevOb = ob;\n\t\t\tob = tokens[i] ? ob[tokens[i]] : ob;\n\t\t}\n\t}\n\tif (ltOb) {\n\t\tltOb.lt = ltOb.lt || i<l; // If i < l there was an object in the path not yet available\n\t}\n\treturn ob === undefined\n\t\t? fn ? noop : \"\"\n\t\t: fn ? function() {\n\t\t\treturn ob.apply(prevOb, arguments);\n\t\t} : ob;\n}\n\nfunction contextParameter(key, value, get) {\n\t// Helper method called as view.ctxPrm(key) for helpers or template parameters ~foo - from compiled template or from context callback\n\tvar wrapped, deps, res, obsCtxPrm, tagElse, callView, newRes,\n\t\tstoreView = this,\n\t\tisUpdate = !isRenderCall && arguments.length > 1,\n\t\tstore = storeView.ctx;\n\tif (key) {\n\t\tif (!storeView._) { // tagCtx.ctxPrm() call\n\t\t\ttagElse = storeView.index;\n\t\t\tstoreView = storeView.tag;\n\t\t}\n\t\tcallView = storeView;\n\t\tif (store && store.hasOwnProperty(key) || (store = $helpers).hasOwnProperty(key)) {\n\t\t\tres = store[key];\n\t\t\tif (key === \"tag\" || key === \"tagCtx\" || key === \"root\" || key === \"parentTags\") {\n\t\t\t\treturn res;\n\t\t\t}\n\t\t} else {\n\t\t\tstore = undefined;\n\t\t}\n\t\tif (!isRenderCall && storeView.tagCtx || storeView.linked) { // Data-linked view, or tag instance\n\t\t\tif (!res || !res._cxp) {\n\t\t\t\t// Not a contextual parameter\n\t\t\t\t// Set storeView to tag (if this is a tag.ctxPrm() call) or to root view (\"data\" view of linked template)\n\t\t\t\tstoreView = storeView.tagCtx || $isFunction(res)\n\t\t\t\t\t? storeView // Is a tag, not a view, or is a computed contextual parameter, so scope to the callView, no the 'scope view'\n\t\t\t\t\t: (storeView = storeView.scope || storeView,\n\t\t\t\t\t\t!storeView.isTop && storeView.ctx.tag // If this view is in a tag, set storeView to the tag\n\t\t\t\t\t\t\t|| storeView);\n\t\t\t\tif (res !== undefined && storeView.tagCtx) {\n\t\t\t\t\t// If storeView is a tag, but the contextual parameter has been set at at higher level (e.g. helpers)...\n\t\t\t\t\tstoreView = storeView.tagCtx.view.scope; // then move storeView to the outer level (scope of tag container view)\n\t\t\t\t}\n\t\t\t\tstore = storeView._ocps;\n\t\t\t\tres = store && store.hasOwnProperty(key) && store[key] || res;\n\t\t\t\tif (!(res && res._cxp) && (get || isUpdate)) {\n\t\t\t\t\t// Create observable contextual parameter\n\t\t\t\t\t(store || (storeView._ocps = storeView._ocps || {}))[key]\n\t\t\t\t\t\t= res\n\t\t\t\t\t\t= [{\n\t\t\t\t\t\t\t_ocp: res, // The observable contextual parameter value\n\t\t\t\t\t\t\t_vw: callView,\n\t\t\t\t\t\t\t_key: key\n\t\t\t\t\t\t}];\n\t\t\t\t\tres._cxp = {\n\t\t\t\t\t\tpath: _ocp,\n\t\t\t\t\t\tind: 0,\n\t\t\t\t\t\tupdateValue: function(val, path) {\n\t\t\t\t\t\t\t$.observable(res[0]).setProperty(_ocp, val); // Set the value (res[0]._ocp)\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (obsCtxPrm = res && res._cxp) {\n\t\t\t\t// If this helper resource is an observable contextual parameter\n\t\t\t\tif (arguments.length > 2) {\n\t\t\t\t\tdeps = res[1] ? $sub._ceo(res[1].deps) : [_ocp]; // fn deps (with any exprObs cloned using $sub._ceo)\n\t\t\t\t\tdeps.unshift(res[0]); // view\n\t\t\t\t\tdeps._cxp = obsCtxPrm;\n\t\t\t\t\t// In a context callback for a contextual param, we set get = true, to get ctxPrm [view, dependencies...] array - needed for observe call\n\t\t\t\t\treturn deps;\n\t\t\t\t}\n\t\t\t\ttagElse = obsCtxPrm.tagElse;\n\t\t\t\tnewRes = res[1] // linkFn for compiled expression\n\t\t\t\t\t? obsCtxPrm.tag && obsCtxPrm.tag.cvtArgs\n\t\t\t\t\t\t? obsCtxPrm.tag.cvtArgs(tagElse, 1)[obsCtxPrm.ind] // = tag.bndArgs() - for tag contextual parameter\n\t\t\t\t\t\t: res[1](res[0].data, res[0], $sub) // = fn(data, view, $sub) for compiled binding expression\n\t\t\t\t\t: res[0]._ocp; // Observable contextual parameter (uninitialized, or initialized as static expression, so no path dependencies)\n\t\t\t\tif (isUpdate) {\n\t\t\t\t\t$sub._ucp(key, value, storeView, obsCtxPrm); // Update observable contextual parameter\n\t\t\t\t\treturn storeView;\n\t\t\t\t}\n\t\t\t\tres = newRes;\n\t\t\t}\n\t\t}\n\t\tif (res && $isFunction(res)) {\n\t\t\t// If a helper is of type function we will wrap it, so if called with no this pointer it will be called with the\n\t\t\t// view as 'this' context. If the helper ~foo() was in a data-link expression, the view will have a 'temporary' linkCtx property too.\n\t\t\t// Note that helper functions on deeper paths will have specific this pointers, from the preceding path.\n\t\t\t// For example, ~util.foo() will have the ~util object as 'this' pointer\n\t\t\twrapped = function() {\n\t\t\t\treturn res.apply((!this || this === global) ? callView : this, arguments);\n\t\t\t};\n\t\t\t$extend(wrapped, res); // Attach same expandos (if any) to the wrapped function\n\t\t}\n\t\treturn wrapped || res;\n\t}\n}\n\n/* Internal private: view._getTmpl() */\nfunction getTemplate(tmpl) {\n\treturn tmpl && (tmpl.fn\n\t\t? tmpl\n\t\t: this.getRsc(\"templates\", tmpl) || $templates(tmpl)); // not yet compiled\n}\n\n//==============\n// views._cnvt\n//==============\n\nfunction convertVal(converter, view, tagCtx, onError) {\n\t// Called from compiled template code for {{:}}\n\t// self is template object or linkCtx object\n\tvar tag, linkCtx, value, argsLen, bindTo,\n\t\t// If tagCtx is an integer, then it is the key for the compiled function to return the boundTag tagCtx\n\t\tboundTag = typeof tagCtx === \"number\" && view.tmpl.bnds[tagCtx-1];\n\n\tif (onError === undefined && boundTag && boundTag._lr) { // lateRender\n\t\tonError = \"\";\n\t}\n\tif (onError !== undefined) {\n\t\ttagCtx = onError = {props: {}, args: [onError]};\n\t} else if (boundTag) {\n\t\ttagCtx = boundTag(view.data, view, $sub);\n\t}\n\tboundTag = boundTag._bd && boundTag;\n\tif (converter || boundTag) {\n\t\tlinkCtx = view._lc; // For data-link=\"{cvt:...}\"... See onDataLinkedTagChange\n\t\ttag = linkCtx && linkCtx.tag;\n\t\ttagCtx.view = view;\n\t\tif (!tag) {\n\t\t\ttag = $extend(new $sub._tg(), {\n\t\t\t\t_: {\n\t\t\t\t\tbnd: boundTag,\n\t\t\t\t\tunlinked: true,\n\t\t\t\t\tlt: tagCtx.lt // If a late path @some.path has not returned @some object, mark tag as late\n\t\t\t\t},\n\t\t\t\tinline: !linkCtx,\n\t\t\t\ttagName: \":\",\n\t\t\t\tconvert: converter,\n\t\t\t\tonArrayChange: true,\n\t\t\t\tflow: true,\n\t\t\t\ttagCtx: tagCtx,\n\t\t\t\ttagCtxs: [tagCtx],\n\t\t\t\t_is: \"tag\"\n\t\t\t});\n\t\t\targsLen = tagCtx.args.length;\n\t\t\tif (argsLen>1) {\n\t\t\t\tbindTo = tag.bindTo = [];\n\t\t\t\twhile (argsLen--) {\n\t\t\t\t\tbindTo.unshift(argsLen); // Bind to all the arguments - generate bindTo array: [0,1,2...]\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (linkCtx) {\n\t\t\t\tlinkCtx.tag = tag;\n\t\t\t\ttag.linkCtx = linkCtx;\n\t\t\t}\n\t\t\ttagCtx.ctx = extendCtx(tagCtx.ctx, (linkCtx ? linkCtx.view : view).ctx);\n\t\t\ttagHandlersFromProps(tag, tagCtx);\n\t\t}\n\t\ttag._er = onError && value;\n\t\ttag.ctx = tagCtx.ctx || tag.ctx || {};\n\t\ttagCtx.ctx = undefined;\n\t\tvalue = tag.cvtArgs()[0]; // If there is a convertBack but no convert, converter will be \"true\"\n\t\ttag._er = onError && value;\n\t} else {\n\t\tvalue = tagCtx.args[0];\n\t}\n\n\t// Call onRender (used by JsViews if present, to add binding annotations around rendered content)\n\tvalue = boundTag && view._.onRender\n\t\t? view._.onRender(value, view, tag)\n\t\t: value;\n\treturn value != undefined ? value : \"\";\n}\n\nfunction convertArgs(tagElse, bound) { // tag.cvtArgs() or tag.cvtArgs(tagElse?, true?)\n\tvar l, key, boundArgs, args, bindFrom, tag, converter,\n\t\ttagCtx = this;\n\n\tif (tagCtx.tagName) {\n\t\ttag = tagCtx;\n\t\ttagCtx = (tag.tagCtxs || [tagCtx])[tagElse||0];\n\t\tif (!tagCtx) {\n\t\t\treturn;\n\t\t}\n\t} else {\n\t\ttag = tagCtx.tag;\n\t}\n\n\tbindFrom = tag.bindFrom;\n\targs = tagCtx.args;\n\n\tif ((converter = tag.convert) && \"\" + converter === converter) {\n\t\tconverter = converter === \"true\"\n\t\t\t? undefined\n\t\t\t: (tagCtx.view.getRsc(\"converters\", converter) || error(\"Unknown converter: '\" + converter + \"'\"));\n\t}\n\n\tif (converter && !bound) { // If there is a converter, use a copy of the tagCtx.args array for rendering, and replace the args[0] in\n\t\targs = args.slice(); // the copied array with the converted value. But we do not modify the value of tag.tagCtx.args[0] (the original args array)\n\t}\n\tif (bindFrom) { // Get the values of the boundArgs\n\t\tboundArgs = [];\n\t\tl = bindFrom.length;\n\t\twhile (l--) {\n\t\t\tkey = bindFrom[l];\n\t\t\tboundArgs.unshift(argOrProp(tagCtx, key));\n\t\t}\n\t\tif (bound) {\n\t\t\targs = boundArgs; // Call to bndArgs() - returns the boundArgs\n\t\t}\n\t}\n\tif (converter) {\n\t\tconverter = converter.apply(tag, boundArgs || args);\n\t\tif (converter === undefined) {\n\t\t\treturn args; // Returning undefined from a converter is equivalent to not having a converter.\n\t\t}\n\t\tbindFrom = bindFrom || [0];\n\t\tl = bindFrom.length;\n\t\tif (!$isArray(converter) || (converter.arg0 !== false && (l === 1 || converter.length !== l || converter.arg0))) {\n\t\t\tconverter = [converter]; // Returning converter as first arg, even if converter value is an array\n\t\t\tbindFrom = [0];\n\t\t\tl = 1;\n\t\t}\n\t\tif (bound) {        // Call to bndArgs() - so apply converter to all boundArgs\n\t\t\targs = converter; // The array of values returned from the converter\n\t\t} else {            // Call to cvtArgs()\n\t\t\twhile (l--) {\n\t\t\t\tkey = bindFrom[l];\n\t\t\t\tif (+key === key) {\n\t\t\t\t\targs[key] = converter[l];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn args;\n}\n\nfunction argOrProp(context, key) {\n\tcontext = context[+key === key ? \"args\" : \"props\"];\n\treturn context && context[key];\n}\n\nfunction convertBoundArgs(tagElse) { // tag.bndArgs()\n\treturn this.cvtArgs(tagElse, 1);\n}\n\n//=============\n// views.tag\n//=============\n\n/* view.getRsc() */\nfunction getResource(resourceType, itemName) {\n\tvar res, store,\n\t\tview = this;\n\tif (\"\" + itemName === itemName) {\n\t\twhile ((res === undefined) && view) {\n\t\t\tstore = view.tmpl && view.tmpl[resourceType];\n\t\t\tres = store && store[itemName];\n\t\t\tview = view.parent;\n\t\t}\n\t\treturn res || $views[resourceType][itemName];\n\t}\n}\n\nfunction renderTag(tagName, parentView, tmpl, tagCtxs, isUpdate, onError) {\n\tfunction bindToOrBindFrom(type) {\n\t\tvar bindArray = tag[type];\n\n\t\tif (bindArray !== undefined) {\n\t\t\tbindArray = $isArray(bindArray) ? bindArray : [bindArray];\n\t\t\tm = bindArray.length;\n\t\t\twhile (m--) {\n\t\t\t\tkey = bindArray[m];\n\t\t\t\tif (!isNaN(parseInt(key))) {\n\t\t\t\t\tbindArray[m] = parseInt(key); // Convert \"0\" to 0, etc.\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bindArray || [0];\n\t}\n\n\tparentView = parentView || topView;\n\tvar tag, tagDef, template, tags, attr, parentTag, l, m, n, itemRet, tagCtx, tagCtxCtx, ctxPrm, bindTo, bindFrom, initVal,\n\t\tcontent, callInit, mapDef, thisMap, args, bdArgs, props, tagDataMap, contentCtx, key, bindFromLength, bindToLength, linkedElement, defaultCtx,\n\t\ti = 0,\n\t\tret = \"\",\n\t\tlinkCtx = parentView._lc || false, // For data-link=\"{myTag...}\"... See onDataLinkedTagChange\n\t\tctx = parentView.ctx,\n\t\tparentTmpl = tmpl || parentView.tmpl,\n\t\t// If tagCtxs is an integer, then it is the key for the compiled function to return the boundTag tagCtxs\n\t\tboundTag = typeof tagCtxs === \"number\" && parentView.tmpl.bnds[tagCtxs-1];\n\n\tif (tagName._is === \"tag\") {\n\t\ttag = tagName;\n\t\ttagName = tag.tagName;\n\t\ttagCtxs = tag.tagCtxs;\n\t\ttemplate = tag.template;\n\t} else {\n\t\ttagDef = parentView.getRsc(\"tags\", tagName) || error(\"Unknown tag: {{\" + tagName + \"}} \");\n\t\ttemplate = tagDef.template;\n\t}\n\tif (onError === undefined && boundTag && (boundTag._lr = (tagDef.lateRender && boundTag._lr!== false || boundTag._lr))) {\n\t\tonError = \"\"; // If lateRender, set temporary onError, to skip initial rendering (and render just \"\")\n\t}\n\tif (onError !== undefined) {\n\t\tret += onError;\n\t\ttagCtxs = onError = [{props: {}, args: [], params: {props:{}}}];\n\t} else if (boundTag) {\n\t\ttagCtxs = boundTag(parentView.data, parentView, $sub);\n\t}\n\n\tl = tagCtxs.length;\n\tfor (; i < l; i++) {\n\t\ttagCtx = tagCtxs[i];\n\t\tcontent = tagCtx.tmpl;\n\t\tif (!linkCtx || !linkCtx.tag || i && !linkCtx.tag.inline || tag._er || content && +content===content) {\n\t\t\t// Initialize tagCtx\n\t\t\t// For block tags, tagCtx.tmpl is an integer > 0\n\t\t\tif (content && parentTmpl.tmpls) {\n\t\t\t\ttagCtx.tmpl = tagCtx.content = parentTmpl.tmpls[content - 1]; // Set the tmpl property to the content of the block tag\n\t\t\t}\n\t\t\ttagCtx.index = i;\n\t\t\ttagCtx.ctxPrm = contextParameter;\n\t\t\ttagCtx.render = renderContent;\n\t\t\ttagCtx.cvtArgs = convertArgs;\n\t\t\ttagCtx.bndArgs = convertBoundArgs;\n\t\t\ttagCtx.view = parentView;\n\t\t\ttagCtx.ctx = extendCtx(extendCtx(tagCtx.ctx, tagDef && tagDef.ctx), ctx); // Clone and extend parentView.ctx\n\t\t}\n\t\tif (tmpl = tagCtx.props.tmpl) {\n\t\t\t// If the tmpl property is overridden, set the value (when initializing, or, in case of binding: ^tmpl=..., when updating)\n\t\t\ttagCtx.tmpl = parentView._getTmpl(tmpl);\n\t\t\ttagCtx.content = tagCtx.content || tagCtx.tmpl;\n\t\t}\n\n\t\tif (!tag) {\n\t\t\t// This will only be hit for initial tagCtx (not for {{else}}) - if the tag instance does not exist yet\n\t\t\t// If the tag has not already been instantiated, we will create a new instance.\n\t\t\t// ~tag will access the tag, even within the rendering of the template content of this tag.\n\t\t\t// From child/descendant tags, can access using ~tag.parent, or ~parentTags.tagName\n\t\t\ttag = new tagDef._ctr();\n\t\t\tcallInit = !!tag.init;\n\n\t\t\ttag.parent = parentTag = ctx && ctx.tag;\n\t\t\ttag.tagCtxs = tagCtxs;\n\n\t\t\tif (linkCtx) {\n\t\t\t\ttag.inline = false;\n\t\t\t\tlinkCtx.tag = tag;\n\t\t\t}\n\t\t\ttag.linkCtx = linkCtx;\n\t\t\tif (tag._.bnd = boundTag || linkCtx.fn) {\n\t\t\t\t// Bound if {^{tag...}} or data-link=\"{tag...}\"\n\t\t\t\ttag._.ths = tagCtx.params.props.this; // Tag has a this=expr binding, to get javascript reference to tag instance\n\t\t\t\ttag._.lt = tagCtxs.lt; // If a late path @some.path has not returned @some object, mark tag as late\n\t\t\t\ttag._.arrVws = {};\n\t\t\t} else if (tag.dataBoundOnly) {\n\t\t\t\terror(tagName + \" must be data-bound:\\n{^{\" + tagName + \"}}\");\n\t\t\t}\n\t\t\t//TODO better perf for childTags() - keep child tag.tags array, (and remove child, when disposed)\n\t\t\t// tag.tags = [];\n\t\t} else if (linkCtx && linkCtx.fn._lr) {\n\t\t\tcallInit = !!tag.init;\n\t\t}\n\t\ttagDataMap = tag.dataMap;\n\n\t\ttagCtx.tag = tag;\n\t\tif (tagDataMap && tagCtxs) {\n\t\t\ttagCtx.map = tagCtxs[i].map; // Copy over the compiled map instance from the previous tagCtxs to the refreshed ones\n\t\t}\n\t\tif (!tag.flow) {\n\t\t\ttagCtxCtx = tagCtx.ctx = tagCtx.ctx || {};\n\n\t\t\t// tags hash: tag.ctx.tags, merged with parentView.ctx.tags,\n\t\t\ttags = tag.parents = tagCtxCtx.parentTags = ctx && extendCtx(tagCtxCtx.parentTags, ctx.parentTags) || {};\n\t\t\tif (parentTag) {\n\t\t\t\ttags[parentTag.tagName] = parentTag;\n\t\t\t\t//TODO better perf for childTags: parentTag.tags.push(tag);\n\t\t\t}\n\t\t\ttags[tag.tagName] = tagCtxCtx.tag = tag;\n\t\t\ttagCtxCtx.tagCtx = tagCtx;\n\t\t}\n\t}\n\tif (!(tag._er = onError)) {\n\t\ttagHandlersFromProps(tag, tagCtxs[0]);\n\t\ttag.rendering = {rndr: tag.rendering}; // Provide object for state during render calls to tag and elses. (Used by {{if}} and {{for}}...)\n\t\tfor (i = 0; i < l; i++) { // Iterate tagCtx for each {{else}} block\n\t\t\ttagCtx = tag.tagCtx = tagCtxs[i];\n\t\t\tprops = tagCtx.props;\n\t\t\ttag.ctx = tagCtx.ctx;\n\n\t\t\tif (!i) {\n\t\t\t\tif (callInit) {\n\t\t\t\t\ttag.init(tagCtx, linkCtx, tag.ctx);\n\t\t\t\t\tcallInit = undefined;\n\t\t\t\t}\n\t\t\t\tif (!tagCtx.args.length && tagCtx.argDefault !== false && tag.argDefault !== false) {\n\t\t\t\t\ttagCtx.args = args = [tagCtx.view.data]; // Missing first arg defaults to the current data context\n\t\t\t\t\ttagCtx.params.args = [\"#data\"];\n\t\t\t\t}\n\n\t\t\t\tbindTo = bindToOrBindFrom(\"bindTo\");\n\n\t\t\t\tif (tag.bindTo !== undefined) {\n\t\t\t\t\ttag.bindTo = bindTo;\n\t\t\t\t}\n\n\t\t\t\tif (tag.bindFrom !== undefined) {\n\t\t\t\t\ttag.bindFrom = bindToOrBindFrom(\"bindFrom\");\n\t\t\t\t} else if (tag.bindTo) {\n\t\t\t\t\ttag.bindFrom = tag.bindTo = bindTo;\n\t\t\t\t}\n\t\t\t\tbindFrom = tag.bindFrom || bindTo;\n\n\t\t\t\tbindToLength = bindTo.length;\n\t\t\t\tbindFromLength = bindFrom.length;\n\n\t\t\t\tif (tag._.bnd && (linkedElement = tag.linkedElement)) {\n\t\t\t\t\ttag.linkedElement = linkedElement = $isArray(linkedElement) ? linkedElement: [linkedElement];\n\n\t\t\t\t\tif (bindToLength !== linkedElement.length) {\n\t\t\t\t\t\terror(\"linkedElement not same length as bindTo\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (linkedElement = tag.linkedCtxParam) {\n\t\t\t\t\ttag.linkedCtxParam = linkedElement = $isArray(linkedElement) ? linkedElement: [linkedElement];\n\n\t\t\t\t\tif (bindFromLength !== linkedElement.length) {\n\t\t\t\t\t\terror(\"linkedCtxParam not same length as bindFrom/bindTo\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (bindFrom) {\n\t\t\t\t\ttag._.fromIndex = {}; // Hash of bindFrom index which has same path value as bindTo index. fromIndex = tag._.fromIndex[toIndex]\n\t\t\t\t\ttag._.toIndex = {}; // Hash of bindFrom index which has same path value as bindTo index. fromIndex = tag._.fromIndex[toIndex]\n\t\t\t\t\tn = bindFromLength;\n\t\t\t\t\twhile (n--) {\n\t\t\t\t\t\tkey = bindFrom[n];\n\t\t\t\t\t\tm = bindToLength;\n\t\t\t\t\t\twhile (m--) {\n\t\t\t\t\t\t\tif (key === bindTo[m]) {\n\t\t\t\t\t\t\t\ttag._.fromIndex[m] = n;\n\t\t\t\t\t\t\t\ttag._.toIndex[n] = m;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (linkCtx) {\n\t\t\t\t\t// Set attr on linkCtx to ensure outputting to the correct target attribute.\n\t\t\t\t\t// Setting either linkCtx.attr or this.attr in the init() allows per-instance choice of target attrib.\n\t\t\t\t\tlinkCtx.attr = tag.attr = linkCtx.attr || tag.attr || linkCtx._dfAt;\n\t\t\t\t}\n\t\t\t\tattr = tag.attr;\n\t\t\t\ttag._.noVws = attr && attr !== HTML;\n\t\t\t}\n\t\t\targs = tag.cvtArgs(i);\n\t\t\tif (tag.linkedCtxParam) {\n\t\t\t\tbdArgs = tag.cvtArgs(i, 1);\n\t\t\t\tm = bindFromLength;\n\t\t\t\tdefaultCtx = tag.constructor.prototype.ctx;\n\t\t\t\twhile (m--) {\n\t\t\t\t\tif (ctxPrm = tag.linkedCtxParam[m]) {\n\t\t\t\t\t\tkey = bindFrom[m];\n\t\t\t\t\t\tinitVal = bdArgs[m];\n\t\t\t\t\t\t// Create tag contextual parameter\n\t\t\t\t\t\ttagCtx.ctx[ctxPrm] = $sub._cp(\n\t\t\t\t\t\t\tdefaultCtx && initVal === undefined ? defaultCtx[ctxPrm]: initVal,\n\t\t\t\t\t\t\tinitVal !== undefined && argOrProp(tagCtx.params, key),\n\t\t\t\t\t\t\ttagCtx.view,\n\t\t\t\t\t\t\ttag._.bnd && {tag: tag, cvt: tag.convert, ind: m, tagElse: i}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ((mapDef = props.dataMap || tagDataMap) && (args.length || props.dataMap)) {\n\t\t\t\tthisMap = tagCtx.map;\n\t\t\t\tif (!thisMap || thisMap.src !== args[0] || isUpdate) {\n\t\t\t\t\tif (thisMap && thisMap.src) {\n\t\t\t\t\t\tthisMap.unmap(); // only called if observable map - not when only used in JsRender, e.g. by {{props}}\n\t\t\t\t\t}\n\t\t\t\t\tmapDef.map(args[0], tagCtx, thisMap, !tag._.bnd);\n\t\t\t\t\tthisMap = tagCtx.map;\n\t\t\t\t}\n\t\t\t\targs = [thisMap.tgt];\n\t\t\t}\n\n\t\t\titemRet = undefined;\n\t\t\tif (tag.render) {\n\t\t\t\titemRet = tag.render.apply(tag, args);\n\t\t\t\tif (parentView.linked && itemRet && !rWrappedInViewMarker.test(itemRet)) {\n\t\t\t\t\t// When a tag renders content from the render method, with data linking then we need to wrap with view markers, if absent,\n\t\t\t\t\t// to provide a contentView for the tag, which will correctly dispose bindings if deleted. The 'tmpl' for this view will\n\t\t\t\t\t// be a dumbed-down template which will always return the itemRet string (no matter what the data is). The itemRet string\n\t\t\t\t\t// is not compiled as template markup, so can include \"{{\" or \"}}\" without triggering syntax errors\n\t\t\t\t\ttmpl = { // 'Dumbed-down' template which always renders 'static' itemRet string\n\t\t\t\t\t\tlinks: []\n\t\t\t\t\t};\n\t\t\t\t\ttmpl.render = tmpl.fn = function() {\n\t\t\t\t\t\treturn itemRet;\n\t\t\t\t\t};\n\t\t\t\t\titemRet = renderWithViews(tmpl, parentView.data, undefined, true, parentView, undefined, undefined, tag);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!args.length) {\n\t\t\t\targs = [parentView]; // no arguments - (e.g. {{else}}) get data context from view.\n\t\t\t}\n\t\t\tif (itemRet === undefined) {\n\t\t\t\tcontentCtx = args[0]; // Default data context for wrapped block content is the first argument\n\t\t\t\tif (tag.contentCtx) { // Set tag.contentCtx to true, to inherit parent context, or to a function to provide alternate context.\n\t\t\t\t\tcontentCtx = tag.contentCtx === true ? parentView : tag.contentCtx(contentCtx);\n\t\t\t\t}\n\t\t\t\titemRet = tagCtx.render(contentCtx, true) || (isUpdate ? undefined : \"\");\n\t\t\t}\n\t\t\tret = ret\n\t\t\t\t? ret + (itemRet || \"\")\n\t\t\t\t: itemRet !== undefined\n\t\t\t\t\t? \"\" + itemRet\n\t\t\t\t\t: undefined; // If no return value from render, and no template/content tagCtx.render(...), return undefined\n\t\t}\n\t\ttag.rendering = tag.rendering.rndr; // Remove tag.rendering object (if this is outermost render call. (In case of nested calls)\n\t}\n\ttag.tagCtx = tagCtxs[0];\n\ttag.ctx = tag.tagCtx.ctx;\n\n\tif (tag._.noVws && tag.inline) {\n\t\t// inline tag with attr set to \"text\" will insert HTML-encoded content - as if it was element-based innerText\n\t\tret = attr === \"text\"\n\t\t\t? $converters.html(ret)\n\t\t\t: \"\";\n\t}\n\treturn boundTag && parentView._.onRender\n\t\t// Call onRender (used by JsViews if present, to add binding annotations around rendered content)\n\t\t? parentView._.onRender(ret, parentView, tag)\n\t\t: ret;\n}\n\n//=================\n// View constructor\n//=================\n\nfunction View(context, type, parentView, data, template, key, onRender, contentTmpl) {\n\t// Constructor for view object in view hierarchy. (Augmented by JsViews if JsViews is loaded)\n\tvar views, parentView_, tag, self_,\n\t\tself = this,\n\t\tisArray = type === \"array\";\n\t\t// If the data is an array, this is an 'array view' with a views array for each child 'item view'\n\t\t// If the data is not an array, this is an 'item view' with a views 'hash' object for any child nested views\n\n\tself.content = contentTmpl;\n\tself.views = isArray ? [] : {};\n\tself.data = data;\n\tself.tmpl = template;\n\tself_ = self._ = {\n\t\tkey: 0,\n\t\t// ._.useKey is non zero if is not an 'array view' (owning a data array). Use this as next key for adding to child views hash\n\t\tuseKey: isArray ? 0 : 1,\n\t\tid: \"\" + viewId++,\n\t\tonRender: onRender,\n\t\tbnds: {}\n\t};\n\tself.linked = !!onRender;\n\tself.type = type || \"top\";\n\tif (type) {\n\t\tself.cache = {_ct: $subSettings._cchCt}; // Used for caching results of computed properties and helpers (view.getCache)\n\t}\n\n\tif (!parentView || parentView.type === \"top\") {\n\t\t(self.ctx = context || {}).root = self.data;\n\t}\n\n\tif (self.parent = parentView) {\n\t\tself.root = parentView.root || self; // view whose parent is top view\n\t\tviews = parentView.views;\n\t\tparentView_ = parentView._;\n\t\tself.isTop = parentView_.scp; // Is top content view of a link(\"#container\", ...) call\n\t\tself.scope = (!context.tag || context.tag === parentView.ctx.tag) && !self.isTop && parentView.scope || self;\n\t\t// Scope for contextParams - closest non flow tag ancestor or root view\n\t\tif (parentView_.useKey) {\n\t\t\t// Parent is not an 'array view'. Add this view to its views object\n\t\t\t// self._key = is the key in the parent view hash\n\t\t\tviews[self_.key = \"_\" + parentView_.useKey++] = self;\n\t\t\tself.index = indexStr;\n\t\t\tself.getIndex = getNestedIndex;\n\t\t} else if (views.length === (self_.key = self.index = key)) { // Parent is an 'array view'. Add this view to its views array\n\t\t\tviews.push(self); // Adding to end of views array. (Using push when possible - better perf than splice)\n\t\t} else {\n\t\t\tviews.splice(key, 0, self); // Inserting in views array\n\t\t}\n\t\t// If no context was passed in, use parent context\n\t\t// If context was passed in, it should have been merged already with parent context\n\t\tself.ctx = context || parentView.ctx;\n\t} else if (type) {\n\t\tself.root = self; // view whose parent is top view\n\t}\n}\n\nView.prototype = {\n\tget: getView,\n\tgetIndex: getIndex,\n\tctxPrm: contextParameter,\n\tgetRsc: getResource,\n\t_getTmpl: getTemplate,\n\t_getOb: getPathObject,\n\tgetCache: function(key) { // Get cached value of computed value\n\t\tif ($subSettings._cchCt > this.cache._ct) {\n\t\t\tthis.cache = {_ct: $subSettings._cchCt};\n\t\t}\n\t\treturn this.cache[key] !== undefined ? this.cache[key] : (this.cache[key] = cpFnStore[key](this.data, this, $sub));\n\t},\n\t_is: \"view\"\n};\n\n//====================================================\n// Registration\n//====================================================\n\nfunction compileChildResources(parentTmpl) {\n\tvar storeName, storeNames, resources;\n\tfor (storeName in jsvStores) {\n\t\tstoreNames = storeName + \"s\";\n\t\tif (parentTmpl[storeNames]) {\n\t\t\tresources = parentTmpl[storeNames];        // Resources not yet compiled\n\t\t\tparentTmpl[storeNames] = {};               // Remove uncompiled resources\n\t\t\t$views[storeNames](resources, parentTmpl); // Add back in the compiled resources\n\t\t}\n\t}\n}\n\n//===============\n// compileTag\n//===============\n\nfunction compileTag(name, tagDef, parentTmpl) {\n\tvar tmpl, baseTag, prop,\n\t\tcompiledDef = new $sub._tg();\n\n\tfunction Tag() {\n\t\tvar tag = this;\n\t\ttag._ = {\n\t\t\tunlinked: true\n\t\t};\n\t\ttag.inline = true;\n\t\ttag.tagName = name;\n\t}\n\n\tif ($isFunction(tagDef)) {\n\t\t// Simple tag declared as function. No presenter instantation.\n\t\ttagDef = {\n\t\t\tdepends: tagDef.depends,\n\t\t\trender: tagDef\n\t\t};\n\t} else if (\"\" + tagDef === tagDef) {\n\t\ttagDef = {template: tagDef};\n\t}\n\n\tif (baseTag = tagDef.baseTag) {\n\t\ttagDef.flow = !!tagDef.flow; // Set flow property, so defaults to false even if baseTag has flow=true\n\t\tbaseTag = \"\" + baseTag === baseTag\n\t\t\t? (parentTmpl && parentTmpl.tags[baseTag] || $tags[baseTag])\n\t\t\t: baseTag;\n\t\tif (!baseTag) {\n\t\t\terror('baseTag: \"' + tagDef.baseTag + '\" not found');\n\t\t}\n\t\tcompiledDef = $extend(compiledDef, baseTag);\n\n\t\tfor (prop in tagDef) {\n\t\t\tcompiledDef[prop] = getMethod(baseTag[prop], tagDef[prop]);\n\t\t}\n\t} else {\n\t\tcompiledDef = $extend(compiledDef, tagDef);\n\t}\n\n\t// Tag declared as object, used as the prototype for tag instantiation (control/presenter)\n\tif ((tmpl = compiledDef.template) !== undefined) {\n\t\tcompiledDef.template = \"\" + tmpl === tmpl ? ($templates[tmpl] || $templates(tmpl)) : tmpl;\n\t}\n\t(Tag.prototype = compiledDef).constructor = compiledDef._ctr = Tag;\n\n\tif (parentTmpl) {\n\t\tcompiledDef._parentTmpl = parentTmpl;\n\t}\n\treturn compiledDef;\n}\n\nfunction baseApply(args) {\n\t// In derived method (or handler declared declaratively as in {{:foo onChange=~fooChanged}} can call base method,\n\t// using this.baseApply(arguments) (Equivalent to this._superApply(arguments) in jQuery UI)\n\treturn this.base.apply(this, args);\n}\n\n//===============\n// compileTmpl\n//===============\n\nfunction compileTmpl(name, tmpl, parentTmpl, options) {\n\t// tmpl is either a template object, a selector for a template script block, or the name of a compiled template\n\n\t//==== nested functions ====\n\tfunction lookupTemplate(value) {\n\t\t// If value is of type string - treat as selector, or name of compiled template\n\t\t// Return the template object, if already compiled, or the markup string\n\t\tvar currentName, tmpl;\n\t\tif ((\"\" + value === value) || value.nodeType > 0 && (elem = value)) {\n\t\t\tif (!elem) {\n\t\t\t\tif (/^\\.?\\/[^\\\\:*?\"<>]*$/.test(value)) {\n\t\t\t\t\t// value=\"./some/file.html\" (or \"/some/file.html\")\n\t\t\t\t\t// If the template is not named, use \"./some/file.html\" as name.\n\t\t\t\t\tif (tmpl = $templates[name = name || value]) {\n\t\t\t\t\t\tvalue = tmpl;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// NODE.JS-SPECIFIC CODE:\n\t\t\t\t\t\t// Load template file from the file system\n\t\t\t\t\t\t// Consider supporting/using async version with callback: nodeFs.readFile(path, {encoding: \"utf8\"}, callback);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tvalue = nodeFs.readFileSync(value, \"utf8\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch(e) {\n\t\t\t\t\t\t\tif(e && e.code == 'ENOENT') {\n\t\t\t\t\t\t\t\terror(\"Template '\" + value + \"' not found at '\" + e.path + \"'. Use path relative to '\" + rootDirPath + \"'.\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Remove BOM if necessary\n\t\t\t\t\t\tvalue = compileTmpl(name, value.replace(/^\\uFEFF/, ''), parentTmpl, options);\n\n\t\t\t\t\t\tif (!options) {\n\t\t\t\t\t\t\t$templates[name] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telem = undefined;\n\t\t} else if (!value.fn) {\n\t\t\tvalue = undefined;\n\t\t\t// If value is not a string. HTML element, or compiled template, return undefined\n\t\t}\n\t\treturn value;\n\t}\n\n\tvar elem, compiledTmpl,\n\t\ttmplOrMarkup = tmpl = tmpl || \"\";\n\t$sub._html = $converters.html;\n\n\t//==== Compile the template ====\n\tif (options === 0) {\n\t\toptions = undefined;\n\t\ttmplOrMarkup = lookupTemplate(tmplOrMarkup); // Top-level compile so do a template lookup\n\t}\n\n\t// If options, then this was already compiled from a (script) element template declaration.\n\t// If not, then if tmpl is a template object, use it for options\n\toptions = options || (tmpl.markup\n\t\t? tmpl.bnds\n\t\t\t? $extend({}, tmpl)\n\t\t\t: tmpl\n\t\t: {}\n\t);\n\n\toptions.tmplName = options.tmplName || name || \"unnamed\";\n\tif (parentTmpl) {\n\t\toptions._parentTmpl = parentTmpl;\n\t}\n\t// If tmpl is not a markup string or a selector string, then it must be a template object\n\t// In that case, get it from the markup property of the object\n\tif (!tmplOrMarkup && tmpl.markup && (tmplOrMarkup = lookupTemplate(tmpl.markup)) && tmplOrMarkup.fn) {\n\t\t// If the string references a compiled template object, need to recompile to merge any modified options\n\t\ttmplOrMarkup = tmplOrMarkup.markup;\n\t}\n\tif (tmplOrMarkup !== undefined) {\n\t\tif (tmplOrMarkup.render || tmpl.render) {\n\t\t\t// tmpl is already compiled, so use it\n\t\t\tif (tmplOrMarkup.tmpls) {\n\t\t\t\tcompiledTmpl = tmplOrMarkup;\n\t\t\t}\n\t\t} else {\n\t\t\t// tmplOrMarkup is a markup string, not a compiled template\n\t\t\t// Create template object\n\t\t\ttmpl = tmplObject(tmplOrMarkup, options);\n\t\t\t// Compile to AST and then to compiled function\n\t\t\ttmplFn(tmplOrMarkup.replace(rEscapeQuotes, \"\\\\$&\"), tmpl);\n\t\t}\n\t\tif (!compiledTmpl) {\n\t\t\tcompiledTmpl = $extend(function() {\n\t\t\t\treturn compiledTmpl.render.apply(compiledTmpl, arguments);\n\t\t\t}, tmpl);\n\n\t\t\tcompileChildResources(compiledTmpl);\n\t\t}\n\t\treturn compiledTmpl;\n\t}\n}\n\n//==== /end of function compileTmpl ====\n\n//=================\n// compileViewModel\n//=================\n\nfunction getDefaultVal(defaultVal, data) {\n\treturn $isFunction(defaultVal)\n\t\t? defaultVal.call(data)\n\t\t: defaultVal;\n}\n\nfunction addParentRef(ob, ref, parent) {\n\tObject.defineProperty(ob, ref, {\n\t\tvalue: parent,\n\t\tconfigurable: true\n\t});\n}\n\nfunction compileViewModel(name, type) {\n\tvar i, constructor, parent,\n\t\tviewModels = this,\n\t\tgetters = type.getters,\n\t\textend = type.extend,\n\t\tid = type.id,\n\t\tproto = $.extend({\n\t\t\t_is: name || \"unnamed\",\n\t\t\tunmap: unmap,\n\t\t\tmerge: merge\n\t\t}, extend),\n\t\targs = \"\",\n\t\tcnstr = \"\",\n\t\tgetterCount = getters ? getters.length : 0,\n\t\t$observable = $.observable,\n\t\tgetterNames = {};\n\n\tfunction JsvVm(args) {\n\t\tconstructor.apply(this, args);\n\t}\n\n\tfunction vm() {\n\t\treturn new JsvVm(arguments);\n\t}\n\n\tfunction iterate(data, action) {\n\t\tvar getterType, defaultVal, prop, ob, parentRef,\n\t\t\tj = 0;\n\t\tfor (; j < getterCount; j++) {\n\t\t\tprop = getters[j];\n\t\t\tgetterType = undefined;\n\t\t\tif (prop + \"\" !== prop) {\n\t\t\t\tgetterType = prop;\n\t\t\t\tprop = getterType.getter;\n\t\t\t\tparentRef = getterType.parentRef;\n\t\t\t}\n\t\t\tif ((ob = data[prop]) === undefined && getterType && (defaultVal = getterType.defaultVal) !== undefined) {\n\t\t\t\tob = getDefaultVal(defaultVal, data);\n\t\t\t}\n\t\t\taction(ob, getterType && viewModels[getterType.type], prop, parentRef);\n\t\t}\n\t}\n\n\tfunction map(data) {\n\t\tdata = data + \"\" === data\n\t\t\t? JSON.parse(data) // Accept JSON string\n\t\t\t: data;            // or object/array\n\t\tvar l, prop, childOb, parentRef,\n\t\t\tj = 0,\n\t\t\tob = data,\n\t\t\tarr = [];\n\n\t\tif ($isArray(data)) {\n\t\t\tdata = data || [];\n\t\t\tl = data.length;\n\t\t\tfor (; j<l; j++) {\n\t\t\t\tarr.push(this.map(data[j]));\n\t\t\t}\n\t\t\tarr._is = name;\n\t\t\tarr.unmap = unmap;\n\t\t\tarr.merge = merge;\n\t\t\treturn arr;\n\t\t}\n\n\t\tif (data) {\n\t\t\titerate(data, function(ob, viewModel) {\n\t\t\t\tif (viewModel) { // Iterate to build getters arg array (value, or mapped value)\n\t\t\t\t\tob = viewModel.map(ob);\n\t\t\t\t}\n\t\t\t\tarr.push(ob);\n\t\t\t});\n\t\t\tob = this.apply(this, arr); // Instantiate this View Model, passing getters args array to constructor\n\t\t\tj = getterCount;\n\t\t\twhile (j--) {\n\t\t\t\tchildOb = arr[j];\n\t\t\t\tparentRef = getters[j].parentRef;\n\t\t\t\tif (parentRef && childOb && childOb.unmap) {\n\t\t\t\t\tif ($isArray(childOb)) {\n\t\t\t\t\t\tl = childOb.length;\n\t\t\t\t\t\twhile (l--) {\n\t\t\t\t\t\t\taddParentRef(childOb[l], parentRef, ob);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\taddParentRef(childOb, parentRef, ob);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (prop in data) { // Copy over any other properties. that are not get/set properties\n\t\t\t\tif (prop !== $expando && !getterNames[prop]) {\n\t\t\t\t\tob[prop] = data[prop];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ob;\n\t}\n\n\tfunction merge(data, parent, parentRef) {\n\t\tdata = data + \"\" === data\n\t\t\t? JSON.parse(data) // Accept JSON string\n\t\t\t: data;            // or object/array\n\n\t\tvar j, l, m, prop, mod, found, assigned, ob, newModArr, childOb,\n\t\t\tk = 0,\n\t\t\tmodel = this;\n\n\t\tif ($isArray(model)) {\n\t\t\tassigned = {};\n\t\t\tnewModArr = [];\n\t\t\tl = data.length;\n\t\t\tm = model.length;\n\t\t\tfor (; k<l; k++) {\n\t\t\t\tob = data[k];\n\t\t\t\tfound = false;\n\t\t\t\tfor (j=0; j<m && !found; j++) {\n\t\t\t\t\tif (assigned[j]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tmod = model[j];\n\n\t\t\t\t\tif (id) {\n\t\t\t\t\t\tassigned[j] = found = id + \"\" === id\n\t\t\t\t\t\t? (ob[id] && (getterNames[id] ? mod[id]() : mod[id]) === ob[id])\n\t\t\t\t\t\t: id(mod, ob);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (found) {\n\t\t\t\t\tmod.merge(ob);\n\t\t\t\t\tnewModArr.push(mod);\n\t\t\t\t} else {\n\t\t\t\t\tnewModArr.push(childOb = vm.map(ob));\n\t\t\t\t\tif (parentRef) {\n\t\t\t\t\t\taddParentRef(childOb, parentRef, parent);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($observable) {\n\t\t\t\t$observable(model).refresh(newModArr, true);\n\t\t\t} else {\n\t\t\t\tmodel.splice.apply(model, [0, model.length].concat(newModArr));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\titerate(data, function(ob, viewModel, getter, parentRef) {\n\t\t\tif (viewModel) {\n\t\t\t\tmodel[getter]().merge(ob, model, parentRef); // Update typed property\n\t\t\t} else if (model[getter]() !== ob) {\n\t\t\t\tmodel[getter](ob); // Update non-typed property\n\t\t\t}\n\t\t});\n\t\tfor (prop in data) {\n\t\t\tif (prop !== $expando && !getterNames[prop]) {\n\t\t\t\tmodel[prop] = data[prop];\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction unmap() {\n\t\tvar ob, prop, getterType, arr, value,\n\t\t\tk = 0,\n\t\t\tmodel = this;\n\n\t\tfunction unmapArray(modelArr) {\n\t\t\tvar arr = [],\n\t\t\t\ti = 0,\n\t\t\t\tl = modelArr.length;\n\t\t\tfor (; i<l; i++) {\n\t\t\t\tarr.push(modelArr[i].unmap());\n\t\t\t}\n\t\t\treturn arr;\n\t\t}\n\n\t\tif ($isArray(model)) {\n\t\t\treturn unmapArray(model);\n\t\t}\n\t\tob = {};\n\t\tfor (; k < getterCount; k++) {\n\t\t\tprop = getters[k];\n\t\t\tgetterType = undefined;\n\t\t\tif (prop + \"\" !== prop) {\n\t\t\t\tgetterType = prop;\n\t\t\t\tprop = getterType.getter;\n\t\t\t}\n\t\t\tvalue = model[prop]();\n\t\t\tob[prop] = getterType && value && viewModels[getterType.type]\n\t\t\t\t? $isArray(value)\n\t\t\t\t\t? unmapArray(value)\n\t\t\t\t\t: value.unmap()\n\t\t\t\t: value;\n\t\t}\n\t\tfor (prop in model) {\n\t\t\tif (model.hasOwnProperty(prop) && (prop.charAt(0) !== \"_\" || !getterNames[prop.slice(1)]) && prop !== $expando && !$isFunction(model[prop])) {\n\t\t\t\tob[prop] = model[prop];\n\t\t\t}\n\t\t}\n\t\treturn ob;\n\t}\n\n\tJsvVm.prototype = proto;\n\n\tfor (i=0; i < getterCount; i++) {\n\t\t(function(getter) {\n\t\t\tgetter = getter.getter || getter;\n\t\t\tgetterNames[getter] = i+1;\n\t\t\tvar privField = \"_\" + getter;\n\n\t\t\targs += (args ? \",\" : \"\") + getter;\n\t\t\tcnstr += \"this.\" + privField + \" = \" + getter + \";\\n\";\n\t\t\tproto[getter] = proto[getter] || function(val) {\n\t\t\t\tif (!arguments.length) {\n\t\t\t\t\treturn this[privField]; // If there is no argument, use as a getter\n\t\t\t\t}\n\t\t\t\tif ($observable) {\n\t\t\t\t\t$observable(this).setProperty(getter, val);\n\t\t\t\t} else {\n\t\t\t\t\tthis[privField] = val;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif ($observable) {\n\t\t\t\tproto[getter].set = proto[getter].set || function(val) {\n\t\t\t\t\tthis[privField] = val; // Setter called by observable property change\n\t\t\t\t};\n\t\t\t}\n\t\t})(getters[i]);\n\t}\n\n\t// Constructor for new viewModel instance.\n\tcnstr = new Function(args, cnstr);\n\n\tconstructor = function() {\n\t\tcnstr.apply(this, arguments);\n\t\t// Pass additional parentRef str and parent obj to have a parentRef pointer on instance\n\t\tif (parent = arguments[getterCount + 1]) {\n\t\t\taddParentRef(this, arguments[getterCount], parent);\n\t\t}\n\t};\n\n\tconstructor.prototype = proto;\n\tproto.constructor = constructor;\n\n\tvm.map = map;\n\tvm.getters = getters;\n\tvm.extend = extend;\n\tvm.id = id;\n\treturn vm;\n}\n\nfunction tmplObject(markup, options) {\n\t// Template object constructor\n\tvar htmlTag,\n\t\twrapMap = $subSettingsAdvanced._wm || {}, // Only used in JsViews. Otherwise empty: {}\n\t\ttmpl = {\n\t\t\ttmpls: [],\n\t\t\tlinks: {}, // Compiled functions for link expressions\n\t\t\tbnds: [],\n\t\t\t_is: \"template\",\n\t\t\trender: renderContent\n\t\t};\n\n\tif (options) {\n\t\ttmpl = $extend(tmpl, options);\n\t}\n\n\ttmpl.markup = markup;\n\tif (!tmpl.htmlTag) {\n\t\t// Set tmpl.tag to the top-level HTML tag used in the template, if any...\n\t\thtmlTag = rFirstElem.exec(markup);\n\t\ttmpl.htmlTag = htmlTag ? htmlTag[1].toLowerCase() : \"\";\n\t}\n\thtmlTag = wrapMap[tmpl.htmlTag];\n\tif (htmlTag && htmlTag !== wrapMap.div) {\n\t\t// When using JsViews, we trim templates which are inserted into HTML contexts where text nodes are not rendered (i.e. not 'Phrasing Content').\n\t\t// Currently not trimmed for <li> tag. (Not worth adding perf cost)\n\t\ttmpl.markup = $.trim(tmpl.markup);\n\t}\n\n\treturn tmpl;\n}\n\n//==============\n// registerStore\n//==============\n\n/**\n* Internal. Register a store type (used for template, tags, helpers, converters)\n*/\nfunction registerStore(storeName, storeSettings) {\n\n/**\n* Generic store() function to register item, named item, or hash of items\n* Also used as hash to store the registered items\n* Used as implementation of $.templates(), $.views.templates(), $.views.tags(), $.views.helpers() and $.views.converters()\n*\n* @param {string|hash} name         name - or selector, in case of $.templates(). Or hash of items\n* @param {any}         [item]       (e.g. markup for named template)\n* @param {template}    [parentTmpl] For item being registered as private resource of template\n* @returns {any|$.views} item, e.g. compiled template - or $.views in case of registering hash of items\n*/\n\tfunction theStore(name, item, parentTmpl) {\n\t\t// The store is also the function used to add items to the store. e.g. $.templates, or $.views.tags\n\n\t\t// For store of name 'thing', Call as:\n\t\t//    $.views.things(items[, parentTmpl]),\n\t\t// or $.views.things(name[, item, parentTmpl])\n\n\t\tvar compile, itemName, thisStore, cnt,\n\t\t\tonStore = $sub.onStore[storeName];\n\n\t\tif (name && typeof name === OBJECT && !name.nodeType && !name.markup && !name.getTgt && !(storeName === \"viewModel\" && name.getters || name.extend)) {\n\t\t\t// Call to $.views.things(items[, parentTmpl]),\n\n\t\t\t// Adding items to the store\n\t\t\t// If name is a hash, then item is parentTmpl. Iterate over hash and call store for key.\n\t\t\tfor (itemName in name) {\n\t\t\t\ttheStore(itemName, name[itemName], item);\n\t\t\t}\n\t\t\treturn item || $views;\n\t\t}\n\t\t// Adding a single unnamed item to the store\n\t\tif (name && \"\" + name !== name) { // name must be a string\n\t\t\tparentTmpl = item;\n\t\t\titem = name;\n\t\t\tname = undefined;\n\t\t}\n\t\tthisStore = parentTmpl\n\t\t\t? storeName === \"viewModel\"\n\t\t\t\t? parentTmpl\n\t\t\t\t: (parentTmpl[storeNames] = parentTmpl[storeNames] || {})\n\t\t\t: theStore;\n\t\tcompile = storeSettings.compile;\n\n\t\tif (item === undefined) {\n\t\t\titem = compile ? name : thisStore[name];\n\t\t\tname = undefined;\n\t\t}\n\t\tif (item === null) {\n\t\t\t// If item is null, delete this entry\n\t\t\tif (name) {\n\t\t\t\tdelete thisStore[name];\n\t\t\t}\n\t\t} else {\n\t\t\tif (compile) {\n\t\t\t\titem = compile.call(thisStore, name, item, parentTmpl, 0) || {};\n\t\t\t\titem._is = storeName; // Only do this for compiled objects (tags, templates...)\n\t\t\t}\n\t\t\tif (name) {\n\t\t\t\tthisStore[name] = item;\n\t\t\t}\n\t\t}\n\t\tif (onStore) {\n\t\t\t// e.g. JsViews integration\n\t\t\tonStore(name, item, parentTmpl, compile);\n\t\t}\n\t\treturn item;\n\t}\n\n\tvar storeNames = storeName + \"s\";\n\t$views[storeNames] = theStore;\n}\n\n/**\n* Add settings such as:\n* $.views.settings.allowCode(true)\n* @param {boolean} value\n* @returns {Settings}\n*\n* allowCode = $.views.settings.allowCode()\n* @returns {boolean}\n*/\nfunction addSetting(st) {\n\t$viewsSettings[st] = $viewsSettings[st] || function(value) {\n\t\treturn arguments.length\n\t\t\t? ($subSettings[st] = value, $viewsSettings)\n\t\t\t: $subSettings[st];\n\t};\n}\n\n//========================\n// dataMap for render only\n//========================\n\nfunction dataMap(mapDef) {\n\tfunction Map(source, options) {\n\t\tthis.tgt = mapDef.getTgt(source, options);\n\t\toptions.map = this;\n\t}\n\n\tif ($isFunction(mapDef)) {\n\t\t// Simple map declared as function\n\t\tmapDef = {\n\t\t\tgetTgt: mapDef\n\t\t};\n\t}\n\n\tif (mapDef.baseMap) {\n\t\tmapDef = $extend($extend({}, mapDef.baseMap), mapDef);\n\t}\n\n\tmapDef.map = function(source, options) {\n\t\treturn new Map(source, options);\n\t};\n\treturn mapDef;\n}\n\n//==============\n// renderContent\n//==============\n\n/** Render the template as a string, using the specified data and helpers/context\n* $(\"#tmpl\").render(), tmpl.render(), tagCtx.render(), $.render.namedTmpl()\n*\n* @param {any}        data\n* @param {hash}       [context]           helpers or context\n* @param {boolean}    [noIteration]\n* @param {View}       [parentView]        internal\n* @param {string}     [key]               internal\n* @param {function}   [onRender]          internal\n* @returns {string}   rendered template   internal\n*/\nfunction renderContent(data, context, noIteration, parentView, key, onRender) {\n\tvar i, l, tag, tmpl, tagCtx, isTopRenderCall, prevData, prevIndex,\n\t\tview = parentView,\n\t\tresult = \"\";\n\n\tif (context === true) {\n\t\tnoIteration = context; // passing boolean as second param - noIteration\n\t\tcontext = undefined;\n\t} else if (typeof context !== OBJECT) {\n\t\tcontext = undefined; // context must be a boolean (noIteration) or a plain object\n\t}\n\n\tif (tag = this.tag) {\n\t\t// This is a call from renderTag or tagCtx.render(...)\n\t\ttagCtx = this;\n\t\tview = view || tagCtx.view;\n\t\ttmpl = view._getTmpl(tag.template || tagCtx.tmpl);\n\t\tif (!arguments.length) {\n\t\t\tdata = tag.contentCtx && $isFunction(tag.contentCtx)\n\t\t\t\t? data = tag.contentCtx(data)\n\t\t\t\t: view; // Default data context for wrapped block content is the first argument\n\t\t}\n\t} else {\n\t\t// This is a template.render(...) call\n\t\ttmpl = this;\n\t}\n\n\tif (tmpl) {\n\t\tif (!parentView && data && data._is === \"view\") {\n\t\t\tview = data; // When passing in a view to render or link (and not passing in a parent view) use the passed-in view as parentView\n\t\t}\n\n\t\tif (view && data === view) {\n\t\t\t// Inherit the data from the parent view.\n\t\t\tdata = view.data;\n\t\t}\n\n\t\tisTopRenderCall = !view;\n\t\tisRenderCall = isRenderCall || isTopRenderCall;\n\t\tif (isTopRenderCall) {\n\t\t\t(context = context || {}).root = data; // Provide ~root as shortcut to top-level data.\n\t\t}\n\t\tif (!isRenderCall || $subSettingsAdvanced.useViews || tmpl.useViews || view && view !== topView) {\n\t\t\tresult = renderWithViews(tmpl, data, context, noIteration, view, key, onRender, tag);\n\t\t} else {\n\t\t\tif (view) { // In a block\n\t\t\t\tprevData = view.data;\n\t\t\t\tprevIndex = view.index;\n\t\t\t\tview.index = indexStr;\n\t\t\t} else {\n\t\t\t\tview = topView;\n\t\t\t\tprevData = view.data;\n\t\t\t\tview.data = data;\n\t\t\t\tview.ctx = context;\n\t\t\t}\n\t\t\tif ($isArray(data) && !noIteration) {\n\t\t\t\t// Create a view for the array, whose child views correspond to each data item. (Note: if key and parentView are passed in\n\t\t\t\t// along with parent view, treat as insert -e.g. from view.addViews - so parentView is already the view item for array)\n\t\t\t\tfor (i = 0, l = data.length; i < l; i++) {\n\t\t\t\t\tview.index = i;\n\t\t\t\t\tview.data = data[i];\n\t\t\t\t\tresult += tmpl.fn(data[i], view, $sub);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tview.data = data;\n\t\t\t\tresult += tmpl.fn(data, view, $sub);\n\t\t\t}\n\t\t\tview.data = prevData;\n\t\t\tview.index = prevIndex;\n\t\t}\n\t\tif (isTopRenderCall) {\n\t\t\tisRenderCall = undefined;\n\t\t}\n\t}\n\treturn result;\n}\n\nfunction renderWithViews(tmpl, data, context, noIteration, view, key, onRender, tag) {\n\t// Render template against data as a tree of subviews (nested rendered template instances), or as a string (top-level template).\n\t// If the data is the parent view, treat as noIteration, re-render with the same data context.\n\t// tmpl can be a string (e.g. rendered by a tag.render() method), or a compiled template.\n\tvar i, l, newView, childView, itemResult, swapContent, contentTmpl, outerOnRender, tmplName, itemVar, newCtx, tagCtx, noLinking,\n\t\tresult = \"\";\n\n\tif (tag) {\n\t\t// This is a call from renderTag or tagCtx.render(...)\n\t\ttmplName = tag.tagName;\n\t\ttagCtx = tag.tagCtx;\n\t\tcontext = context ? extendCtx(context, tag.ctx) : tag.ctx;\n\n\t\tif (tmpl === view.content) { // {{xxx tmpl=#content}}\n\t\t\tcontentTmpl = tmpl !== view.ctx._wrp // We are rendering the #content\n\t\t\t\t? view.ctx._wrp // #content was the tagCtx.props.tmpl wrapper of the block content - so within this view, #content will now be the view.ctx._wrp block content\n\t\t\t\t: undefined; // #content was the view.ctx._wrp block content - so within this view, there is no longer any #content to wrap.\n\t\t} else if (tmpl !== tagCtx.content) {\n\t\t\tif (tmpl === tag.template) { // Rendering {{tag}} tag.template, replacing block content.\n\t\t\t\tcontentTmpl = tagCtx.tmpl; // Set #content to block content (or wrapped block content if tagCtx.props.tmpl is set)\n\t\t\t\tcontext._wrp = tagCtx.content; // Pass wrapped block content to nested views\n\t\t\t} else { // Rendering tagCtx.props.tmpl wrapper\n\t\t\t\tcontentTmpl = tagCtx.content || view.content; // Set #content to wrapped block content\n\t\t\t}\n\t\t} else {\n\t\t\tcontentTmpl = view.content; // Nested views inherit same wrapped #content property\n\t\t}\n\n\t\tif (tagCtx.props.link === false) {\n\t\t\t// link=false setting on block tag\n\t\t\t// We will override inherited value of link by the explicit setting link=false taken from props\n\t\t\t// The child views of an unlinked view are also unlinked. So setting child back to true will not have any effect.\n\t\t\tcontext = context || {};\n\t\t\tcontext.link = false;\n\t\t}\n\t}\n\n\tif (view) {\n\t\tonRender = onRender || view._.onRender;\n\t\tnoLinking = context && context.link === false;\n\n\t\tif (noLinking && view._.nl) {\n\t\t\tonRender = undefined;\n\t\t}\n\n\t\tcontext = extendCtx(context, view.ctx);\n\t\ttagCtx = !tag && view.tag\n\t\t\t? view.tag.tagCtxs[view.tagElse]\n\t\t\t: tagCtx;\n\t}\n\n\tif (itemVar = tagCtx && tagCtx.props.itemVar) {\n\t\tif (itemVar[0] !== \"~\") {\n\t\t\tsyntaxError(\"Use itemVar='~myItem'\");\n\t\t}\n\t\titemVar = itemVar.slice(1);\n\t}\n\n\tif (key === true) {\n\t\tswapContent = true;\n\t\tkey = 0;\n\t}\n\n\t// If link===false, do not call onRender, so no data-linking marker nodes\n\tif (onRender && tag && tag._.noVws) {\n\t\tonRender = undefined;\n\t}\n\touterOnRender = onRender;\n\tif (onRender === true) {\n\t\t// Used by view.refresh(). Don't create a new wrapper view.\n\t\touterOnRender = undefined;\n\t\tonRender = view._.onRender;\n\t}\n\t// Set additional context on views created here, (as modified context inherited from the parent, and to be inherited by child views)\n\tcontext = tmpl.helpers\n\t\t? extendCtx(tmpl.helpers, context)\n\t\t: context;\n\n\tnewCtx = context;\n\tif ($isArray(data) && !noIteration) {\n\t\t// Create a view for the array, whose child views correspond to each data item. (Note: if key and view are passed in\n\t\t// along with parent view, treat as insert -e.g. from view.addViews - so view is already the view item for array)\n\t\tnewView = swapContent\n\t\t\t? view\n\t\t\t: (key !== undefined && view)\n\t\t\t\t|| new View(context, \"array\", view, data, tmpl, key, onRender, contentTmpl);\n\t\tnewView._.nl= noLinking;\n\t\tif (view && view._.useKey) {\n\t\t\t// Parent is not an 'array view'\n\t\t\tnewView._.bnd = !tag || tag._.bnd && tag; // For array views that are data bound for collection change events, set the\n\t\t\t// view._.bnd property to true for top-level link() or data-link=\"{for}\", or to the tag instance for a data-bound tag, e.g. {^{for ...}}\n\t\t\tnewView.tag = tag;\n\t\t}\n\t\tfor (i = 0, l = data.length; i < l; i++) {\n\t\t\t// Create a view for each data item.\n\t\t\tchildView = new View(newCtx, \"item\", newView, data[i], tmpl, (key || 0) + i, onRender, newView.content);\n\t\t\tif (itemVar) {\n\t\t\t\t(childView.ctx = $extend({}, newCtx))[itemVar] = $sub._cp(data[i], \"#data\", childView);\n\t\t\t}\n\t\t\titemResult = tmpl.fn(data[i], childView, $sub);\n\t\t\tresult += newView._.onRender ? newView._.onRender(itemResult, childView) : itemResult;\n\t\t}\n\t} else {\n\t\t// Create a view for singleton data object. The type of the view will be the tag name, e.g. \"if\" or \"mytag\" except for\n\t\t// \"item\", \"array\" and \"data\" views. A \"data\" view is from programmatic render(object) against a 'singleton'.\n\t\tnewView = swapContent ? view : new View(newCtx, tmplName || \"data\", view, data, tmpl, key, onRender, contentTmpl);\n\n\t\tif (itemVar) {\n\t\t\t(newView.ctx = $extend({}, newCtx))[itemVar] = $sub._cp(data, \"#data\", newView);\n\t\t}\n\n\t\tnewView.tag = tag;\n\t\tnewView._.nl = noLinking;\n\t\tresult += tmpl.fn(data, newView, $sub);\n\t}\n\tif (tag) {\n\t\tnewView.tagElse = tagCtx.index;\n\t\ttagCtx.contentView = newView;\n\t}\n\treturn outerOnRender ? outerOnRender(result, newView) : result;\n}\n\n//===========================\n// Build and compile template\n//===========================\n\n// Generate a reusable function that will serve to render a template against data\n// (Compile AST then build template function)\n\nfunction onRenderError(e, view, fallback) {\n\tvar message = fallback !== undefined\n\t\t? $isFunction(fallback)\n\t\t\t? fallback.call(view.data, e, view)\n\t\t\t: fallback || \"\"\n\t\t: \"{Error: \" + (e.message||e) + \"}\";\n\n\tif ($subSettings.onError && (fallback = $subSettings.onError.call(view.data, e, fallback && message, view)) !== undefined) {\n\t\tmessage = fallback; // There is a settings.debugMode(handler) onError override. Call it, and use return value (if any) to replace message\n\t}\n\treturn view && !view._lc ? $converters.html(message) : message; // For data-link=\\\"{... onError=...}\"... See onDataLinkedTagChange\n}\n\nfunction error(message) {\n\tthrow new $sub.Err(message);\n}\n\nfunction syntaxError(message) {\n\terror(\"Syntax error\\n\" + message);\n}\n\nfunction tmplFn(markup, tmpl, isLinkExpr, convertBack, hasElse) {\n\t// Compile markup to AST (abtract syntax tree) then build the template function code from the AST nodes\n\t// Used for compiling templates, and also by JsViews to build functions for data link expressions\n\n\t//==== nested functions ====\n\tfunction pushprecedingContent(shift) {\n\t\tshift -= loc;\n\t\tif (shift) {\n\t\t\tcontent.push(markup.substr(loc, shift).replace(rNewLine, \"\\\\n\"));\n\t\t}\n\t}\n\n\tfunction blockTagCheck(tagName, block) {\n\t\tif (tagName) {\n\t\t\ttagName += '}}';\n\t\t\t//\t\t\t'{{include}} block has {{/for}} with no open {{for}}'\n\t\t\tsyntaxError((\n\t\t\t\tblock\n\t\t\t\t\t? '{{' + block + '}} block has {{/' + tagName + ' without {{' + tagName\n\t\t\t\t\t: 'Unmatched or missing {{/' + tagName) + ', in template:\\n' + markup);\n\t\t}\n\t}\n\n\tfunction parseTag(all, bind, tagName, converter, colon, html, codeTag, params, slash, bind2, closeBlock, index) {\n/*\n\n     bind     tagName         cvt   cln html code    params            slash   bind2         closeBlk  comment\n/(?:{(\\^)?{(?:(\\w+(?=[\\/\\s}]))|(\\w+)?(:)|(>)|(\\*))\\s*((?:[^}]|}(?!}))*?)(\\/)?|{(\\^)?{(?:(?:\\/(\\w+))\\s*|!--[\\s\\S]*?--))}}/g\n\n(?:\n  {(\\^)?{            bind\n  (?:\n    (\\w+             tagName\n      (?=[\\/\\s}])\n    )\n    |\n    (\\w+)?(:)        converter colon\n    |\n    (>)              html\n    |\n    (\\*)             codeTag\n  )\n  \\s*\n  (                  params\n    (?:[^}]|}(?!}))*?\n  )\n  (\\/)?              slash\n  |\n  {(\\^)?{            bind2\n  (?:\n    (?:\\/(\\w+))\\s*   closeBlock\n    |\n    !--[\\s\\S]*?--    comment\n  )\n)\n}}/g\n\n*/\n\t\tif (codeTag && bind || slash && !tagName || params && params.slice(-1) === \":\" || bind2) {\n\t\t\tsyntaxError(all);\n\t\t}\n\n\t\t// Build abstract syntax tree (AST): [tagName, converter, params, content, hash, bindings, contentMarkup]\n\t\tif (html) {\n\t\t\tcolon = \":\";\n\t\t\tconverter = HTML;\n\t\t}\n\t\tslash = slash || isLinkExpr && !hasElse;\n\n\t\tvar late, openTagName, isLateOb,\n\t\t\tpathBindings = (bind || isLinkExpr) && [[]], // pathBindings is an array of arrays for arg bindings and a hash of arrays for prop bindings\n\t\t\tprops = \"\",\n\t\t\targs = \"\",\n\t\t\tctxProps = \"\",\n\t\t\tparamsArgs = \"\",\n\t\t\tparamsProps = \"\",\n\t\t\tparamsCtxProps = \"\",\n\t\t\tonError = \"\",\n\t\t\tuseTrigger = \"\",\n\t\t\t// Block tag if not self-closing and not {{:}} or {{>}} (special case) and not a data-link expression\n\t\t\tblock = !slash && !colon;\n\n\t\t//==== nested helper function ====\n\t\ttagName = tagName || (params = params || \"#data\", colon); // {{:}} is equivalent to {{:#data}}\n\t\tpushprecedingContent(index);\n\t\tloc = index + all.length; // location marker - parsed up to here\n\t\tif (codeTag) {\n\t\t\tif (allowCode) {\n\t\t\t\tcontent.push([\"*\", \"\\n\" + params.replace(/^:/, \"ret+= \").replace(rUnescapeQuotes, \"$1\") + \";\\n\"]);\n\t\t\t}\n\t\t} else if (tagName) {\n\t\t\tif (tagName === \"else\") {\n\t\t\t\tif (rTestElseIf.test(params)) {\n\t\t\t\t\tsyntaxError('For \"{{else if expr}}\" use \"{{else expr}}\"');\n\t\t\t\t}\n\t\t\t\tpathBindings = current[9] && [[]];\n\t\t\t\tcurrent[10] = markup.substring(current[10], index); // contentMarkup for block tag\n\t\t\t\topenTagName = current[11] || current[0] || syntaxError(\"Mismatched: \" + all);\n\t\t\t\t// current[0] is tagName, but for {{else}} nodes, current[11] is tagName of preceding open tag\n\t\t\t\tcurrent = stack.pop();\n\t\t\t\tcontent = current[2];\n\t\t\t\tblock = true;\n\t\t\t}\n\t\t\tif (params) {\n\t\t\t\t// remove newlines from the params string, to avoid compiled code errors for unterminated strings\n\t\t\t\tparseParams(params.replace(rNewLine, \" \"), pathBindings, tmpl, isLinkExpr)\n\t\t\t\t\t.replace(rBuildHash, function(all, onerror, isCtxPrm, key, keyToken, keyValue, arg, param) {\n\t\t\t\t\t\tif (key === \"this:\") {\n\t\t\t\t\t\t\tkeyValue = \"undefined\"; // this=some.path is always a to parameter (one-way), so don't need to compile/evaluate some.path initialization\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (param) {\n\t\t\t\t\t\t\tisLateOb = isLateOb || param[0] === \"@\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tkey = \"'\" + keyToken + \"':\";\n\t\t\t\t\t\tif (arg) {\n\t\t\t\t\t\t\targs += isCtxPrm + keyValue + \",\";\n\t\t\t\t\t\t\tparamsArgs += \"'\" + param + \"',\";\n\t\t\t\t\t\t} else if (isCtxPrm) { // Contextual parameter, ~foo=expr\n\t\t\t\t\t\t\tctxProps += key + 'j._cp(' + keyValue + ',\"' + param + '\",view),';\n\t\t\t\t\t\t\t// Compiled code for evaluating tagCtx on a tag will have: ctx:{'foo':j._cp(compiledExpr, \"expr\", view)}\n\t\t\t\t\t\t\tparamsCtxProps += key + \"'\" + param + \"',\";\n\t\t\t\t\t\t} else if (onerror) {\n\t\t\t\t\t\t\tonError += keyValue;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (keyToken === \"trigger\") {\n\t\t\t\t\t\t\t\tuseTrigger += keyValue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (keyToken === \"lateRender\") {\n\t\t\t\t\t\t\t\tlate = param !== \"false\"; // Render after first pass\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprops += key + keyValue + \",\";\n\t\t\t\t\t\t\tparamsProps += key + \"'\" + param + \"',\";\n\t\t\t\t\t\t\thasHandlers = hasHandlers || rHasHandlers.test(keyToken);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t}).slice(0, -1);\n\t\t\t}\n\n\t\t\tif (pathBindings && pathBindings[0]) {\n\t\t\t\tpathBindings.pop(); // Remove the binding that was prepared for next arg. (There is always an extra one ready).\n\t\t\t}\n\n\t\t\tnewNode = [\n\t\t\t\t\ttagName,\n\t\t\t\t\tconverter || !!convertBack || hasHandlers || \"\",\n\t\t\t\t\tblock && [],\n\t\t\t\t\tparsedParam(paramsArgs || (tagName === \":\" ? \"'#data',\" : \"\"), paramsProps, paramsCtxProps), // {{:}} equivalent to {{:#data}}\n\t\t\t\t\tparsedParam(args || (tagName === \":\" ? \"data,\" : \"\"), props, ctxProps),\n\t\t\t\t\tonError,\n\t\t\t\t\tuseTrigger,\n\t\t\t\t\tlate,\n\t\t\t\t\tisLateOb,\n\t\t\t\t\tpathBindings || 0\n\t\t\t\t];\n\t\t\tcontent.push(newNode);\n\t\t\tif (block) {\n\t\t\t\tstack.push(current);\n\t\t\t\tcurrent = newNode;\n\t\t\t\tcurrent[10] = loc; // Store current location of open tag, to be able to add contentMarkup when we reach closing tag\n\t\t\t\tcurrent[11] = openTagName; // Used for checking syntax (matching close tag)\n\t\t\t}\n\t\t} else if (closeBlock) {\n\t\t\tblockTagCheck(closeBlock !== current[0] && closeBlock !== current[11] && closeBlock, current[0]); // Check matching close tag name\n\t\t\tcurrent[10] = markup.substring(current[10], index); // contentMarkup for block tag\n\t\t\tcurrent = stack.pop();\n\t\t}\n\t\tblockTagCheck(!current && closeBlock);\n\t\tcontent = current[2];\n\t}\n\t//==== /end of nested functions ====\n\n\tvar i, result, newNode, hasHandlers, bindings,\n\t\tallowCode = $subSettings.allowCode || tmpl && tmpl.allowCode\n\t\t\t|| $viewsSettings.allowCode === true, // include direct setting of settings.allowCode true for backward compat only\n\t\tastTop = [],\n\t\tloc = 0,\n\t\tstack = [],\n\t\tcontent = astTop,\n\t\tcurrent = [,,astTop];\n\n\tif (allowCode && tmpl._is) {\n\t\ttmpl.allowCode = allowCode;\n\t}\n\n//TODO\tresult = tmplFnsCache[markup]; // Only cache if template is not named and markup length < ...,\n//and there are no bindings or subtemplates?? Consider standard optimization for data-link=\"a.b.c\"\n//\t\tif (result) {\n//\t\t\ttmpl.fn = result;\n//\t\t} else {\n\n//\t\tresult = markup;\n\tif (isLinkExpr) {\n\t\tif (convertBack !== undefined) {\n\t\t\tmarkup = markup.slice(0, -convertBack.length - 2) + delimCloseChar0;\n\t\t}\n\t\tmarkup = delimOpenChar0 + markup + delimCloseChar1;\n\t}\n\n\tblockTagCheck(stack[0] && stack[0][2].pop()[0]);\n\t// Build the AST (abstract syntax tree) under astTop\n\tmarkup.replace(rTag, parseTag);\n\n\tpushprecedingContent(markup.length);\n\n\tif (loc = astTop[astTop.length - 1]) {\n\t\tblockTagCheck(\"\" + loc !== loc && (+loc[10] === loc[10]) && loc[0]);\n\t}\n//\t\t\tresult = tmplFnsCache[markup] = buildCode(astTop, tmpl);\n//\t\t}\n\n\tif (isLinkExpr) {\n\t\tresult = buildCode(astTop, markup, isLinkExpr);\n\t\tbindings = [];\n\t\ti = astTop.length;\n\t\twhile (i--) {\n\t\t\tbindings.unshift(astTop[i][9]); // With data-link expressions, pathBindings array for tagCtx[i] is astTop[i][9]\n\t\t}\n\t\tsetPaths(result, bindings);\n\t} else {\n\t\tresult = buildCode(astTop, tmpl);\n\t}\n\treturn result;\n}\n\nfunction setPaths(fn, pathsArr) {\n\tvar key, paths,\n\t\ti = 0,\n\t\tl = pathsArr.length;\n\tfn.deps = [];\n\tfn.paths = []; // The array of path binding (array/dictionary)s for each tag/else block's args and props\n\tfor (; i < l; i++) {\n\t\tfn.paths.push(paths = pathsArr[i]);\n\t\tfor (key in paths) {\n\t\t\tif (key !== \"_jsvto\" && paths.hasOwnProperty(key) && paths[key].length && !paths[key].skp) {\n\t\t\t\tfn.deps = fn.deps.concat(paths[key]); // deps is the concatenation of the paths arrays for the different bindings\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction parsedParam(args, props, ctx) {\n\treturn [args.slice(0, -1), props.slice(0, -1), ctx.slice(0, -1)];\n}\n\nfunction paramStructure(paramCode, paramVals) {\n\treturn '\\n\\tparams:{args:[' + paramCode[0] + '],\\n\\tprops:{' + paramCode[1] + '}'\n\t\t+ (paramCode[2] ? ',\\n\\tctx:{' + paramCode[2] + '}' : \"\")\n\t\t+ '},\\n\\targs:[' + paramVals[0] + '],\\n\\tprops:{' + paramVals[1] + '}'\n\t\t+ (paramVals[2] ? ',\\n\\tctx:{' + paramVals[2] + '}' : \"\");\n}\n\nfunction parseParams(params, pathBindings, tmpl, isLinkExpr) {\n\n\tfunction parseTokens(all, lftPrn0, lftPrn, bound, path, operator, err, eq, path2, late, prn,\n\t\t\t\t\t\t\t\t\t\t\t\tcomma, lftPrn2, apos, quot, rtPrn, rtPrnDot, prn2, space, index, full) {\n\t// /(\\()(?=\\s*\\()|(?:([([])\\s*)?(?:(\\^?)(~?[\\w$.^]+)?\\s*((\\+\\+|--)|\\+|-|~(?![\\w$])|&&|\\|\\||===|!==|==|!=|<=|>=|[<>%*:?\\/]|(=))\\s*|(!*?(@)?[#~]?[\\w$.^]+)([([])?)|(,\\s*)|(?:(\\()\\s*)?\\\\?(?:(')|(\"))|(?:\\s*(([)\\]])(?=[.^]|\\s*$|[^([])|[)\\]])([([]?))|(\\s+)/g,\n\t//lftPrn0           lftPrn         bound     path               operator     err                                          eq      path2 late            prn      comma  lftPrn2          apos quot        rtPrn  rtPrnDot                  prn2     space\n\t// (left paren? followed by (path? followed by operator) or (path followed by paren?)) or comma or apos or quot or right paren or space\n\n\t\tfunction parsePath(allPath, not, object, helper, view, viewProperty, pathTokens, leafToken) {\n\t\t\t// /^(!*?)(?:null|true|false|\\d[\\d.]*|([\\w$]+|\\.|~([\\w$]+)|#(view|([\\w$]+))?)([\\w$.^]*?)(?:[.[^]([\\w$]+)\\]?)?)$/g,\n\t\t\t//    not                               object     helper    view  viewProperty pathTokens      leafToken\n\t\t\tsubPath = object === \".\";\n\t\t\tif (object) {\n\t\t\t\tpath = path.slice(not.length);\n\t\t\t\tif (/^\\.?constructor$/.test(leafToken||path)) {\n\t\t\t\t\tsyntaxError(allPath);\n\t\t\t\t}\n\t\t\t\tif (!subPath) {\n\t\t\t\t\tallPath = (late // late path @a.b.c: not throw on 'property of undefined' if a undefined, and will use _getOb() after linking to resolve late.\n\t\t\t\t\t\t\t? (isLinkExpr ? '' : '(ltOb.lt=ltOb.lt||') + '(ob='\n\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t)\n\t\t\t\t\t\t+ (helper\n\t\t\t\t\t\t\t? 'view.ctxPrm(\"' + helper + '\")'\n\t\t\t\t\t\t\t: view\n\t\t\t\t\t\t\t\t? \"view\"\n\t\t\t\t\t\t\t\t: \"data\")\n\t\t\t\t\t\t+ (late\n\t\t\t\t\t\t\t? ')===undefined' + (isLinkExpr ? '' : ')') + '?\"\":view._getOb(ob,\"'\n\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t)\n\t\t\t\t\t\t+ (leafToken\n\t\t\t\t\t\t\t? (viewProperty\n\t\t\t\t\t\t\t\t? \".\" + viewProperty\n\t\t\t\t\t\t\t\t: helper\n\t\t\t\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t\t\t\t: (view ? \"\" : \".\" + object)\n\t\t\t\t\t\t\t\t) + (pathTokens || \"\")\n\t\t\t\t\t\t\t: (leafToken = helper ? \"\" : view ? viewProperty || \"\" : object, \"\"));\n\t\t\t\t\tallPath = allPath + (leafToken ? \".\" + leafToken : \"\");\n\n\t\t\t\t\tallPath = not + (allPath.slice(0, 9) === \"view.data\"\n\t\t\t\t\t\t? allPath.slice(5) // convert #view.data... to data...\n\t\t\t\t\t\t: allPath)\n\t\t\t\t\t+ (late\n\t\t\t\t\t\t\t? (isLinkExpr ? '\"': '\",ltOb') + (prn ? ',1)':')')\n\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (bindings) {\n\t\t\t\t\tbinds = named === \"_linkTo\" ? (bindto = pathBindings._jsvto = pathBindings._jsvto || []) : bndCtx.bd;\n\t\t\t\t\tif (theOb = subPath && binds[binds.length-1]) {\n\t\t\t\t\t\tif (theOb._cpfn) { // Computed property exprOb\n\t\t\t\t\t\t\twhile (theOb.sb) {\n\t\t\t\t\t\t\t\ttheOb = theOb.sb;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (theOb.prm) {\n\t\t\t\t\t\t\t\tif (theOb.bnd) {\n\t\t\t\t\t\t\t\t\tpath = \"^\" + path.slice(1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttheOb.sb = path;\n\t\t\t\t\t\t\t\ttheOb.bnd = theOb.bnd || path[0] === \"^\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbinds.push(path);\n\t\t\t\t\t}\n\t\t\t\t\tif (prn && !subPath) {\n\t\t\t\t\t\tpathStart[fnDp] = ind;\n\t\t\t\t\t\tcompiledPathStart[fnDp] = compiledPath[fnDp].length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn allPath;\n\t\t}\n\n\t\t//bound = bindings && bound;\n\t\tif (bound && !eq) {\n\t\t\tpath = bound + path; // e.g. some.fn(...)^some.path - so here path is \"^some.path\"\n\t\t}\n\t\toperator = operator || \"\";\n\t\tlftPrn2 = lftPrn2 || \"\";\n\t\tlftPrn = lftPrn || lftPrn0 || lftPrn2;\n\t\tpath = path || path2;\n\n\t\tif (late && (late = !/\\)|]/.test(full[index-1]))) {\n\t\t\tpath = path.slice(1).split(\".\").join(\"^\"); // Late path @z.b.c. Use \"^\" rather than \".\" to ensure that deep binding will be used\n\t\t}\n\t\t// Could do this - but not worth perf cost?? :-\n\t\t// if (!path.lastIndexOf(\"#data.\", 0)) { path = path.slice(6); } // If path starts with \"#data.\", remove that.\n\t\tprn = prn || prn2 || \"\";\n\t\tvar expr, binds, theOb, newOb, subPath, lftPrnFCall, ret,\n\t\t\tind = index;\n\n\t\tif (!aposed && !quoted) {\n\t\t\tif (err) {\n\t\t\t\tsyntaxError(params);\n\t\t\t}\n\t\t\tif (rtPrnDot && bindings) {\n\t\t\t\t// This is a binding to a path in which an object is returned by a helper/data function/expression, e.g. foo()^x.y or (a?b:c)^x.y\n\t\t\t\t// We create a compiled function to get the object instance (which will be called when the dependent data of the subexpression changes, to return the new object, and trigger re-binding of the subsequent path)\n\t\t\t\texpr = pathStart[fnDp-1];\n\t\t\t\tif (full.length - 1 > ind - (expr || 0)) { // We need to compile a subexpression\n\t\t\t\t\texpr = $.trim(full.slice(expr, ind + all.length));\n\t\t\t\t\tbinds = bindto || bndStack[fnDp-1].bd;\n\t\t\t\t\t// Insert exprOb object, to be used during binding to return the computed object\n\t\t\t\t\ttheOb = binds[binds.length-1];\n\t\t\t\t\tif (theOb && theOb.prm) {\n\t\t\t\t\t\twhile (theOb.sb && theOb.sb.prm) {\n\t\t\t\t\t\t\ttheOb = theOb.sb;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnewOb = theOb.sb = {path: theOb.sb, bnd: theOb.bnd};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbinds.push(newOb = {path: binds.pop()}); // Insert exprOb object, to be used during binding to return the computed object\n\t\t\t\t\t}\n\t\t\t\t\tif (theOb && theOb.sb === newOb) {\n\t\t\t\t\t\tcompiledPath[fnDp] = compiledPath[fnDp-1].slice(theOb._cpPthSt) + compiledPath[fnDp];\n\t\t\t\t\t\tcompiledPath[fnDp-1] = compiledPath[fnDp-1].slice(0, theOb._cpPthSt);\n\t\t\t\t\t}\n\t\t\t\t\tnewOb._cpPthSt = compiledPathStart[fnDp-1];\n\t\t\t\t\tnewOb._cpKey = expr;\n\n\t\t\t\t\tcompiledPath[fnDp] += full.slice(prevIndex, index);\n\t\t\t\t\tprevIndex = index;\n\n\t\t\t\t\tnewOb._cpfn = cpFnStore[expr] = cpFnStore[expr] || // Compiled function for computed value: get from store, or compile and store\n\t\t\t\t\t\tnew Function(\"data,view,j\", // Compiled function for computed value in template\n\t\t\t\t\t\"//\" + expr + \"\\nvar v;\\nreturn ((v=\" + compiledPath[fnDp] + (rtPrn === \"]\" ? \")]\" : rtPrn) + \")!=null?v:null);\");\n\n\t\t\t\t\tcompiledPath[fnDp-1] += (fnCall[prnDp] && $subSettingsAdvanced.cache ? \"view.getCache(\\\"\" + expr.replace(rEscapeQuotes, \"\\\\$&\") + \"\\\"\" : compiledPath[fnDp]);\n\n\t\t\t\t\tnewOb.prm = bndCtx.bd;\n\t\t\t\t\tnewOb.bnd = newOb.bnd || newOb.path && newOb.path.indexOf(\"^\") >= 0;\n\t\t\t\t}\n\t\t\t\tcompiledPath[fnDp] = \"\";\n\t\t\t}\n\t\t\tif (prn === \"[\") {\n\t\t\t\tprn = \"[j._sq(\";\n\t\t\t}\n\t\t\tif (lftPrn === \"[\") {\n\t\t\t\tlftPrn = \"[j._sq(\";\n\t\t\t}\n\t\t}\n\t\tret = (aposed\n\t\t\t// within single-quoted string\n\t\t\t? (aposed = !apos, (aposed ? all : lftPrn2 + '\"'))\n\t\t\t: quoted\n\t\t\t// within double-quoted string\n\t\t\t\t? (quoted = !quot, (quoted ? all : lftPrn2 + '\"'))\n\t\t\t\t:\n\t\t\t(\n\t\t\t\t(lftPrn\n\t\t\t\t\t? (\n\t\t\t\t\t\tprnStack[++prnDp] = true,\n\t\t\t\t\t\tprnInd[prnDp] = 0,\n\t\t\t\t\t\tbindings && (\n\t\t\t\t\t\t\tpathStart[fnDp++] = ind++,\n\t\t\t\t\t\t\tbndCtx = bndStack[fnDp] = {bd: []},\n\t\t\t\t\t\t\tcompiledPath[fnDp] = \"\",\n\t\t\t\t\t\t\tcompiledPathStart[fnDp] = 1\n\t\t\t\t\t\t),\n\t\t\t\t\t\tlftPrn) // Left paren, (not a function call paren)\n\t\t\t\t\t: \"\")\n\t\t\t\t+ (space\n\t\t\t\t\t? (prnDp\n\t\t\t\t\t\t? \"\" // A space within parens or within function call parens, so not a separator for tag args\n\t\t\t// New arg or prop - so insert backspace \\b (\\x08) as separator for named params, used subsequently by rBuildHash, and prepare new bindings array\n\t\t\t\t\t\t: (paramIndex = full.slice(paramIndex, ind), named\n\t\t\t\t\t\t\t? (named = boundName = bindto = false, \"\\b\")\n\t\t\t\t\t\t\t: \"\\b,\") + paramIndex + (paramIndex = ind + all.length, bindings && pathBindings.push(bndCtx.bd = []), \"\\b\")\n\t\t\t\t\t)\n\t\t\t\t\t: eq\n\t\t\t// named param. Remove bindings for arg and create instead bindings array for prop\n\t\t\t\t\t\t? (fnDp && syntaxError(params), bindings && pathBindings.pop(), named = \"_\" + path, boundName = bound, paramIndex = ind + all.length,\n\t\t\t\t\t\t\t\tbindings && ((bindings = bndCtx.bd = pathBindings[named] = []), bindings.skp = !bound), path + ':')\n\t\t\t\t\t\t: path\n\t\t\t// path\n\t\t\t\t\t\t\t? (path.split(\"^\").join(\".\").replace($sub.rPath, parsePath)\n\t\t\t\t\t\t\t\t+ (prn || operator)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t: operator\n\t\t\t// operator\n\t\t\t\t\t\t\t\t? operator\n\t\t\t\t\t\t\t\t: rtPrn\n\t\t\t// function\n\t\t\t\t\t\t\t\t\t? rtPrn === \"]\" ? \")]\" : \")\"\n\t\t\t\t\t\t\t\t\t: comma\n\t\t\t\t\t\t\t\t\t\t? (fnCall[prnDp] || syntaxError(params), \",\") // We don't allow top-level literal arrays or objects\n\t\t\t\t\t\t\t\t\t\t: lftPrn0\n\t\t\t\t\t\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t\t\t\t\t\t: (aposed = apos, quoted = quot, '\"')\n\t\t\t))\n\t\t);\n\n\t\tif (!aposed && !quoted) {\n\t\t\tif (rtPrn) {\n\t\t\t\tfnCall[prnDp] = false;\n\t\t\t\tprnDp--;\n\t\t\t}\n\t\t}\n\n\t\tif (bindings) {\n\t\t\tif (!aposed && !quoted) {\n\t\t\t\tif (rtPrn) {\n\t\t\t\t\tif (prnStack[prnDp+1]) {\n\t\t\t\t\t\tbndCtx = bndStack[--fnDp];\n\t\t\t\t\t\tprnStack[prnDp+1] = false;\n\t\t\t\t\t}\n\t\t\t\t\tprnStart = prnInd[prnDp+1];\n\t\t\t\t}\n\t\t\t\tif (prn) {\n\t\t\t\t\tprnInd[prnDp+1] = compiledPath[fnDp].length + (lftPrn ? 1 : 0);\n\t\t\t\t\tif (path || rtPrn) {\n\t\t\t\t\t\tbndCtx = bndStack[++fnDp] = {bd: []};\n\t\t\t\t\t\tprnStack[prnDp+1] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcompiledPath[fnDp] = (compiledPath[fnDp]||\"\") + full.slice(prevIndex, index);\n\t\t\tprevIndex = index+all.length;\n\n\t\t\tif (!aposed && !quoted) {\n\t\t\t\tif (lftPrnFCall = lftPrn && prnStack[prnDp+1]) {\n\t\t\t\t\tcompiledPath[fnDp-1] += lftPrn;\n\t\t\t\t\tcompiledPathStart[fnDp-1]++;\n\t\t\t\t}\n\t\t\t\tif (prn === \"(\" && subPath && !newOb) {\n\t\t\t\t\tcompiledPath[fnDp] = compiledPath[fnDp-1].slice(prnStart) + compiledPath[fnDp];\n\t\t\t\t\tcompiledPath[fnDp-1] = compiledPath[fnDp-1].slice(0, prnStart);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcompiledPath[fnDp] += lftPrnFCall ? ret.slice(1) : ret;\n\t\t}\n\n\t\tif (!aposed && !quoted && prn) {\n\t\t\tprnDp++;\n\t\t\tif (path && prn === \"(\") {\n\t\t\t\tfnCall[prnDp] = true;\n\t\t\t}\n\t\t}\n\n\t\tif (!aposed && !quoted && prn2) {\n\t\t\tif (bindings) {\n\t\t\t\tcompiledPath[fnDp] += prn;\n\t\t\t}\n\t\t\tret += prn;\n\t\t}\n\t\treturn ret;\n\t}\n\n\tvar named, bindto, boundName, result,\n\t\tquoted, // boolean for string content in double quotes\n\t\taposed, // or in single quotes\n\t\tbindings = pathBindings && pathBindings[0], // bindings array for the first arg\n\t\tbndCtx = {bd: bindings},\n\t\tbndStack = {0: bndCtx},\n\t\tparamIndex = 0, // list,\n\t\t// The following are used for tracking path parsing including nested paths, such as \"a.b(c^d + (e))^f\", and chained computed paths such as\n\t\t// \"a.b().c^d().e.f().g\" - which has four chained paths, \"a.b()\", \"^c.d()\", \".e.f()\" and \".g\"\n\t\tprnDp = 0,     // For tracking paren depth (not function call parens)\n\t\tfnDp = 0,      // For tracking depth of function call parens\n\t\tprnInd = {},   // We are in a function call\n\t\tprnStart = 0,  // tracks the start of the current path such as c^d() in the above example\n\t\tprnStack = {}, // tracks parens which are not function calls, and so are associated with new bndStack contexts\n\t\tfnCall = {},   // We are in a function call\n\t\tpathStart = {},// tracks the start of the current path such as c^d() in the above example\n\t\tcompiledPathStart = {0: 0},\n\t\tcompiledPath = {0:\"\"},\n\t\tprevIndex = 0;\n\n\tif (params[0] === \"@\") {\n\t\tparams = params.replace(rBracketQuote, \".\");\n\t}\n\tresult = (params + (tmpl ? \" \" : \"\")).replace($sub.rPrm, parseTokens);\n\n\tif (bindings) {\n\t\tresult = compiledPath[0];\n\t}\n\n\treturn !prnDp && result || syntaxError(params); // Syntax error if unbalanced parens in params expression\n}\n\nfunction buildCode(ast, tmpl, isLinkExpr) {\n\t// Build the template function code from the AST nodes, and set as property on the passed-in template object\n\t// Used for compiling templates, and also by JsViews to build functions for data link expressions\n\tvar i, node, tagName, converter, tagCtx, hasTag, hasEncoder, getsVal, hasCnvt, useCnvt, tmplBindings, pathBindings, params, boundOnErrStart,\n\t\tboundOnErrEnd, tagRender, nestedTmpls, tmplName, nestedTmpl, tagAndElses, content, markup, nextIsElse, oldCode, isElse, isGetVal, tagCtxFn,\n\t\tonError, tagStart, trigger, lateRender, retStrOpen, retStrClose,\n\t\ttmplBindingKey = 0,\n\t\tuseViews = $subSettingsAdvanced.useViews || tmpl.useViews || tmpl.tags || tmpl.templates || tmpl.helpers || tmpl.converters,\n\t\tcode = \"\",\n\t\ttmplOptions = {},\n\t\tl = ast.length;\n\n\tif (\"\" + tmpl === tmpl) {\n\t\ttmplName = isLinkExpr ? 'data-link=\"' + tmpl.replace(rNewLine, \" \").slice(1, -1) + '\"' : tmpl;\n\t\ttmpl = 0;\n\t} else {\n\t\ttmplName = tmpl.tmplName || \"unnamed\";\n\t\tif (tmpl.allowCode) {\n\t\t\ttmplOptions.allowCode = true;\n\t\t}\n\t\tif (tmpl.debug) {\n\t\t\ttmplOptions.debug = true;\n\t\t}\n\t\ttmplBindings = tmpl.bnds;\n\t\tnestedTmpls = tmpl.tmpls;\n\t}\n\tfor (i = 0; i < l; i++) {\n\t\t// AST nodes: [0: tagName, 1: converter, 2: content, 3: params, 4: code, 5: onError, 6: trigger, 7:pathBindings, 8: contentMarkup]\n\t\tnode = ast[i];\n\n\t\t// Add newline for each callout to t() c() etc. and each markup string\n\t\tif (\"\" + node === node) {\n\t\t\t// a markup string to be inserted\n\t\t\tcode += '+\"' + node + '\"';\n\t\t} else {\n\t\t\t// a compiled tag expression to be inserted\n\t\t\ttagName = node[0];\n\t\t\tif (tagName === \"*\") {\n\t\t\t\t// Code tag: {{* }}\n\t\t\t\tcode += \";\\n\" + node[1] + \"\\nret=ret\";\n\t\t\t} else {\n\t\t\t\tconverter = node[1];\n\t\t\t\tcontent = !isLinkExpr && node[2];\n\t\t\t\ttagCtx = paramStructure(node[3], params = node[4]);\n\t\t\t\t// NODE.JS-SPECIFIC CODE:\n\t\t\t\tvar prm = params[1];\n\t\t\t\tif (prm && /^'tmpl':\"\\.\\/[^\\:*?\"<>]*\"$/.test(prm)) {\n\t\t\t\t\ttmpl.refs = tmpl.refs || {}; // Used by browserify to chain require() dependencies for tmpl=\"./some.file.html\"\n\t\t\t\t\ttmpl.refs[prm.slice(8,-1)] = 1;\n\t\t\t\t} // END NODE.JS-SPECIFIC CODE\n\t\t\t\ttrigger = node[6];\n\t\t\t\tlateRender = node[7];\n\t\t\t\tif (node[8]) { // latePath @a.b.c or @~a.b.c\n\t\t\t\t\tretStrOpen = \"\\nvar ob,ltOb={},ctxs=\";\n\t\t\t\t\tretStrClose = \";\\nctxs.lt=ltOb.lt;\\nreturn ctxs;\";\n\t\t\t\t} else {\n\t\t\t\t\tretStrOpen = \"\\nreturn \";\n\t\t\t\t\tretStrClose = \"\";\n\t\t\t\t}\n\t\t\t\tmarkup = node[10] && node[10].replace(rUnescapeQuotes, \"$1\");\n\t\t\t\tif (isElse = tagName === \"else\") {\n\t\t\t\t\tif (pathBindings) {\n\t\t\t\t\t\tpathBindings.push(node[9]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tonError = node[5] || $subSettings.debugMode !== false && \"undefined\"; // If debugMode not false, set default onError handler on tag to \"undefined\" (see onRenderError)\n\t\t\t\t\tif (tmplBindings && (pathBindings = node[9])) { // Array of paths, or false if not data-bound\n\t\t\t\t\t\tpathBindings = [pathBindings];\n\t\t\t\t\t\ttmplBindingKey = tmplBindings.push(1); // Add placeholder in tmplBindings for compiled function\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tuseViews = useViews || params[1] || params[2] || pathBindings || /view.(?!index)/.test(params[0]);\n\t\t\t\t// useViews is for perf optimization. For render() we only use views if necessary - for the more advanced scenarios.\n\t\t\t\t// We use views if there are props, contextual properties or args with #... (other than #index) - but you can force\n\t\t\t\t// using the full view infrastructure, (and pay a perf price) by opting in: Set useViews: true on the template, manually...\n\t\t\t\tif (isGetVal = tagName === \":\") {\n\t\t\t\t\tif (converter) {\n\t\t\t\t\t\ttagName = converter === HTML ? \">\" : converter + tagName;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (content) { // TODO optimize - if content.length === 0 or if there is a tmpl=\"...\" specified - set content to null / don't run this compilation code - since content won't get used!!\n\t\t\t\t\t\t// Create template object for nested template\n\t\t\t\t\t\tnestedTmpl = tmplObject(markup, tmplOptions);\n\t\t\t\t\t\tnestedTmpl.tmplName = tmplName + \"/\" + tagName;\n\t\t\t\t\t\t// Compile to AST and then to compiled function\n\t\t\t\t\t\tnestedTmpl.useViews = nestedTmpl.useViews || useViews;\n\t\t\t\t\t\tbuildCode(content, nestedTmpl);\n\t\t\t\t\t\tuseViews = nestedTmpl.useViews;\n\t\t\t\t\t\tnestedTmpls.push(nestedTmpl);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!isElse) {\n\t\t\t\t\t\t// This is not an else tag.\n\t\t\t\t\t\ttagAndElses = tagName;\n\t\t\t\t\t\tuseViews = useViews || tagName && (!$tags[tagName] || !$tags[tagName].flow);\n\t\t\t\t\t\t// Switch to a new code string for this bound tag (and its elses, if it has any) - for returning the tagCtxs array\n\t\t\t\t\t\toldCode = code;\n\t\t\t\t\t\tcode = \"\";\n\t\t\t\t\t}\n\t\t\t\t\tnextIsElse = ast[i + 1];\n\t\t\t\t\tnextIsElse = nextIsElse && nextIsElse[0] === \"else\";\n\t\t\t\t}\n\t\t\t\ttagStart = onError ? \";\\ntry{\\nret+=\" : \"\\n+\";\n\t\t\t\tboundOnErrStart = \"\";\n\t\t\t\tboundOnErrEnd = \"\";\n\n\t\t\t\tif (isGetVal && (pathBindings || trigger || converter && converter !== HTML || lateRender)) {\n\t\t\t\t\t// For convertVal we need a compiled function to return the new tagCtx(s)\n\t\t\t\t\ttagCtxFn = new Function(\"data,view,j\", \"// \" + tmplName + \" \" + (++tmplBindingKey) + \" \" + tagName\n\t\t\t\t\t\t+ retStrOpen + \"{\" + tagCtx + \"};\" + retStrClose);\n\t\t\t\t\ttagCtxFn._er = onError;\n\t\t\t\t\ttagCtxFn._tag = tagName;\n\t\t\t\t\ttagCtxFn._bd = !!pathBindings; // data-linked tag {^{.../}}\n\t\t\t\t\ttagCtxFn._lr = lateRender;\n\n\t\t\t\t\tif (isLinkExpr) {\n\t\t\t\t\t\treturn tagCtxFn;\n\t\t\t\t\t}\n\n\t\t\t\t\tsetPaths(tagCtxFn, pathBindings);\n\t\t\t\t\ttagRender = 'c(\"' + converter + '\",view,';\n\t\t\t\t\tuseCnvt = true;\n\t\t\t\t\tboundOnErrStart = tagRender + tmplBindingKey + \",\";\n\t\t\t\t\tboundOnErrEnd = \")\";\n\t\t\t\t}\n\t\t\t\tcode += (isGetVal\n\t\t\t\t\t? (isLinkExpr ? (onError ? \"try{\\n\" : \"\") + \"return \" : tagStart) + (useCnvt // Call _cnvt if there is a converter: {{cnvt: ... }} or {^{cnvt: ... }}\n\t\t\t\t\t\t? (useCnvt = undefined, useViews = hasCnvt = true, tagRender + (tagCtxFn\n\t\t\t\t\t\t\t? ((tmplBindings[tmplBindingKey - 1] = tagCtxFn), tmplBindingKey) // Store the compiled tagCtxFn in tmpl.bnds, and pass the key to convertVal()\n\t\t\t\t\t\t\t: \"{\" + tagCtx + \"}\") + \")\")\n\t\t\t\t\t\t: tagName === \">\"\n\t\t\t\t\t\t\t? (hasEncoder = true, \"h(\" + params[0] + \")\")\n\t\t\t\t\t\t\t: (getsVal = true, \"((v=\" + params[0] + ')!=null?v:' + (isLinkExpr ? 'null)' : '\"\")'))\n\t\t\t\t\t\t\t// Non strict equality so data-link=\"title{:expr}\" with expr=null/undefined removes title attribute\n\t\t\t\t\t)\n\t\t\t\t\t: (hasTag = true, \"\\n{view:view,content:false,tmpl:\" // Add this tagCtx to the compiled code for the tagCtxs to be passed to renderTag()\n\t\t\t\t\t\t+ (content ? nestedTmpls.length : \"false\") + \",\" // For block tags, pass in the key (nestedTmpls.length) to the nested content template\n\t\t\t\t\t\t+ tagCtx + \"},\"));\n\n\t\t\t\tif (tagAndElses && !nextIsElse) {\n\t\t\t\t\t// This is a data-link expression or an inline tag without any elses, or the last {{else}} of an inline tag\n\t\t\t\t\t// We complete the code for returning the tagCtxs array\n\t\t\t\t\tcode = \"[\" + code.slice(0, -1) + \"]\";\n\t\t\t\t\ttagRender = 't(\"' + tagAndElses + '\",view,this,';\n\t\t\t\t\tif (isLinkExpr || pathBindings) {\n\t\t\t\t\t\t// This is a bound tag (data-link expression or inline bound tag {^{tag ...}}) so we store a compiled tagCtxs function in tmp.bnds\n\t\t\t\t\t\tcode = new Function(\"data,view,j\", \" // \" + tmplName + \" \" + tmplBindingKey + \" \" + tagAndElses + retStrOpen + code\n\t\t\t\t\t\t\t+ retStrClose);\n\t\t\t\t\t\tcode._er = onError;\n\t\t\t\t\t\tcode._tag = tagAndElses;\n\t\t\t\t\t\tif (pathBindings) {\n\t\t\t\t\t\t\tsetPaths(tmplBindings[tmplBindingKey - 1] = code, pathBindings);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcode._lr = lateRender;\n\t\t\t\t\t\tif (isLinkExpr) {\n\t\t\t\t\t\t\treturn code; // For a data-link expression we return the compiled tagCtxs function\n\t\t\t\t\t\t}\n\t\t\t\t\t\tboundOnErrStart = tagRender + tmplBindingKey + \",undefined,\";\n\t\t\t\t\t\tboundOnErrEnd = \")\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// This is the last {{else}} for an inline tag.\n\t\t\t\t\t// For a bound tag, pass the tagCtxs fn lookup key to renderTag.\n\t\t\t\t\t// For an unbound tag, include the code directly for evaluating tagCtxs array\n\t\t\t\t\tcode = oldCode + tagStart + tagRender + (pathBindings && tmplBindingKey || code) + \")\";\n\t\t\t\t\tpathBindings = 0;\n\t\t\t\t\ttagAndElses = 0;\n\t\t\t\t}\n\t\t\t\tif (onError && !nextIsElse) {\n\t\t\t\t\tuseViews = true;\n\t\t\t\t\tcode += ';\\n}catch(e){ret' + (isLinkExpr ? \"urn \" : \"+=\") + boundOnErrStart + 'j._err(e,view,' + onError + ')' + boundOnErrEnd + ';}' + (isLinkExpr ? \"\" : '\\nret=ret');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Include only the var references that are needed in the code\n\tcode = \"// \" + tmplName\n\t\t+ (tmplOptions.debug ? \"\\ndebugger;\" : \"\")\n\t\t+ \"\\nvar v\"\n\t\t+ (hasTag ? \",t=j._tag\" : \"\")                // has tag\n\t\t+ (hasCnvt ? \",c=j._cnvt\" : \"\")              // converter\n\t\t+ (hasEncoder ? \",h=j._html\" : \"\")           // html converter\n\t\t+ (isLinkExpr\n\t\t\t\t? (node[8] // late @... path?\n\t\t\t\t\t\t? \", ob\"\n\t\t\t\t\t\t: \"\"\n\t\t\t\t\t) + \";\\n\"\n\t\t\t\t: ',ret=\"\"')\n\t\t+ code\n\t\t+ (isLinkExpr ? \"\\n\" : \";\\nreturn ret;\");\n\n\ttry {\n\t\tcode = new Function(\"data,view,j\", code);\n\t} catch (e) {\n\t\tsyntaxError(\"Compiled template code:\\n\\n\" + code + '\\n: \"' + (e.message||e) + '\"');\n\t}\n\tif (tmpl) {\n\t\ttmpl.fn = code;\n\t\ttmpl.useViews = !!useViews;\n\t}\n\treturn code;\n}\n\n//==========\n// Utilities\n//==========\n\n// Merge objects, in particular contexts which inherit from parent contexts\nfunction extendCtx(context, parentContext) {\n\t// Return copy of parentContext, unless context is defined and is different, in which case return a new merged context\n\t// If neither context nor parentContext are defined, return undefined\n\treturn context && context !== parentContext\n\t\t? (parentContext\n\t\t\t? $extend($extend({}, parentContext), context)\n\t\t\t: context)\n\t\t: parentContext && $extend({}, parentContext);\n}\n\nfunction getTargetProps(source, tagCtx) {\n\t// this pointer is theMap - which has tagCtx.props too\n\t// arguments: tagCtx.args.\n\tvar key, prop,\n\t\tmap = tagCtx.map,\n\t\tpropsArr = map && map.propsArr;\n\n\tif (!propsArr) { // map.propsArr is the full array of {key:..., prop:...} objects\n\t\tpropsArr = [];\n\t\tif (typeof source === OBJECT || $isFunction(source)) {\n\t\t\tfor (key in source) {\n\t\t\t\tprop = source[key];\n\t\t\t\tif (key !== $.expando && source.hasOwnProperty(key) && (!tagCtx.props.noFunctions || !$.isFunction(prop))) {\n\t\t\t\t\tpropsArr.push({key: key, prop: prop});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (map) {\n\t\t\tmap.propsArr = map.options && propsArr; // If bound {^{props}} and not isRenderCall, store propsArr on map (map.options is defined only for bound, && !isRenderCall)\n\t\t}\n\t}\n\treturn getTargetSorted(propsArr, tagCtx); // Obtains map.tgt, by filtering, sorting and splicing the full propsArr\n}\n\nfunction getTargetSorted(value, tagCtx) {\n\t// getTgt\n\tvar mapped, start, end,\n\t\ttag = tagCtx.tag,\n\t\tprops = tagCtx.props,\n\t\tpropParams = tagCtx.params.props,\n\t\tfilter = props.filter,\n\t\tsort = props.sort,\n\t\tdirectSort = sort === true,\n\t\tstep = parseInt(props.step),\n\t\treverse = props.reverse ? -1 : 1;\n\n\tif (!$isArray(value)) {\n\t\treturn value;\n\t}\n\tif (directSort || sort && \"\" + sort === sort) {\n\t\t// Temporary mapped array holds objects with index and sort-value\n\t\tmapped = value.map(function(item, i) {\n\t\t\titem = directSort ? item : getPathObject(item, sort);\n\t\t\treturn {i: i, v: \"\" + item === item ? item.toLowerCase() : item};\n\t\t});\n\t\t// Sort mapped array\n\t\tmapped.sort(function(a, b) {\n\t\t\treturn a.v > b.v ? reverse : a.v < b.v ? -reverse : 0;\n\t\t});\n\t\t// Map to new array with resulting order\n\t\tvalue = mapped.map(function(item){\n\t\t\treturn value[item.i];\n\t\t});\n\t} else if ((sort || reverse < 0) && !tag.dataMap) {\n\t\tvalue = value.slice(); // Clone array first if not already a new array\n\t}\n\tif ($isFunction(sort)) {\n\t\tvalue = value.sort(function() { // Wrap the sort function to provide tagCtx as 'this' pointer\n\t\t\treturn sort.apply(tagCtx, arguments);\n\t\t});\n\t}\n\tif (reverse < 0 && (!sort || $isFunction(sort))) { // Reverse result if not already reversed in sort\n\t\tvalue = value.reverse();\n\t}\n\n\tif (value.filter && filter) { // IE8 does not support filter\n\t\tvalue = value.filter(filter, tagCtx);\n\t\tif (tagCtx.tag.onFilter) {\n\t\t\ttagCtx.tag.onFilter(tagCtx);\n\t\t}\n\t}\n\n\tif (propParams.sorted) {\n\t\tmapped = (sort || reverse < 0) ? value : value.slice();\n\t\tif (tag.sorted) {\n\t\t\t$.observable(tag.sorted).refresh(mapped); // Note that this might cause the start and end props to be modified - e.g. by pager tag control\n\t\t} else {\n\t\t\ttagCtx.map.sorted = mapped;\n\t\t}\n\t}\n\n\tstart = props.start; // Get current value - after possible changes triggered by tag.sorted refresh() above\n\tend = props.end;\n\tif (propParams.start && start === undefined || propParams.end && end === undefined) {\n\t\tstart = end = 0;\n\t}\n\tif (!isNaN(start) || !isNaN(end)) { // start or end specified, but not the auto-create Number array scenario of {{for start=xxx end=yyy}}\n\t\tstart = +start || 0;\n\t\tend = end === undefined || end > value.length ? value.length : +end;\n\t\tvalue = value.slice(start, end);\n\t}\n\tif (step > 1) {\n\t\tstart = 0;\n\t\tend = value.length;\n\t\tmapped = [];\n\t\tfor (; start<end; start+=step) {\n\t\t\tmapped.push(value[start]);\n\t\t}\n\t\tvalue = mapped;\n\t}\n\tif (propParams.paged && tag.paged) {\n\t\t$observable(tag.paged).refresh(value);\n\t}\n\n\treturn value;\n}\n\n/** Render the template as a string, using the specified data and helpers/context\n* $(\"#tmpl\").render()\n*\n* @param {any}        data\n* @param {hash}       [helpersOrContext]\n* @param {boolean}    [noIteration]\n* @returns {string}   rendered template\n*/\nfunction $fnRender(data, context, noIteration) {\n\tvar tmplElem = this.jquery && (this[0] || error('Unknown template')), // Targeted element not found for jQuery template selector such as \"#myTmpl\"\n\t\ttmpl = tmplElem.getAttribute(tmplAttr);\n\n\treturn renderContent.call(tmpl && $.data(tmplElem)[jsvTmpl] || $templates(tmplElem),\n\t\tdata, context, noIteration);\n}\n\n//========================== Register converters ==========================\n\nfunction getCharEntity(ch) {\n\t// Get character entity for HTML, Attribute and optional data encoding\n\treturn charEntities[ch] || (charEntities[ch] = \"&#\" + ch.charCodeAt(0) + \";\");\n}\n\nfunction getCharFromEntity(match, token) {\n\t// Get character from HTML entity, for optional data unencoding\n\treturn charsFromEntities[token] || \"\";\n}\n\nfunction htmlEncode(text) {\n\t// HTML encode: Replace < > & ' \" ` etc. by corresponding entities.\n\treturn text != undefined ? rIsHtml.test(text) && (\"\" + text).replace(rHtmlEncode, getCharEntity) || text : \"\";\n}\n\nfunction dataEncode(text) {\n\t// Encode just < > and & - intended for 'safe data' along with {{:}} rather than {{>}}\n  return \"\" + text === text ? text.replace(rDataEncode, getCharEntity) : text;\n}\n\nfunction dataUnencode(text) {\n  // Unencode just < > and & - intended for 'safe data' along with {{:}} rather than {{>}}\n  return \"\" + text === text ? text.replace(rDataUnencode, getCharFromEntity) : text;\n}\n\n//========================== Initialize ==========================\n\n$sub = $views.sub;\n$viewsSettings = $views.settings;\n\n{\n\t// JsRender/JsViews not already loaded (or loaded without jQuery, and we are now moving from jsrender namespace to jQuery namepace)\n\tfor (jsvStoreName in jsvStores) {\n\t\tregisterStore(jsvStoreName, jsvStores[jsvStoreName]);\n\t}\n\n\t$converters = $views.converters;\n\t$helpers = $views.helpers;\n\t$tags = $views.tags;\n\n\t$sub._tg.prototype = {\n\t\tbaseApply: baseApply,\n\t\tcvtArgs: convertArgs,\n\t\tbndArgs: convertBoundArgs,\n\t\tctxPrm: contextParameter\n\t};\n\n\ttopView = $sub.topView = new View();\n\n\t{\n\t\t$ = {};\n\n\t\t$.isFunction = function(ob) {\n\t\t\treturn typeof ob === \"function\";\n\t\t};\n\n\t\t$.isArray = Array.isArray || function(obj) {\n\t\t\treturn ({}.toString).call(obj) === \"[object Array]\";\n\t\t};\n\n\t\t$.jsrender = versionNumber;\n\t}\n\t$subSettings = $sub.settings;\n\t$subSettings.allowCode = false;\n\t$isFunction = $.isFunction;\n\t$.render = $render;\n\t$.views = $views;\n\t$.templates = $templates = $views.templates;\n\n\t$.compile = function(markup, options) { // For integration with Hapi (and possibly other platforms) provide standard API/signature for template compilation\n\t\toptions = options || {};\n\t\toptions.markup = markup;\n\t\treturn $templates(options);\n\t};\n\n\tfor (setting in $subSettings) {\n\t\taddSetting(setting);\n\t}\n\n\t/**\n\t* $.views.settings.debugMode(true)\n\t* @param {boolean} debugMode\n\t* @returns {Settings}\n\t*\n\t* debugMode = $.views.settings.debugMode()\n\t* @returns {boolean}\n\t*/\n\t($viewsSettings.debugMode = function(debugMode) {\n\t\treturn debugMode === undefined\n\t\t\t? $subSettings.debugMode\n\t\t\t: (\n\t\t\t\t$subSettings._clFns && $subSettings._clFns(), // Clear linkExprStore (cached compiled expressions), since debugMode setting affects compilation for expressions\n\t\t\t\t$subSettings.debugMode = debugMode,\n\t\t\t\t$subSettings.onError = debugMode + \"\" === debugMode\n\t\t\t\t\t? function() { return debugMode; }\n\t\t\t\t\t: $isFunction(debugMode)\n\t\t\t\t\t\t? debugMode\n\t\t\t\t\t\t: undefined,\n\t\t\t\t$viewsSettings);\n\t})(false); // jshint ignore:line\n\n\t$subSettingsAdvanced = $subSettings.advanced = {\n\t\tcache: true, // By default use cached values of computed values (Otherwise, set advanced cache setting to false)\n\t\tuseViews: false,\n\t\t_jsv: false // For global access to JsViews store\n\t};\n\n\t//========================== Register tags ==========================\n\n\t$tags({\n\t\t\"if\": {\n\t\t\trender: function(val) {\n\t\t\t\t// This function is called once for {{if}} and once for each {{else}}.\n\t\t\t\t// We will use the tag.rendering object for carrying rendering state across the calls.\n\t\t\t\t// If not done (a previous block has not been rendered), look at expression for this block and render the block if expression is truthy\n\t\t\t\t// Otherwise return \"\"\n\t\t\t\tvar self = this,\n\t\t\t\t\ttagCtx = self.tagCtx,\n\t\t\t\t\tret = (self.rendering.done || !val && (tagCtx.args.length || !tagCtx.index))\n\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t: (self.rendering.done = true,\n\t\t\t\t\t\t\tself.selected = tagCtx.index,\n\t\t\t\t\t\t\tundefined); // Test is satisfied, so render content on current context\n\t\t\t\treturn ret;\n\t\t\t},\n\t\t\tcontentCtx: true, // Inherit parent view data context\n\t\t\tflow: true\n\t\t},\n\t\t\"for\": {\n\t\t\tsortDataMap: dataMap(getTargetSorted),\n\t\t\tinit: function(val, cloned) {\n\t\t\t\tthis.setDataMap(this.tagCtxs);\n\t\t\t},\n\t\t\trender: function(val) {\n\t\t\t\t// This function is called once for {{for}} and once for each {{else}}.\n\t\t\t\t// We will use the tag.rendering object for carrying rendering state across the calls.\n\t\t\t\tvar value, filter, srtField, isArray, i, sorted, end, step,\n\t\t\t\t\tself = this,\n\t\t\t\t\ttagCtx = self.tagCtx,\n\t\t\t\t\trange = tagCtx.argDefault === false,\n\t\t\t\t\tprops = tagCtx.props,\n\t\t\t\t\titerate = range || tagCtx.args.length, // Not final else and not auto-create range\n\t\t\t\t\tresult = \"\",\n\t\t\t\t\tdone = 0;\n\n\t\t\t\tif (!self.rendering.done) {\n\t\t\t\t\tvalue = iterate ? val : tagCtx.view.data; // For the final else, defaults to current data without iteration.\n\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\trange = props.reverse ? \"unshift\" : \"push\";\n\t\t\t\t\t\tend = +props.end;\n\t\t\t\t\t\tstep = +props.step || 1;\n\t\t\t\t\t\tvalue = []; // auto-create integer array scenario of {{for start=xxx end=yyy}}\n\t\t\t\t\t\tfor (i = +props.start || 0; (end - i) * step > 0; i += step) {\n\t\t\t\t\t\t\tvalue[range](i);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\tisArray = $isArray(value);\n\t\t\t\t\t\tresult += tagCtx.render(value, !iterate || props.noIteration);\n\t\t\t\t\t\t// Iterates if data is an array, except on final else - or if noIteration property\n\t\t\t\t\t\t// set to true. (Use {{include}} to compose templates without array iteration)\n\t\t\t\t\t\tdone += isArray ? value.length : 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (self.rendering.done = done) {\n\t\t\t\t\t\tself.selected = tagCtx.index;\n\t\t\t\t\t}\n\t\t\t\t\t// If nothing was rendered we will look at the next {{else}}. Otherwise, we are done.\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\tsetDataMap: function(tagCtxs) {\n\t\t\t\tvar tagCtx, props, paramsProps,\n\t\t\t\t\tself = this,\n\t\t\t\t\tl = tagCtxs.length;\n\t\t\t\twhile (l--) {\n\t\t\t\t\ttagCtx = tagCtxs[l];\n\t\t\t\t\tprops = tagCtx.props;\n\t\t\t\t\tparamsProps = tagCtx.params.props;\n\t\t\t\t\ttagCtx.argDefault = props.end === undefined || tagCtx.args.length > 0; // Default to #data except for auto-create range scenario {{for start=xxx end=yyy step=zzz}}\n\t\t\t\t\tprops.dataMap = (tagCtx.argDefault !== false && $isArray(tagCtx.args[0]) &&\n\t\t\t\t\t\t(paramsProps.sort || paramsProps.start || paramsProps.end || paramsProps.step || paramsProps.filter || paramsProps.reverse\n\t\t\t\t\t\t|| props.sort || props.start || props.end || props.step || props.filter || props.reverse))\n\t\t\t\t\t\t&& self.sortDataMap;\n\t\t\t\t}\n\t\t\t},\n\t\t\tflow: true\n\t\t},\n\t\tprops: {\n\t\t\tbaseTag: \"for\",\n\t\t\tdataMap: dataMap(getTargetProps),\n\t\t\tinit: noop, // Don't execute the base init() of the \"for\" tag\n\t\t\tflow: true\n\t\t},\n\t\tinclude: {\n\t\t\tflow: true\n\t\t},\n\t\t\"*\": {\n\t\t\t// {{* code... }} - Ignored if template.allowCode and $.views.settings.allowCode are false. Otherwise include code in compiled template\n\t\t\trender: retVal,\n\t\t\tflow: true\n\t\t},\n\t\t\":*\": {\n\t\t\t// {{:* returnedExpression }} - Ignored if template.allowCode and $.views.settings.allowCode are false. Otherwise include code in compiled template\n\t\t\trender: retVal,\n\t\t\tflow: true\n\t\t},\n\t\tdbg: $helpers.dbg = $converters.dbg = dbgBreak // Register {{dbg/}}, {{dbg:...}} and ~dbg() to throw and catch, as breakpoints for debugging.\n\t});\n\n\t$converters({\n\t\thtml: htmlEncode,\n\t\tattr: htmlEncode, // Includes > encoding since rConvertMarkers in JsViews does not skip > characters in attribute strings\n\t\tencode: dataEncode,\n\t\tunencode: dataUnencode, // Includes > encoding since rConvertMarkers in JsViews does not skip > characters in attribute strings\n\t\turl: function(text) {\n\t\t\t// URL encoding helper.\n\t\t\treturn text != undefined ? encodeURI(\"\" + text) : text === null ? text : \"\"; // null returns null, e.g. to remove attribute. undefined returns \"\"\n\t\t}\n\t});\n}\n//========================== Define default delimiters ==========================\n$subSettings = $sub.settings;\n$isArray = ($||jsr).isArray;\n$viewsSettings.delimiters(\"{{\", \"}}\", \"^\");\n\n// NODE.JS-SPECIFIC CODE:\nvar nodeFs = require('fs'),\n\tnodePath = require('path'),\n\tnodePathSep = nodePath.sep,\n\trootDirPath = nodePath.resolve(\"./\"),\n\trootDirPathLen = rootDirPath.length + 1;\n\n// Support for rendering templates from file system in Node.js Node, and for Express template engine integration,\n// using app.engine('html', jsrender.__express);\n$.renderFile = $.__express = function(filepath, data, context, callback) {\n\tfilepath = \"/\" + nodeFs.realpathSync(filepath).split(nodePathSep).slice(1).join(\"/\"); // Normalize to /some/file.html\n\tif (typeof context === \"function\") {\n\t\tcallback = context;\n\t\tcontext = undefined;\n\t}\n\tvar html = $templates(filepath).render(data, context);\n\tif (callback) {         // If a callback is provided, we call it. Note that this is undocumented.\n\t\tcallback(null, html); // The call is still synchronous (with realpathSync and readFileSync) rather\n\t}                       // than making async calls to realpath readFile. Also it does not return errors.\n\treturn html;\n};\n\n$views.tags(\"clientTemplate\", function(path) { // Custom tag to render a template in a script block, so it can be used as a client template without making an HTTP request\n\treturn '<script id=\"' + path + '\" type=\"text/x-jsrender\">' + $templates(path).markup + '</script>';\n});\n\nmodule.exports = $;\n// END NODE.JS-SPECIFIC CODE\n}(this));\n"]}