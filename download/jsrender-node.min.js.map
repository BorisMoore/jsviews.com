{"version":3,"sources":["jsrender-node.js"],"names":["global","getDerivedMethod","baseMethod","method","ret","tag","this","prevBase","base","apply","arguments","getMethod","$isFunction","_d","noop","tagHandlersFromProps","tagCtx","prop","props","rHasHandlers","test","retVal","val","dbgBreak","console","log","e","baseApply","JsViewsError","message","name","$","link","$extend","target","source","$viewsDelimiters","openChars","closeChars","$isArray","$views","$subSettings","delimiters","linkChar","charAt","delimOpenChar0","delimOpenChar1","delimCloseChar0","delimCloseChar1","rTag","$sub","RegExp","rTmpl","$viewsSettings","getView","inner","type","undefined","views","i","l","found","view","root","_","useKey","get","length","parent","getNestedIndex","index","getIndex","getHelper","helper","isContextCb","wrapped","deps","res","ctx","$helpers","_cp","_ceo","unshift","data","getCtx","_wrp","getTemplate","tmpl","fn","getRsc","$templates","convertVal","converter","onError","value","boundTag","bnds","linkCtx","args","_tg","inline","bnd","unlinked","tagName","cvt","flow","extendCtx","_er","cvtArgs","onRender","convertArgs","convert","error","slice","depends","getDeps","getResource","resourceType","itemName","store","renderTag","parentView","tagCtxs","isUpdate","topView","tagDef","template","tags","attr","parentTag","itemRet","tagCtxCtx","content","callInit","mapDef","thisMap","initialTmpl","tagDataMap","contentCtx","parentTmpl","_is","tmpls","render","renderContent","getTmpl","_ctr","init","dataMap","arrVws","dataBoundOnly","map","parents","parentTags","rendering","src","unmap","tgt","noVws","HTML","linked","linkedElem","rWrappedInViewMarker","renderWithViews","templates","$converters","html","View","context","key","contentTmpl","parentView_","self_","self","isArray","id","viewId","indexStr","push","splice","compileChildResources","storeName","storeNames","resources","jsvStores","compileTag","Tag","baseTag","compiledDef","$tags","prototype","constructor","_parentTmpl","compileTmpl","options","lookupTemplate","nodeType","elem","nodeFs","readFileSync","code","path","rootDirPath","replace","compiledTmpl","tmplOrMarkup","markup","tmplName","tmplObject","tmplFn","rEscapeQuotes","jsvTmpl","$render","getDefaultVal","defaultVal","isFunction","call","unmapArray","modelArr","arr","compileViewModel","GetNew","vm","iterate","action","j","getterType","ob","m","getters","getter","viewModels","JSON","parse","merge","viewModel","getterNames","mod","assigned","newModArr","model","$observable","refresh","concat","extend","proto","body","observable","privField","setProperty","set","Function","htmlTag","wrapMap","$subSettingsAdvanced","_wm","links","rFirstElem","exec","toLowerCase","div","trim","registerStore","storeSettings","theStore","item","onStore","compile","thisStore","OBJECT","getTgt","addSetting","st","Map","baseMap","noIteration","isTopRenderCall","prevData","prevIndex","result","isRenderCall","useViews","setItemVar","newCtx","itemVar","newView","childView","itemResult","swapContent","outerOnRender","syntaxError","helpers","it","onRenderError","fallback","Err","isLinkExpr","convertBack","hasElse","pushprecedingContent","shift","loc","substr","rNewLine","blockTagCheck","block","parseTag","all","bind","colon","codeTag","params","slash","bind2","closeBlock","pathBindings","ctxProps","paramsArgs","paramsProps","paramsCtxProps","useTrigger","allowCode","rUnescapeQuotes","rTestElseIf","current","substring","stack","pop","parseParams","rBuildHash","onerror","isCtx","keyToken","keyValue","arg","param","hasHandlers","newNode","parsedParam","bindings","astTop","buildCode","setPaths","pathsArr","paths","hasOwnProperty","paramStructure","parts","parseTokens","lftPrn0","lftPrn","bound","operator","err","eq","path2","prn","comma","lftPrn2","apos","quot","rtPrn","rtPrnDot","prn2","space","full","parsePath","allPath","not","object","viewProperty","pathTokens","leafToken","subPath","binds","named","bindto","_jsvto","bndCtx","bd","theOb","_jsv","sb","pathStart","parenDepth","expr","exprFn","newOb","rtSq","aposed","quoted","boundName","bndStack","prm","tmplLinks","indexOf","paramIndex","split","join","rPath","fnCall","0","rParams","ast","node","hasTag","hasEncoder","getsVal","hasCnvt","useCnvt","tmplBindings","boundOnErrStart","boundOnErrEnd","tagRender","nestedTmpls","nestedTmpl","tagAndElses","nextIsElse","oldCode","isElse","isGetVal","tagCtxFn","tagStart","trigger","tmplBindingKey","converters","tmplOptions","debug","refs","_tag","debugMode","parentContext","getCharEntity","ch","charEntities","charCodeAt","getTargetProps","htmlEncode","text","rIsHtml","rHtmlEncode","exports","jsvStoreName","setting","versionNumber","rAttrEncode","&","<",">","\u0000","'","\"","`","=","jsviews","sub","syntaxErr","settings","advSet","_ths","_cnvt","_err","_html","_sq","token","advanced","Error","hlp","Array","obj","jsrender","if","done","selected","for","finalElse","include","*",":*","dbg","url","encodeURI","jsr","require","nodePath","nodePathSep","sep","resolve","rootDirPathLen","renderFile","__express","filepath","callback","realpathSync","module"],"mappings":"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","file":"jsrender-node.min.js","sourcesContent":["/*! JsRender v0.9.82 (Beta): http://jsviews.com/#jsrender */\n/*! **VERSION FOR NODE.JS** (For WEB see http://jsviews.com/download/jsrender.js) */\n/*\n * Best-of-breed templating in browser or on Node.js.\n * Does not require jQuery, or HTML DOM\n * Integrates with JsViews (http://jsviews.com/#jsviews)\n *\n * Copyright 2016, Boris Moore\n * Released under the MIT License.\n */\n\n//jshint -W018, -W041\n\n(function(global) {\n\"use strict\";\nif (typeof exports !== 'object' ) {\n\tthrow \"Outside Node.js use //jsviews.com/download/jsrender.js\";\n}\n\n//========================== Top-level vars ==========================\n\nvar versionNumber = \"v0.9.82\",\n\n\t// global var is the this object, which is window when running in the usual browser environment\n\n\t$, jsvStoreName, rTag, rTmplString, topView, $views,\n\n//TODO\ttmplFnsCache = {},\n\t$isFunction, $isArray, $templates, $converters, $helpers, $tags, $sub, $subSettings, $subSettingsAdvanced, $viewsSettings, delimOpenChar0, delimOpenChar1, delimCloseChar0, delimCloseChar1, linkChar, setting, baseOnError,\n\n\trPath = /^(!*?)(?:null|true|false|\\d[\\d.]*|([\\w$]+|\\.|~([\\w$]+)|#(view|([\\w$]+))?)([\\w$.^]*?)(?:[.[^]([\\w$]+)\\]?)?)$/g,\n\t//        not                               object     helper    view  viewProperty pathTokens      leafToken\n\n\trParams = /(\\()(?=\\s*\\()|(?:([([])\\s*)?(?:(\\^?)(!*?[#~]?[\\w$.^]+)?\\s*((\\+\\+|--)|\\+|-|&&|\\|\\||===|!==|==|!=|<=|>=|[<>%*:?\\/]|(=))\\s*|(!*?[#~]?[\\w$.^]+)([([])?)|(,\\s*)|(\\(?)\\\\?(?:(')|(\"))|(?:\\s*(([)\\]])(?=\\s*[.^]|\\s*$|[^([])|[)\\]])([([]?))|(\\s+)/g,\n\t//          lftPrn0        lftPrn        bound            path    operator err                                                eq             path2       prn    comma   lftPrn2   apos quot      rtPrn rtPrnDot                           prn2  space\n\t// (left paren? followed by (path? followed by operator) or (path followed by left paren?)) or comma or apos or quot or right paren or space\n\n\tisRenderCall,\n\trNewLine = /[ \\t]*(\\r\\n|\\n|\\r)/g,\n\trUnescapeQuotes = /\\\\(['\"])/g,\n\trEscapeQuotes = /['\"\\\\]/g, // Escape quotes and \\ character\n\trBuildHash = /(?:\\x08|^)(onerror:)?(?:(~?)(([\\w$_\\.]+):)?([^\\x08]+))\\x08(,)?([^\\x08]+)/gi,\n\trTestElseIf = /^if\\s/,\n\trFirstElem = /<(\\w+)[>\\s]/,\n\trAttrEncode = /[\\x00`><\"'&=]/g, // Includes > encoding since rConvertMarkers in JsViews does not skip > characters in attribute strings\n\trIsHtml = /[\\x00`><\\\"'&=]/,\n\trHasHandlers = /^on[A-Z]|^convert(Back)?$/,\n\trWrappedInViewMarker = /^\\#\\d+_`[\\s\\S]*\\/\\d+_`$/,\n\trHtmlEncode = rAttrEncode,\n\tviewId = 0,\n\tcharEntities = {\n\t\t\"&\": \"&amp;\",\n\t\t\"<\": \"&lt;\",\n\t\t\">\": \"&gt;\",\n\t\t\"\\x00\": \"&#0;\",\n\t\t\"'\": \"&#39;\",\n\t\t'\"': \"&#34;\",\n\t\t\"`\": \"&#96;\",\n\t\t\"=\": \"&#61;\"\n\t},\n\tHTML = \"html\",\n\tOBJECT = \"object\",\n\ttmplAttr = \"data-jsv-tmpl\",\n\tjsvTmpl = \"jsvTmpl\",\n\tindexStr = \"For #index in nested block use #getIndex().\",\n\t$render = {},\n\n\tjsvStores = {\n\t\ttemplate: {\n\t\t\tcompile: compileTmpl\n\t\t},\n\t\ttag: {\n\t\t\tcompile: compileTag\n\t\t},\n\t\tviewModel: {\n\t\t\tcompile: compileViewModel\n\t\t},\n\t\thelper: {},\n\t\tconverter: {}\n\t};\n\n\t// views object ($.views if jQuery is loaded, jsrender.views if no jQuery, e.g. in Node.js)\n\t$views = {\n\t\tjsviews: versionNumber,\n\t\tsub: {\n\t\t\t// subscription, e.g. JsViews integration\n\t\t\tView: View,\n\t\t\tErr: JsViewsError,\n\t\t\ttmplFn: tmplFn,\n\t\t\tparse: parseParams,\n\t\t\textend: $extend,\n\t\t\textendCtx: extendCtx,\n\t\t\tsyntaxErr: syntaxError,\n\t\t\tonStore: {},\n\t\t\taddSetting: addSetting,\n\t\t\tsettings: {\n\t\t\t\tallowCode: false\n\t\t\t},\n\t\t\tadvSet: noop, // Update advanced settings\n\t\t\t_ths: tagHandlersFromProps,\n\t\t\t_tg: function() {}, // Constructor for tagDef\n\t\t\t_cnvt: convertVal,\n\t\t\t_tag: renderTag,\n\t\t\t_er: error,\n\t\t\t_err: onRenderError,\n\t\t\t_html: htmlEncode,\n\t\t\t_cp: retVal, // Get compiled contextual parameters (or properties) ~foo=expr. In JsRender, simply returns val.\n\t\t\t_sq: function(token) {\n\t\t\t\tif (token === \"constructor\") {\n\t\t\t\t\tsyntaxError(\"\");\n\t\t\t\t}\n\t\t\t\treturn token;\n\t\t\t}\n\t\t},\n\t\tsettings: {\n\t\t\tdelimiters: $viewsDelimiters,\n\t\t\tadvanced: function(value) {\n\t\t\t\treturn value\n\t\t\t\t\t? (\n\t\t\t\t\t\t\t$extend($subSettingsAdvanced, value),\n\t\t\t\t\t\t\t$sub.advSet(),\n\t\t\t\t\t\t\t$viewsSettings\n\t\t\t\t\t\t)\n\t\t\t\t\t\t: $subSettingsAdvanced;\n\t\t\t\t}\n\t\t},\n\t\tgetCtx: retVal, // Get ctx.foo value. In JsRender, simply returns val.\n\t\tmap: dataMap    // If jsObservable loaded first, use that definition of dataMap\n\t};\n\nfunction getDerivedMethod(baseMethod, method) {\n\treturn function() {\n\t\tvar ret,\n\t\t\ttag = this,\n\t\t\tprevBase = tag.base;\n\n\t\ttag.base = baseMethod; // Within method call, calling this.base will call the base method\n\t\tret = method.apply(tag, arguments); // Call the method\n\t\ttag.base = prevBase; // Replace this.base to be the base method of the previous call, for chained calls\n\t\treturn ret;\n\t};\n}\n\nfunction getMethod(baseMethod, method) {\n\t// For derived methods (or handlers declared declaratively as in {{:foo onChange=~fooChanged}} replace by a derived method, to allow using this.base(...)\n\t// or this.baseApply(arguments) to call the base implementation. (Equivalent to this._super(...) and this._superApply(arguments) in jQuery UI)\n\tif ($isFunction(method)) {\n\t\tmethod = getDerivedMethod(\n\t\t\t\t!baseMethod\n\t\t\t\t\t? noop // no base method implementation, so use noop as base method\n\t\t\t\t\t: baseMethod._d\n\t\t\t\t\t\t? baseMethod // baseMethod is a derived method, so us it\n\t\t\t\t\t\t: getDerivedMethod(noop, baseMethod), // baseMethod is not derived so make its base method be the noop method\n\t\t\t\tmethod\n\t\t\t);\n\t\tmethod._d = 1; // Add flag that this is a derived method\n\t}\n\treturn method;\n}\n\nfunction tagHandlersFromProps(tag, tagCtx) {\n\tfor (var prop in tagCtx.props) {\n\t\tif (rHasHandlers.test(prop)) {\n\t\t\ttag[prop] = getMethod(tag[prop], tagCtx.props[prop]);\n\t\t\t// Copy over the onFoo props, convert and convertBack from tagCtx.props to tag (overrides values in tagDef).\n\t\t\t// Note: unsupported scenario: if handlers are dynamically added ^onFoo=expression this will work, but dynamically removing will not work.\n\t\t}\n\t}\n}\n\nfunction retVal(val) {\n\treturn val;\n}\n\nfunction noop() {\n\treturn \"\";\n}\n\nfunction dbgBreak(val) {\n\t// Usage examples: {{dbg:...}}, {{:~dbg(...)}}, {{dbg .../}}, {^{for ... onAfterLink=~dbg}} etc.\n\ttry {\n\t\tconsole.log(\"JsRender dbg breakpoint: \" + val);\n\t\tthrow \"dbg breakpoint\"; // To break here, stop on caught exceptions.\n\t}\n\tcatch (e) {}\n\treturn this.base ? this.baseApply(arguments) : val;\n}\n\nfunction JsViewsError(message) {\n\t// Error exception type for JsViews/JsRender\n\t// Override of $.views.sub.Error is possible\n\tthis.name = ($.link ? \"JsViews\" : \"JsRender\") + \" Error\";\n\tthis.message = message || this.name;\n}\n\nfunction $extend(target, source) {\n\tfor (var name in source) {\n\t\ttarget[name] = source[name];\n\t}\n\treturn target;\n}\n\n(JsViewsError.prototype = new Error()).constructor = JsViewsError;\n\n//========================== Top-level functions ==========================\n\n//===================\n// views.delimiters\n//===================\n\nfunction $viewsDelimiters(openChars, closeChars, link) {\n\t// Set the tag opening and closing delimiters and 'link' character. Default is \"{{\", \"}}\" and \"^\"\n\t// openChars, closeChars: opening and closing strings, each with two characters\n\tif (!openChars) {\n\t\treturn $subSettings.delimiters;\n\t}\n\tif ($isArray(openChars)) {\n\t\treturn $viewsDelimiters.apply($views, openChars);\n\t}\n\n\t$subSettings.delimiters = [openChars, closeChars, linkChar = link ? link.charAt(0) : linkChar];\n\n\tdelimOpenChar0 = openChars.charAt(0); // Escape the characters - since they could be regex special characters\n\tdelimOpenChar1 = openChars.charAt(1);\n\tdelimCloseChar0 = closeChars.charAt(0);\n\tdelimCloseChar1 = closeChars.charAt(1);\n\topenChars = \"\\\\\" + delimOpenChar0 + \"(\\\\\" + linkChar + \")?\\\\\" + delimOpenChar1; // Default is \"{^{\"\n\tcloseChars = \"\\\\\" + delimCloseChar0 + \"\\\\\" + delimCloseChar1;                   // Default is \"}}\"\n\t// Build regex with new delimiters\n\t//          [tag    (followed by / space or })  or cvtr+colon or html or code] followed by space+params then convertBack?\n\trTag = \"(?:(\\\\w+(?=[\\\\/\\\\s\\\\\" + delimCloseChar0 + \"]))|(\\\\w+)?(:)|(>)|(\\\\*))\\\\s*((?:[^\\\\\"\n\t\t+ delimCloseChar0 + \"]|\\\\\" + delimCloseChar0 + \"(?!\\\\\" + delimCloseChar1 + \"))*?)\";\n\n\t// Make rTag available to JsViews (or other components) for parsing binding expressions\n\t$sub.rTag = \"(?:\" + rTag + \")\";\n\t//                        { ^? {   tag+params slash?  or closingTag                                                   or comment\n\trTag = new RegExp(\"(?:\" + openChars + rTag + \"(\\\\/)?|\\\\\" + delimOpenChar0 + \"(\\\\\" + linkChar + \")?\\\\\" + delimOpenChar1 + \"(?:(?:\\\\/(\\\\w+))\\\\s*|!--[\\\\s\\\\S]*?--))\" + closeChars, \"g\");\n\n\t// Default:  bind     tagName         cvt   cln html code    params            slash   bind2         closeBlk  comment\n\t//      /(?:{(\\^)?{(?:(\\w+(?=[\\/\\s}]))|(\\w+)?(:)|(>)|(\\*))\\s*((?:[^}]|}(?!}))*?)(\\/)?|{(\\^)?{(?:(?:\\/(\\w+))\\s*|!--[\\s\\S]*?--))}}\n\n\t$sub.rTmpl = new RegExp(\"<.*>|([^\\\\\\\\]|^)[{}]|\" + openChars + \".*\" + closeChars);\n\t// $sub.rTmpl looks for html tags or { or } char not preceded by \\\\, or JsRender tags {{xxx}}. Each of these strings are considered\n\t// NOT to be jQuery selectors\n\treturn $viewsSettings;\n}\n\n//=========\n// View.get\n//=========\n\nfunction getView(inner, type) { //view.get(inner, type)\n\tif (!type && inner !== true) {\n\t\t// view.get(type)\n\t\ttype = inner;\n\t\tinner = undefined;\n\t}\n\n\tvar views, i, l, found,\n\t\tview = this,\n\t\troot = !type || type === \"root\";\n\t\t// If type is undefined, returns root view (view under top view).\n\n\tif (inner) {\n\t\t// Go through views - this one, and all nested ones, depth-first - and return first one with given type.\n\t\t// If type is undefined, i.e. view.get(true), return first child view.\n\t\tfound = type && view.type === type && view;\n\t\tif (!found) {\n\t\t\tviews = view.views;\n\t\t\tif (view._.useKey) {\n\t\t\t\tfor (i in views) {\n\t\t\t\t\tif (found = type ? views[i].get(inner, type) : views[i]) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0, l = views.length; !found && i < l; i++) {\n\t\t\t\t\tfound = type ? views[i].get(inner, type) : views[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (root) {\n\t\t// Find root view. (view whose parent is top view)\n\t\twhile (view.parent) {\n\t\t\tfound = view;\n\t\t\tview = view.parent;\n\t\t}\n\t} else {\n\t\twhile (view && !found) {\n\t\t\t// Go through views - this one, and all parent ones - and return first one with given type.\n\t\t\tfound = view.type === type ? view : undefined;\n\t\t\tview = view.parent;\n\t\t}\n\t}\n\treturn found;\n}\n\nfunction getNestedIndex() {\n\tvar view = this.get(\"item\");\n\treturn view ? view.index : undefined;\n}\n\ngetNestedIndex.depends = function() {\n\treturn [this.get(\"item\"), \"index\"];\n};\n\nfunction getIndex() {\n\treturn this.index;\n}\n\ngetIndex.depends = \"index\";\n\n//==========\n// View.hlp\n//==========\n\nfunction getHelper(helper, isContextCb) {\n\t// Helper method called as view.hlp(key) from compiled template, for helpers or template parameters ~foo\n\tvar wrapped, deps,\n\tview = this,\n\tres = view.ctx;\n\n\tif (res) {\n\t\tres = res[helper];\n\t}\n\tif (res === undefined) {\n\t\tres = $helpers[helper];\n\t}\n\tif (res && res._cp) { // If this helper resource is a contextual parameter, ~foo=expr\n\t\tif (isContextCb) { // In a context callback for a contextual param, return the [currentData, dependencies...] array - needed for observe call\n\t\t\tdeps = $sub._ceo(res[1].deps);  // fn deps, with any exprObs cloned\n\t\t\tdeps.unshift(res[0].data);      // view.data\n\t\t\tdeps._cp = true;\n\t\t\treturn deps;\n\t\t}\n\t\tres = $views.getCtx(res); // If a contextual param, but not a context callback, return evaluated param - fn(data, view, j)\n\t}\n\n\tif (res) {\n\t\tif ($isFunction(res) && !res._wrp) {\n\t\t\t// If it is of type function, and not already wrapped, we will wrap it, so if called with no this pointer it will be called with the\n\t\t\t// view as 'this' context. If the helper ~foo() was in a data-link expression, the view will have a 'temporary' linkCtx property too.\n\t\t\t// Note that helper functions on deeper paths will have specific this pointers, from the preceding path.\n\t\t\t// For example, ~util.foo() will have the ~util object as 'this' pointer\n\t\t\twrapped = function() {\n\t\t\t\treturn res.apply((!this || this === global) ? view : this, arguments);\n\t\t\t};\n\t\t\twrapped._wrp = view;\n\t\t\t$extend(wrapped, res); // Attach same expandos (if any) to the wrapped function\n\t\t}\n\t}\n\treturn wrapped || res;\n}\n\nfunction getTemplate(tmpl) {\n\treturn tmpl && (tmpl.fn\n\t\t? tmpl\n\t\t: this.getRsc(\"templates\", tmpl) || $templates(tmpl)); // not yet compiled\n}\n\n//==============\n// views._cnvt\n//==============\n\nfunction convertVal(converter, view, tagCtx, onError) {\n\t// self is template object or linkCtx object\n\tvar tag, value,\n\t\t// if tagCtx is an integer, then it is the key for the compiled function to return the boundTag tagCtx\n\t\tboundTag = typeof tagCtx === \"number\" && view.tmpl.bnds[tagCtx-1],\n\t\tlinkCtx = view.linkCtx; // For data-link=\"{cvt:...}\"...\n\n\tif (onError !== undefined) {\n\t\ttagCtx = onError = {props: {}, args: [onError]};\n\t} else if (boundTag) {\n\t\ttagCtx = boundTag(view.data, view, $sub);\n\t}\n\n\tvalue = tagCtx.args[0];\n\tif (converter || boundTag) {\n\t\ttag = linkCtx && linkCtx.tag;\n\t\tif (!tag) {\n\t\t\ttag = $extend(new $sub._tg(), {\n\t\t\t\t_: {\n\t\t\t\t\tinline: !linkCtx,\n\t\t\t\t\tbnd: boundTag,\n\t\t\t\t\tunlinked: true\n\t\t\t\t},\n\t\t\t\ttagName: \":\",\n\t\t\t\tcvt: converter,\n\t\t\t\tflow: true,\n\t\t\t\ttagCtx: tagCtx\n\t\t\t});\n\t\t\tif (linkCtx) {\n\t\t\t\tlinkCtx.tag = tag;\n\t\t\t\ttag.linkCtx = linkCtx;\n\t\t\t}\n\t\t\ttagCtx.ctx = extendCtx(tagCtx.ctx, (linkCtx ? linkCtx.view : view).ctx);\n\t\t}\n\t\ttag._er = onError && value;\n\t\ttagHandlersFromProps(tag, tagCtx);\n\n\t\ttagCtx.view = view;\n\n\t\ttag.ctx = tagCtx.ctx || tag.ctx || {};\n\t\ttagCtx.ctx = undefined;\n\n\t\tvalue = tag.cvtArgs(converter !== \"true\" && converter)[0]; // If there is a convertBack but no convert, converter will be \"true\"\n\n\t\t// Call onRender (used by JsViews if present, to add binding annotations around rendered content)\n\t\tvalue = boundTag && view._.onRender\n\t\t\t? view._.onRender(value, view, tag)\n\t\t\t: value;\n\t}\n\treturn value != undefined ? value : \"\";\n}\n\nfunction convertArgs(converter) {\n\tvar tag = this,\n\t\ttagCtx = tag.tagCtx,\n\t\tview = tagCtx.view,\n\t\targs = tagCtx.args;\n\n\tconverter = converter || tag.convert;\n\tconverter = converter && (\"\" + converter === converter\n\t\t? (view.getRsc(\"converters\", converter) || error(\"Unknown converter: '\" + converter + \"'\"))\n\t\t: converter);\n\n\targs = !args.length && !tagCtx.index // On the opening tag with no args, bind to the current data context\n\t\t? [view.data]\n\t\t: converter\n\t\t\t? args.slice() // If there is a converter, use a copy of the tagCtx.args array for rendering, and replace the args[0] in\n\t\t\t// the copied array with the converted value. But we do not modify the value of tag.tagCtx.args[0] (the original args array)\n\t\t\t: args; // If no converter, get the original tagCtx.args\n\n\tif (converter) {\n\t\tif (converter.depends) {\n\t\t\ttag.depends = $sub.getDeps(tag.depends, tag, converter.depends, converter);\n\t\t}\n\t\targs[0] = converter.apply(tag, args);\n\t}\n\treturn args;\n}\n\n//=============\n// views._tag\n//=============\n\nfunction getResource(resourceType, itemName) {\n\tvar res, store,\n\t\tview = this;\n\twhile ((res === undefined) && view) {\n\t\tstore = view.tmpl && view.tmpl[resourceType];\n\t\tres = store && store[itemName];\n\t\tview = view.parent;\n\t}\n\treturn res || $views[resourceType][itemName];\n}\n\nfunction renderTag(tagName, parentView, tmpl, tagCtxs, isUpdate, onError) {\n\tparentView = parentView || topView;\n\tvar tag, tag_, tagDef, template, tags, attr, parentTag, i, l, itemRet, tagCtx, tagCtxCtx,\n\t\tcontent, callInit, mapDef, thisMap, args, props, initialTmpl, tagDataMap, contentCtx,\n\t\tret = \"\",\n\t\tlinkCtx = parentView.linkCtx || 0,\n\t\tctx = parentView.ctx,\n\t\tparentTmpl = tmpl || parentView.tmpl,\n\t\t// if tagCtx is an integer, then it is the key for the compiled function to return the boundTag tagCtxs\n\t\tboundTag = typeof tagCtxs === \"number\" && parentView.tmpl.bnds[tagCtxs-1];\n\n\tif (tagName._is === \"tag\") {\n\t\ttag = tagName;\n\t\ttagName = tag.tagName;\n\t\ttagCtxs = tag.tagCtxs;\n\t\ttemplate = tag.template;\n\t} else {\n\t\ttagDef = parentView.getRsc(\"tags\", tagName) || error(\"Unknown tag: {{\" + tagName + \"}} \");\n\t\ttemplate = tagDef.template;\n\t}\n\n\tif (onError !== undefined) {\n\t\tret += onError;\n\t\ttagCtxs = onError = [{props: {}, args: []}];\n\t} else if (boundTag) {\n\t\ttagCtxs = boundTag(parentView.data, parentView, $sub);\n\t}\n\n\tl = tagCtxs.length;\n\tfor (i = 0; i < l; i++) {\n\t\ttagCtx = tagCtxs[i];\n\t\tif (!linkCtx || !linkCtx.tag || i && !linkCtx.tag._.inline || tag._er) {\n\t\t\t// Initialize tagCtx\n\t\t\t// For block tags, tagCtx.tmpl is an integer > 0\n\t\t\tif (content = parentTmpl.tmpls && tagCtx.tmpl) {\n\t\t\t\tcontent = tagCtx.content = parentTmpl.tmpls[content - 1];\n\t\t\t}\n\t\t\ttagCtx.index = i;\n\t\t\ttagCtx.tmpl = content; // Set the tmpl property to the content of the block tag\n\t\t\ttagCtx.render = renderContent;\n\t\t\ttagCtx.view = parentView;\n\t\t\ttagCtx.ctx = extendCtx(tagCtx.ctx, ctx); // Clone and extend parentView.ctx\n\t\t}\n\t\tif (tmpl = tagCtx.props.tmpl) {\n\t\t\t// If the tmpl property is overridden, set the value (when initializing, or, in case of binding: ^tmpl=..., when updating)\n\t\t\ttagCtx.tmpl = parentView.getTmpl(tmpl);\n\t\t}\n\n\t\tif (!tag) {\n\t\t\t// This will only be hit for initial tagCtx (not for {{else}}) - if the tag instance does not exist yet\n\t\t\t// Instantiate tag if it does not yet exist\n\t\t\t// If the tag has not already been instantiated, we will create a new instance.\n\t\t\t// ~tag will access the tag, even within the rendering of the template content of this tag.\n\t\t\t// From child/descendant tags, can access using ~tag.parent, or ~parentTags.tagName\n\t\t\ttag = new tagDef._ctr();\n\t\t\tcallInit = !!tag.init;\n\n\t\t\ttag.parent = parentTag = ctx && ctx.tag;\n\t\t\ttag.tagCtxs = tagCtxs;\n\t\t\ttagDataMap = tag.dataMap;\n\n\t\t\tif (linkCtx) {\n\t\t\t\ttag._.inline = false;\n\t\t\t\tlinkCtx.tag = tag;\n\t\t\t\ttag.linkCtx = linkCtx;\n\t\t\t}\n\t\t\tif (tag._.bnd = boundTag || linkCtx.fn) {\n\t\t\t\t// Bound if {^{tag...}} or data-link=\"{tag...}\"\n\t\t\t\ttag._.arrVws = {};\n\t\t\t} else if (tag.dataBoundOnly) {\n\t\t\t\terror(\"{^{\" + tagName + \"}} tag must be data-bound\");\n\t\t\t}\n\t\t\t//TODO better perf for childTags() - keep child tag.tags array, (and remove child, when disposed)\n\t\t\t// tag.tags = [];\n\t\t}\n\t\ttagCtxs = tag.tagCtxs;\n\t\ttagDataMap = tag.dataMap;\n\n\t\ttagCtx.tag = tag;\n\t\tif (tagDataMap && tagCtxs) {\n\t\t\ttagCtx.map = tagCtxs[i].map; // Copy over the compiled map instance from the previous tagCtxs to the refreshed ones\n\t\t}\n\t\tif (!tag.flow) {\n\t\t\ttagCtxCtx = tagCtx.ctx = tagCtx.ctx || {};\n\n\t\t\t// tags hash: tag.ctx.tags, merged with parentView.ctx.tags,\n\t\t\ttags = tag.parents = tagCtxCtx.parentTags = ctx && extendCtx(tagCtxCtx.parentTags, ctx.parentTags) || {};\n\t\t\tif (parentTag) {\n\t\t\t\ttags[parentTag.tagName] = parentTag;\n\t\t\t\t//TODO better perf for childTags: parentTag.tags.push(tag);\n\t\t\t}\n\t\t\ttags[tag.tagName] = tagCtxCtx.tag = tag;\n\t\t}\n\t}\n\tif (!(tag._er = onError)) {\n\t\ttagHandlersFromProps(tag, tagCtxs[0]);\n\t\ttag.rendering = {}; // Provide object for state during render calls to tag and elses. (Used by {{if}} and {{for}}...)\n\t\tfor (i = 0; i < l; i++) {\n\t\t\ttagCtx = tag.tagCtx = tagCtxs[i];\n\t\t\tprops = tagCtx.props;\n\t\t\targs = tag.cvtArgs();\n\n\t\t\tif (mapDef = props.dataMap || tagDataMap) {\n\t\t\t\tif (args.length || props.dataMap) {\n\t\t\t\t\tthisMap = tagCtx.map;\n\t\t\t\t\tif (!thisMap || thisMap.src !== args[0] || isUpdate) {\n\t\t\t\t\t\tif (thisMap && thisMap.src) {\n\t\t\t\t\t\t\tthisMap.unmap(); // only called if observable map - not when only used in JsRender, e.g. by {{props}}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthisMap = tagCtx.map = mapDef.map(args[0], props, undefined, !tag._.bnd);\n\t\t\t\t\t}\n\t\t\t\t\targs = [thisMap.tgt];\n\t\t\t\t}\n\t\t\t}\n\t\t\ttag.ctx = tagCtx.ctx;\n\n\t\t\tif (!i) {\n\t\t\t\tif (callInit) {\n\t\t\t\t\tinitialTmpl = tag.template;\n\t\t\t\t\ttag.init(tagCtx, linkCtx, tag.ctx);\n\t\t\t\t\tcallInit = undefined;\n\t\t\t\t}\n\t\t\t\tif (linkCtx) {\n\t\t\t\t\t// Set attr on linkCtx to ensure outputting to the correct target attribute.\n\t\t\t\t\t// Setting either linkCtx.attr or this.attr in the init() allows per-instance choice of target attrib.\n\t\t\t\t\tlinkCtx.attr = tag.attr = linkCtx.attr || tag.attr;\n\t\t\t\t}\n\t\t\t\tattr = tag.attr;\n\t\t\t\ttag._.noVws = attr && attr !== HTML;\n\t\t\t}\n\n\t\t\titemRet = undefined;\n\t\t\tif (tag.render) {\n\t\t\t\titemRet = tag.render.apply(tag, args);\n\t\t\t\tif (parentView.linked && itemRet && tag.linkedElem && !rWrappedInViewMarker.test(itemRet)) {\n\t\t\t\t\t// When a tag renders content from the render method, with data linking, and has a linkedElem binding, then we need to wrap with\n\t\t\t\t\t// view markers, if absent, so the content is a view associated with the tag, which will correctly dispose bindings if deleted.\n\t\t\t\t\titemRet = renderWithViews($.templates(itemRet), args[0], undefined, undefined, parentView, undefined, undefined, tag);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!args.length) {\n\t\t\t\targs = [parentView]; // no arguments - (e.g. {{else}}) get data context from view.\n\t\t\t}\n\t\t\tif (itemRet === undefined) {\n\t\t\t\tcontentCtx = args[0]; // Default data context for wrapped block content is the first argument. Defined tag.contentCtx function to override this.\n\t\t\t\tif (tag.contentCtx) {\n\t\t\t\t\tcontentCtx = tag.contentCtx(contentCtx) || contentCtx;\n\t\t\t\t}\n\t\t\t\titemRet = tagCtx.render(contentCtx, true) || (isUpdate ? undefined : \"\");\n\t\t\t}\n\t\t\t// No return value from render, and no template/content tagCtx.render(...), so return undefined\n\t\t\tret = ret ? ret + (itemRet || \"\") : itemRet; // If no rendered content, this will be undefined\n\t\t}\n\t\ttag.rendering = undefined;\n\t}\n\ttag.tagCtx = tagCtxs[0];\n\ttag.ctx = tag.tagCtx.ctx;\n\n\tif (tag._.noVws) {\n\t\t\tif (tag._.inline) {\n\t\t\t// inline tag with attr set to \"text\" will insert HTML-encoded content - as if it was element-based innerText\n\t\t\tret = attr === \"text\"\n\t\t\t\t? $converters.html(ret)\n\t\t\t\t: \"\";\n\t\t}\n\t}\n\treturn boundTag && parentView._.onRender\n\t\t// Call onRender (used by JsViews if present, to add binding annotations around rendered content)\n\t\t? parentView._.onRender(ret, parentView, tag)\n\t\t: ret;\n}\n\n//=================\n// View constructor\n//=================\n\nfunction View(context, type, parentView, data, template, key, onRender, contentTmpl) {\n\t// Constructor for view object in view hierarchy. (Augmented by JsViews if JsViews is loaded)\n\tvar views, parentView_, tag, self_,\n\t\tself = this,\n\t\tisArray = type === \"array\";\n\n\tself.content = contentTmpl;\n\tself.views = isArray ? [] : {};\n\tself.parent = parentView;\n\tself.type = type || \"top\";\n\tself.data = data;\n\tself.tmpl = template;\n\t// If the data is an array, this is an 'array view' with a views array for each child 'item view'\n\t// If the data is not an array, this is an 'item view' with a views 'hash' object for any child nested views\n\t// ._.useKey is non zero if is not an 'array view' (owning a data array). Use this as next key for adding to child views hash\n\tself_ = self._ = {\n\t\tkey: 0,\n\t\tuseKey: isArray ? 0 : 1,\n\t\tid: \"\" + viewId++,\n\t\tonRender: onRender,\n\t\tbnds: {}\n\t};\n\tself.linked = !!onRender;\n\tif (parentView) {\n\t\tviews = parentView.views;\n\t\tparentView_ = parentView._;\n\t\tif (parentView_.useKey) {\n\t\t\t// Parent is not an 'array view'. Add this view to its views object\n\t\t\t// self._key = is the key in the parent view hash\n\t\t\tviews[self_.key = \"_\" + parentView_.useKey++] = self;\n\t\t\tself.index = indexStr;\n\t\t\tself.getIndex = getNestedIndex;\n\t\t} else if (views.length === (self_.key = self.index = key)) { // Parent is an 'array view'. Add this view to its views array\n\t\t\tviews.push(self); // Adding to end of views array. (Using push when possible - better perf than splice)\n\t\t} else {\n\t\t\tviews.splice(key, 0, self); // Inserting in views array\n\t\t}\n\t\t// If no context was passed in, use parent context\n\t\t// If context was passed in, it should have been merged already with parent context\n\t\tself.ctx = context || parentView.ctx;\n\t} else {\n\t\tself.ctx = context;\n\t}\n}\n\nView.prototype = {\n\tget: getView,\n\tgetIndex: getIndex,\n\tgetRsc: getResource,\n\tgetTmpl: getTemplate,\n\thlp: getHelper,\n\t_is: \"view\"\n};\n\n//====================================================\n// Registration\n//====================================================\n\nfunction compileChildResources(parentTmpl) {\n\tvar storeName, storeNames, resources;\n\tfor (storeName in jsvStores) {\n\t\tstoreNames = storeName + \"s\";\n\t\tif (parentTmpl[storeNames]) {\n\t\t\tresources = parentTmpl[storeNames];    // Resources not yet compiled\n\t\t\tparentTmpl[storeNames] = {};               // Remove uncompiled resources\n\t\t\t$views[storeNames](resources, parentTmpl); // Add back in the compiled resources\n\t\t}\n\t}\n}\n\n//===============\n// compileTag\n//===============\n\nfunction compileTag(name, tagDef, parentTmpl) {\n\tvar tmpl, baseTag, prop,\n\t\tcompiledDef = new $sub._tg();\n\n\tfunction Tag() {\n\t\tvar tag = this;\n\t\ttag._ = {\n\t\t\tinline: true,\n\t\t\tunlinked: true\n\t\t};\n\n\t\ttag.tagName = name;\n\t}\n\n\tif ($isFunction(tagDef)) {\n\t\t// Simple tag declared as function. No presenter instantation.\n\t\ttagDef = {\n\t\t\tdepends: tagDef.depends,\n\t\t\trender: tagDef\n\t\t};\n\t} else if (\"\" + tagDef === tagDef) {\n\t\ttagDef = {template: tagDef};\n\t}\n\tif (baseTag = tagDef.baseTag) {\n\t\ttagDef.flow = !!tagDef.flow; // Set flow property, so defaults to false even if baseTag has flow=true\n\t\ttagDef.baseTag = baseTag = \"\" + baseTag === baseTag\n\t\t\t? (parentTmpl && parentTmpl.tags[baseTag] || $tags[baseTag])\n\t\t\t: baseTag;\n\n\t\tcompiledDef = $extend(compiledDef, baseTag);\n\n\t\tfor (prop in tagDef) {\n\t\t\tcompiledDef[prop] = getMethod(baseTag[prop], tagDef[prop]);\n\t\t}\n\t} else {\n\t\tcompiledDef = $extend(compiledDef, tagDef);\n\t}\n\n\t// Tag declared as object, used as the prototype for tag instantiation (control/presenter)\n\tif ((tmpl = compiledDef.template) !== undefined) {\n\t\tcompiledDef.template = \"\" + tmpl === tmpl ? ($templates[tmpl] || $templates(tmpl)) : tmpl;\n\t}\n\tif (compiledDef.init !== false) {\n\t\t// Set init: false on tagDef if you want to provide just a render method, or render and template, but no constructor or prototype.\n\t\t// so equivalent to setting tag to render function, except you can also provide a template.\n\t\t(Tag.prototype = compiledDef).constructor = compiledDef._ctr = Tag;\n\t}\n\n\tif (parentTmpl) {\n\t\tcompiledDef._parentTmpl = parentTmpl;\n\t}\n\treturn compiledDef;\n}\n\nfunction baseApply(args) {\n\t// In derived method (or handler declared declaratively as in {{:foo onChange=~fooChanged}} can call base method,\n\t// using this.baseApply(arguments) (Equivalent to this._superApply(arguments) in jQuery UI)\n\treturn this.base.apply(this, args);\n}\n\n//===============\n// compileTmpl\n//===============\n\nfunction compileTmpl(name, tmpl, parentTmpl, options) {\n\t// tmpl is either a template object, a selector for a template script block, the name of a compiled template, or a template object\n\n\t//==== nested functions ====\n\tfunction lookupTemplate(value) {\n\t\t// If value is of type string - treat as selector, or name of compiled template\n\t\t// Return the template object, if already compiled, or the markup string\n\t\tvar currentName, tmpl;\n\t\tif ((\"\" + value === value) || value.nodeType > 0 && (elem = value)) {\n\t\t\tif (!elem) {\n\t\t\t\tif (/^\\.\\/[^\\\\:*?\"<>]*$/.test(value)) {\n\t\t\t\t\t// tmpl=\"./some/file.html\"\n\t\t\t\t\t// If the template is not named, use \"./some/file.html\" as name.\n\t\t\t\t\tif (tmpl = $templates[name = name || value]) {\n\t\t\t\t\t\tvalue = tmpl;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// NODE.JS-SPECIFIC CODE:\n\t\t\t\t\t\t// Load template file from the file system\n\t\t\t\t\t\t// Consider supporting/using async version with callback: nodeFs.readFile(path, {encoding: \"utf8\"}, callback);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tvalue = nodeFs.readFileSync(value, \"utf8\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch(e) {\n\t\t\t\t\t\t\tif(e && e.code == 'ENOENT') {\n\t\t\t\t\t\t\t\terror(\"Template '\" + value + \"' not found at '\" + e.path + \"'. Use path relative to '\" + rootDirPath + \"'.\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Remove BOM if necessary\n\t\t\t\t\t\tvalue = compileTmpl(name, value.replace(/^\\uFEFF/, ''), parentTmpl, options);\n\n\t\t\t\t\t\tif (!options) {\n\t\t\t\t\t\t\t$templates[name] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telem = undefined;\n\t\t} else if (!value.fn) {\n\t\t\tvalue = undefined;\n\t\t\t// If value is not a string. HTML element, or compiled template, return undefined\n\t\t}\n\t\treturn value;\n\t}\n\n\tvar elem, compiledTmpl,\n\t\ttmplOrMarkup = tmpl = tmpl || \"\";\n\n\t//==== Compile the template ====\n\tif (options === 0) {\n\t\toptions = undefined;\n\t\ttmplOrMarkup = lookupTemplate(tmplOrMarkup); // Top-level compile so do a template lookup\n\t}\n\n\t// If options, then this was already compiled from a (script) element template declaration.\n\t// If not, then if tmpl is a template object, use it for options\n\toptions = options || (tmpl.markup ? tmpl : {});\n\toptions.tmplName = name;\n\tif (parentTmpl) {\n\t\toptions._parentTmpl = parentTmpl;\n\t}\n\t// If tmpl is not a markup string or a selector string, then it must be a template object\n\t// In that case, get it from the markup property of the object\n\tif (!tmplOrMarkup && tmpl.markup && (tmplOrMarkup = lookupTemplate(tmpl.markup))) {\n\t\tif (tmplOrMarkup.fn) {\n\t\t\t// If the string references a compiled template object, need to recompile to merge any modified options\n\t\t\ttmplOrMarkup = tmplOrMarkup.markup;\n\t\t}\n\t}\n\tif (tmplOrMarkup !== undefined) {\n\t\tif (tmplOrMarkup.fn || tmpl.fn) {\n\t\t\t// tmpl is already compiled, so use it\n\t\t\tif (tmplOrMarkup.fn) {\n\t\t\t\tcompiledTmpl = tmplOrMarkup;\n\t\t\t}\n\t\t} else {\n\t\t\t// tmplOrMarkup is a markup string, not a compiled template\n\t\t\t// Create template object\n\t\t\ttmpl = tmplObject(tmplOrMarkup, options);\n\t\t\t// Compile to AST and then to compiled function\n\t\t\ttmplFn(tmplOrMarkup.replace(rEscapeQuotes, \"\\\\$&\"), tmpl);\n\t\t}\n\t\tif (!compiledTmpl) {\n\t\t\tcompiledTmpl = $extend(function() {\n\t\t\t\treturn compiledTmpl.render.apply(compiledTmpl, arguments);\n\t\t\t}, tmpl);\n\n\t\t\tcompileChildResources(compiledTmpl);\n\t\t}\n\t\tif (name && !parentTmpl && name !== jsvTmpl) {\n\t\t\t$render[name] = compiledTmpl;\n\t\t}\n\t\treturn compiledTmpl;\n\t}\n}\n\n//==== /end of function compileTmpl ====\n\n//=================\n// compileViewModel\n//=================\n\nfunction getDefaultVal(defaultVal, data) {\n\treturn $.isFunction(defaultVal)\n\t\t? defaultVal.call(data)\n\t\t: defaultVal;\n}\n\nfunction unmapArray(modelArr) {\n\t\tvar i, arr = [],\n\t\t\tl = modelArr.length;\n\t\tfor (i=0; i<l; i++) {\n\t\t\tarr.push(modelArr[i].unmap());\n\t\t}\n\t\treturn arr;\n}\n\nfunction compileViewModel(name, type) {\n\tvar i, constructor,\n\t\tviewModels = this,\n\t\tgetters = type.getters,\n\t\textend = type.extend,\n\t\tid = type.id,\n\t\tproto = $.extend({\n\t\t\t_is: name || \"unnamed\",\n\t\t\tunmap: unmap,\n\t\t\tmerge: merge\n\t\t}, extend),\n\t\targs = \"\",\n\t\tbody = \"\",\n\t\tl = getters ? getters.length : 0,\n\t\t$observable = $.observable,\n\t\tgetterNames = {};\n\n\tfunction GetNew(args) {\n\t\tconstructor.apply(this, args);\n\t}\n\n\tfunction vm() {\n\t\treturn new GetNew(arguments);\n\t}\n\n\tfunction iterate(data, action) {\n\t\tvar j, getterType, defaultVal, prop, ob,\n\t\t\tm = getters.length;\n\t\tfor (j=0; j<m; j++) {\n\t\t\tprop = getters[j];\n\t\t\tgetterType = undefined;\n\t\t\tif (prop + \"\" !== prop) {\n\t\t\t\tgetterType = prop;\n\t\t\t\tprop = getterType.getter;\n\t\t\t}\n\t\t\tif ((ob = data[prop]) === undefined && getterType && (defaultVal = getterType.defaultVal) !== undefined) {\n\t\t\t\tob = getDefaultVal(defaultVal, data);\n\t\t\t}\n\t\t\taction(ob, getterType && viewModels[getterType.type], prop);\n\t\t}\n\t}\n\n\tfunction map(data) {\n\t\tdata = data + \"\" === data\n\t\t\t? JSON.parse(data) // Accept JSON string\n\t\t\t: data;            // or object/array\n\t\tvar i, j,  l, m, prop,\n\t\t\tob = data,\n\t\t\tarr = [];\n\n\t\tif ($isArray(data)) {\n\t\t\tdata = data || [];\n\t\t\tl = data.length;\n\t\t\tfor (i=0; i<l; i++) {\n\t\t\t\tarr.push(this.map(data[i]));\n\t\t\t}\n\t\t\tarr._is = name;\n\t\t\tarr.unmap = unmap;\n\t\t\tarr.merge = merge;\n\t\t\treturn arr;\n\t\t}\n\n\t\tif (data) {\n\t\t\titerate(data, function(ob, viewModel) {\n\t\t\t\tif (viewModel) { // Iterate to build getters arg array (value, or mapped value)\n\t\t\t\t\tob = viewModel.map(ob);\n\t\t\t\t}\n\t\t\t\tarr.push(ob);\n\t\t\t});\n\n\t\t\tob = this.apply(this, arr); // Insantiate this View Model, passing getters args array to constructor\n\t\t\tfor (prop in data) { // Copy over any other properties. that are not get/set properties\n\t\t\t\tif (!getterNames[prop]) {\n\t\t\t\t\tob[prop] = data[prop];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ob;\n\t}\n\n\tfunction merge(data) {\n\t\tdata = data + \"\" === data\n\t\t\t? JSON.parse(data) // Accept JSON string\n\t\t\t: data;            // or object/array\n\t\tvar i, j, l, m, prop, mod, found, assigned, ob, newModArr,\n\t\t\tmodel = this;\n\n\t\tif ($isArray(model)) {\n\t\t\tassigned = {};\n\t\t\tnewModArr = [];\n\t\t\tl = data.length;\n\t\t\tm = model.length;\n\t\t\tfor (i=0; i<l; i++) {\n\t\t\t\tob = data[i];\n\t\t\t\tfound = false;\n\t\t\t\tfor (j=0; j<m && !found; j++) {\n\t\t\t\t\tif (assigned[j]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tmod = model[j];\n\n\t\t\t\t\tif (id) {\n\t\t\t\t\t\tassigned[j] = found = id + \"\" === id\n\t\t\t\t\t\t? (ob[id] && (getterNames[id] ? mod[id]() : mod[id]) === ob[id])\n\t\t\t\t\t\t: id(mod, ob);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (found) {\n\t\t\t\t\tmod.merge(ob);\n\t\t\t\t\tnewModArr.push(mod);\n\t\t\t\t} else {\n\t\t\t\t\tnewModArr.push(vm.map(ob));\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ($observable) {\n\t\t\t\t$observable(model).refresh(newModArr, true);\n\t\t\t} else {\n\t\t\t\tmodel.splice.apply(model, [0, model.length].concat(newModArr));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\titerate(data, function(ob, viewModel, getter) {\n\t\t\tif (viewModel) {\n\t\t\t\tmodel[getter]().merge(ob); // Update typed property\n\t\t\t} else {\n\t\t\t\tmodel[getter](ob); // Update non-typed property\n\t\t\t}\n\t\t});\n\t\tfor (prop in data) {\n\t\t\tif (!getterNames[prop]) {\n\t\t\t\tmodel[prop] = data[prop];\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction unmap() {\n\t\tvar ob, prop, i, l, getterType, arr, value,\n\t\t\tmodel = this;\n\n\t\tif ($isArray(model)) {\n\t\t\treturn unmapArray(model);\n\t\t}\n\t\tob = {};\n\t\tl = getters.length;\n\t\tfor (i=0; i<l; i++) {\n\t\t\tprop = getters[i];\n\t\t\tgetterType = undefined;\n\t\t\tif (prop + \"\" !== prop) {\n\t\t\t\tgetterType = prop;\n\t\t\t\tprop = getterType.getter;\n\t\t\t}\n\t\t\tvalue = model[prop]();\n\t\t\tob[prop] = getterType && value && viewModels[getterType.type]\n\t\t\t\t? $isArray(value)\n\t\t\t\t\t? unmapArray(value)\n\t\t\t\t\t: value.unmap()\n\t\t\t\t: value;\n\t\t}\n\t\tfor (prop in model) {\n\t\t\tif (prop !== \"_is\" && !getterNames[prop] && (prop.charAt(0) !== \"_\" || !getterNames[prop.slice(1)]) && !$.isFunction(model[prop])) {\n\t\t\t\tob[prop] = model[prop];\n\t\t\t}\n\t\t}\n\t\treturn ob;\n\t}\n\n\tGetNew.prototype = proto;\n\n\tfor (i=0; i<l; i++) {\n\t\t(function(getter) {\n\t\t\tgetter = getter.getter || getter;\n\t\t\tgetterNames[getter] = i+1;\n\t\t\tvar privField = \"_\" + getter;\n\n\t\t\targs += (args ? \",\" : \"\") + getter;\n\t\t\tbody += \"this.\" + privField + \" = \" + getter + \";\\n\";\n\t\t\tproto[getter] = proto[getter] || function(val) {\n\t\t\t\tif (!arguments.length) {\n\t\t\t\t\treturn this[privField]; // If there is no argument, use as a getter\n\t\t\t\t}\n\t\t\t\tif ($observable) {\n\t\t\t\t\t$observable(this).setProperty(getter, val);\n\t\t\t\t} else {\n\t\t\t\t\tthis[privField] = val;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif ($observable) {\n\t\t\t\tproto[getter].set = proto[getter].set || function(val) {\n\t\t\t\t\tthis[privField] = val; // Setter called by observable property change\n\t\t\t\t};\n\t\t\t}\n\t\t})(getters[i]);\n\t}\n\n\tconstructor = new Function(args, body.slice(0, -1));\n\tconstructor.prototype = proto;\n\tproto.constructor = constructor;\n\n\tvm.map = map;\n\tvm.getters = getters;\n\tvm.extend = extend;\n\tvm.id = id;\n\treturn vm;\n}\n\nfunction tmplObject(markup, options) {\n\t// Template object constructor\n\tvar htmlTag,\n\t\twrapMap = $subSettingsAdvanced._wm || {}, // Only used in JsViews. Otherwise empty: {}\n\t\ttmpl = $extend(\n\t\t\t{\n\t\t\t\ttmpls: [],\n\t\t\t\tlinks: {}, // Compiled functions for link expressions\n\t\t\t\tbnds: [],\n\t\t\t\t_is: \"template\",\n\t\t\t\trender: renderContent\n\t\t\t},\n\t\t\toptions\n\t\t);\n\n\ttmpl.markup = markup;\n\tif (!options.htmlTag) {\n\t\t// Set tmpl.tag to the top-level HTML tag used in the template, if any...\n\t\thtmlTag = rFirstElem.exec(markup);\n\t\ttmpl.htmlTag = htmlTag ? htmlTag[1].toLowerCase() : \"\";\n\t}\n\thtmlTag = wrapMap[tmpl.htmlTag];\n\tif (htmlTag && htmlTag !== wrapMap.div) {\n\t\t// When using JsViews, we trim templates which are inserted into HTML contexts where text nodes are not rendered (i.e. not 'Phrasing Content').\n\t\t// Currently not trimmed for <li> tag. (Not worth adding perf cost)\n\t\ttmpl.markup = $.trim(tmpl.markup);\n\t}\n\n\treturn tmpl;\n}\n\n//==============\n// registerStore\n//==============\n\nfunction registerStore(storeName, storeSettings) {\n\n\tfunction theStore(name, item, parentTmpl) {\n\t\t// The store is also the function used to add items to the store. e.g. $.templates, or $.views.tags\n\n\t\t// For store of name 'thing', Call as:\n\t\t//    $.views.things(items[, parentTmpl]),\n\t\t// or $.views.things(name, item[, parentTmpl])\n\n\t\tvar onStore, compile, itemName, thisStore;\n\t\tif (name && typeof name === OBJECT && !name.nodeType && !name.markup && !name.getTgt && !(storeName === \"viewModel\" && name.getters || name.extend)) {\n\t\t\t// Call to $.views.things(items[, parentTmpl]),\n\n\t\t\t// Adding items to the store\n\t\t\t// If name is a hash, then item is parentTmpl. Iterate over hash and call store for key.\n\t\t\tfor (itemName in name) {\n\t\t\t\ttheStore(itemName, name[itemName], item);\n\t\t\t}\n\t\t\treturn item || $views;\n\t\t}\n\t\t// Adding a single unnamed item to the store\n\t\tif (item === undefined) {\n\t\t\titem = name;\n\t\t\tname = undefined;\n\t\t}\n\t\tif (name && \"\" + name !== name) { // name must be a string\n\t\t\tparentTmpl = item;\n\t\t\titem = name;\n\t\t\tname = undefined;\n\t\t}\n\t\tthisStore = parentTmpl\n\t\t\t? storeName === \"viewModel\"\n\t\t\t\t? parentTmpl\n\t\t\t\t: (parentTmpl[storeNames] = parentTmpl[storeNames] || {})\n\t\t\t: theStore;\n\t\tcompile = storeSettings.compile;\n\t\tif (item === null) {\n\t\t\t// If item is null, delete this entry\n\t\t\tif (name) {\n\t\t\t\tdelete thisStore[name];\n\t\t\t}\n\t\t} else {\n\t\t\titem = compile ? compile.call(thisStore, name, item, parentTmpl, 0) : item;\n\t\t\tif (name) {\n\t\t\t\tthisStore[name] = item;\n\t\t\t}\n\t\t}\n\t\tif (compile && item) {\n\t\t\titem._is = storeName; // Only do this for compiled objects (tags, templates...)\n\t\t}\n\t\tif (item && (onStore = $sub.onStore[storeName])) {\n\t\t\t// e.g. JsViews integration\n\t\t\tonStore(name, item, compile);\n\t\t}\n\t\treturn item;\n\t}\n\n\tvar storeNames = storeName + \"s\";\n\n\t$views[storeNames] = theStore;\n}\n\nfunction addSetting(st) {\n\t$viewsSettings[st] = function(value) {\n\t\treturn arguments.length\n\t\t\t? ($subSettings[st] = value, $viewsSettings)\n\t\t\t: $subSettings[st];\n\t};\n}\n\n//=========\n// dataMap\n//=========\n\nfunction dataMap(mapDef) {\n\tfunction Map(source, options) {\n\t\tthis.tgt = mapDef.getTgt(source, options);\n\t}\n\n\tif ($isFunction(mapDef)) {\n\t\t// Simple map declared as function\n\t\tmapDef = {\n\t\t\tgetTgt: mapDef\n\t\t};\n\t}\n\n\tif (mapDef.baseMap) {\n\t\tmapDef = $extend($extend({}, mapDef.baseMap), mapDef);\n\t}\n\n\tmapDef.map = function(source, options) {\n\t\treturn new Map(source, options);\n\t};\n\treturn mapDef;\n}\n\n//==============\n// renderContent\n//==============\n\nfunction renderContent(data, context, noIteration, parentView, key, onRender) {\n\tvar i, l, tag, tmpl, tagCtx, isTopRenderCall, prevData, prevIndex,\n\t\tview = parentView,\n\t\tresult = \"\";\n\n\tif (context === true) {\n\t\tnoIteration = context; // passing boolean as second param - noIteration\n\t\tcontext = undefined;\n\t} else if (typeof context !== OBJECT) {\n\t\tcontext = undefined; // context must be a boolean (noIteration) or a plain object\n\t}\n\n\tif (tag = this.tag) {\n\t\t// This is a call from renderTag or tagCtx.render(...)\n\t\ttagCtx = this;\n\t\tview = view || tagCtx.view;\n\t\ttmpl = view.getTmpl(tag.template || tagCtx.tmpl);\n\t\tif (!arguments.length) {\n\t\t\tdata = view;\n\t\t}\n\t} else {\n\t\t// This is a template.render(...) call\n\t\ttmpl = this;\n\t}\n\n\tif (tmpl) {\n\t\tif (!parentView && data && data._is === \"view\") {\n\t\t\tview = data; // When passing in a view to render or link (and not passing in a parent view) use the passed-in view as parentView\n\t\t}\n\n\t\tif (view) {\n\t\t\tif (data === view) {\n\t\t\t\t// Inherit the data from the parent view.\n\t\t\t\t// This may be the contents of an {{if}} block\n\t\t\t\tdata = view.data;\n\t\t\t}\n\t\t}\n\n\t\tisTopRenderCall = !view;\n\t\tisRenderCall = isRenderCall || isTopRenderCall;\n\t\tif (!view) {\n\t\t\t(context = context || {}).root = data; // Provide ~root as shortcut to top-level data.\n\t\t}\n\t\tif (!isRenderCall || $subSettingsAdvanced.useViews || tmpl.useViews || view && view !== topView) {\n\t\t\tresult = renderWithViews(tmpl, data, context, noIteration, view, key, onRender, tag);\n\t\t} else {\n\t\t\tif (view) { // In a block\n\t\t\t\tprevData = view.data;\n\t\t\t\tprevIndex = view.index;\n\t\t\t\tview.index = indexStr;\n\t\t\t} else {\n\t\t\t\tview = topView;\n\t\t\t\tview.data = data;\n\t\t\t\tview.ctx = context;\n\t\t\t}\n\t\t\tif ($isArray(data) && !noIteration) {\n\t\t\t\t// Create a view for the array, whose child views correspond to each data item. (Note: if key and parentView are passed in\n\t\t\t\t// along with parent view, treat as insert -e.g. from view.addViews - so parentView is already the view item for array)\n\t\t\t\tfor (i = 0, l = data.length; i < l; i++) {\n\t\t\t\t\tview.index = i;\n\t\t\t\t\tview.data = data[i];\n\t\t\t\t\tresult += tmpl.fn(data[i], view, $sub);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tview.data = data;\n\t\t\t\tresult += tmpl.fn(data, view, $sub);\n\t\t\t}\n\t\t\tview.data = prevData;\n\t\t\tview.index = prevIndex;\n\t\t}\n\t\tif (isTopRenderCall) {\n\t\t\tisRenderCall = undefined;\n\t\t}\n\t}\n\treturn result;\n}\n\nfunction renderWithViews(tmpl, data, context, noIteration, view, key, onRender, tag) {\n\tfunction setItemVar(item) {\n\t\t// When itemVar is specified, set modified ctx with user-named ~item\n\t\tnewCtx = $extend({}, context);\n\t\tnewCtx[itemVar] = item;\n\t}\n\n\t// Render template against data as a tree of subviews (nested rendered template instances), or as a string (top-level template).\n\t// If the data is the parent view, treat as noIteration, re-render with the same data context.\n\tvar i, l, newView, childView, itemResult, swapContent, contentTmpl, outerOnRender, tmplName, itemVar, newCtx, tagCtx,\n\t\tresult = \"\";\n\n\tif (tag) {\n\t\t// This is a call from renderTag or tagCtx.render(...)\n\t\ttmplName = tag.tagName;\n\t\ttagCtx = tag.tagCtx;\n\t\tcontext = context ? extendCtx(context, tag.ctx) : tag.ctx;\n\n\t\tif (tmpl === view.content) { // {{xxx tmpl=#content}}\n\t\t\tcontentTmpl = tmpl !== view.ctx._wrp // We are rendering the #content\n\t\t\t\t? view.ctx._wrp // #content was the tagCtx.props.tmpl wrapper of the block content - so within this view, #content will now be the view.ctx._wrp block content\n\t\t\t\t: undefined; // #content was the view.ctx._wrp block content - so within this view, there is no longer any #content to wrap.\n\t\t} else if (tmpl !== tagCtx.content) {\n\t\t\tif (tmpl === tag.template) { // Rendering {{tag}} tag.template, replacing block content.\n\t\t\t\tcontentTmpl = tagCtx.tmpl; // Set #content to block content (or wrapped block content if tagCtx.props.tmpl is set)\n\t\t\t\tcontext._wrp = tagCtx.content; // Pass wrapped block content to nested views\n\t\t\t} else { // Rendering tagCtx.props.tmpl wrapper\n\t\t\t\tcontentTmpl = tagCtx.content || view.content; // Set #content to wrapped block content\n\t\t\t}\n\t\t} else {\n\t\t\tcontentTmpl = view.content; // Nested views inherit same wrapped #content property\n\t\t}\n\n\t\tif (tagCtx.props.link === false) {\n\t\t\t// link=false setting on block tag\n\t\t\t// We will override inherited value of link by the explicit setting link=false taken from props\n\t\t\t// The child views of an unlinked view are also unlinked. So setting child back to true will not have any effect.\n\t\t\tcontext = context || {};\n\t\t\tcontext.link = false;\n\t\t}\n\n\t\tif (itemVar = tagCtx.props.itemVar) {\n\t\t\tif (itemVar.charAt(0) !== \"~\") {\n\t\t\t\tsyntaxError(\"Use itemVar='~myItem'\");\n\t\t\t}\n\t\t\titemVar = itemVar.slice(1);\n\t\t}\n\t}\n\n\tif (view) {\n\t\tonRender = onRender || view._.onRender;\n\t\tcontext = extendCtx(context, view.ctx);\n\t}\n\n\tif (key === true) {\n\t\tswapContent = true;\n\t\tkey = 0;\n\t}\n\n\t// If link===false, do not call onRender, so no data-linking marker nodes\n\tif (onRender && (context && context.link === false || tag && tag._.noVws)) {\n\t\tonRender = undefined;\n\t}\n\touterOnRender = onRender;\n\tif (onRender === true) {\n\t\t// Used by view.refresh(). Don't create a new wrapper view.\n\t\touterOnRender = undefined;\n\t\tonRender = view._.onRender;\n\t}\n\t// Set additional context on views created here, (as modified context inherited from the parent, and to be inherited by child views)\n\tcontext = tmpl.helpers\n\t\t? extendCtx(tmpl.helpers, context)\n\t\t: context;\n\n\tnewCtx = context;\n\tif ($isArray(data) && !noIteration) {\n\t\t// Create a view for the array, whose child views correspond to each data item. (Note: if key and view are passed in\n\t\t// along with parent view, treat as insert -e.g. from view.addViews - so view is already the view item for array)\n\t\tnewView = swapContent\n\t\t\t? view\n\t\t\t: (key !== undefined && view)\n\t\t\t\t|| new View(context, \"array\", view, data, tmpl, key, onRender, contentTmpl);\n\t\tif (view && view._.useKey) {\n\t\t\t// Parent is not an 'array view'\n\t\t\tnewView._.bnd = !tag || tag._.bnd && tag; // For array views that are data bound for collection change events, set the\n\t\t\t// view._.bnd property to true for top-level link() or data-link=\"{for}\", or to the tag instance for a data-bound tag, e.g. {^{for ...}}\n\t\t}\n\t\tif (itemVar) {\n\t\t\tnewView.it = itemVar;\n\t\t}\n\t\titemVar = newView.it;\n\t\tfor (i = 0, l = data.length; i < l; i++) {\n\t\t\t// Create a view for each data item.\n\t\t\tif (itemVar) {\n\t\t\t\tsetItemVar(data[i]); // use modified ctx with user-named ~item\n\t\t\t}\n\t\t\tchildView = new View(newCtx, \"item\", newView, data[i], tmpl, (key || 0) + i, onRender, newView.content);\n\n\t\t\titemResult = tmpl.fn(data[i], childView, $sub);\n\t\t\tresult += newView._.onRender ? newView._.onRender(itemResult, childView) : itemResult;\n\t\t}\n\t} else {\n\t\t// Create a view for singleton data object. The type of the view will be the tag name, e.g. \"if\" or \"myTag\" except for\n\t\t// \"item\", \"array\" and \"data\" views. A \"data\" view is from programmatic render(object) against a 'singleton'.\n\t\tif (itemVar) {\n\t\t\tsetItemVar(data);\n\t\t}\n\t\tnewView = swapContent ? view : new View(newCtx, tmplName || \"data\", view, data, tmpl, key, onRender, contentTmpl);\n\t\tif (tag && !tag.flow) {\n\t\t\tnewView.tag = tag;\n\t\t\ttag.view = newView;\n\t\t}\n\t\tresult += tmpl.fn(data, newView, $sub);\n\t}\n\treturn outerOnRender ? outerOnRender(result, newView) : result;\n}\n\n//===========================\n// Build and compile template\n//===========================\n\n// Generate a reusable function that will serve to render a template against data\n// (Compile AST then build template function)\n\nfunction onRenderError(e, view, fallback) {\n\tvar message = fallback !== undefined\n\t\t? $isFunction(fallback)\n\t\t\t? fallback.call(view.data, e, view)\n\t\t\t: fallback || \"\"\n\t\t: \"{Error: \" + e.message + \"}\";\n\n\tif ($subSettings.onError && (fallback = $subSettings.onError.call(view.data, e, fallback && message, view)) !== undefined) {\n\t\tmessage = fallback; // There is a settings.debugMode(handler) onError override. Call it, and use return value (if any) to replace message\n\t}\n\n\treturn view && !view.linkCtx ? $converters.html(message) : message;\n}\n\nfunction error(message) {\n\tthrow new $sub.Err(message);\n}\n\nfunction syntaxError(message) {\n\terror(\"Syntax error\\n\" + message);\n}\n\nfunction tmplFn(markup, tmpl, isLinkExpr, convertBack, hasElse) {\n\t// Compile markup to AST (abtract syntax tree) then build the template function code from the AST nodes\n\t// Used for compiling templates, and also by JsViews to build functions for data link expressions\n\n\t//==== nested functions ====\n\tfunction pushprecedingContent(shift) {\n\t\tshift -= loc;\n\t\tif (shift) {\n\t\t\tcontent.push(markup.substr(loc, shift).replace(rNewLine, \"\\\\n\"));\n\t\t}\n\t}\n\n\tfunction blockTagCheck(tagName, block) {\n\t\tif (tagName) {\n\t\t\ttagName += '}}';\n\t\t\t//\t\t\t'{{include}} block has {{/for}} with no open {{for}}'\n\t\t\tsyntaxError((\n\t\t\t\tblock\n\t\t\t\t\t? '{{' + block + '}} block has {{/' + tagName + ' without {{' + tagName\n\t\t\t\t\t: 'Unmatched or missing {{/' + tagName) + ', in template:\\n' + markup);\n\t\t}\n\t}\n\n\tfunction parseTag(all, bind, tagName, converter, colon, html, codeTag, params, slash, bind2, closeBlock, index) {\n/*\n\n     bind     tagName         cvt   cln html code    params            slash   bind2         closeBlk  comment\n/(?:{(\\^)?{(?:(\\w+(?=[\\/\\s}]))|(\\w+)?(:)|(>)|(\\*))\\s*((?:[^}]|}(?!}))*?)(\\/)?|{(\\^)?{(?:(?:\\/(\\w+))\\s*|!--[\\s\\S]*?--))}}/g\n\n(?:\n  {(\\^)?{            bind\n  (?:\n    (\\w+             tagName\n      (?=[\\/\\s}])\n    )\n    |\n    (\\w+)?(:)        converter colon\n    |\n    (>)              html\n    |\n    (\\*)             codeTag\n  )\n  \\s*\n  (                  params\n    (?:[^}]|}(?!}))*?\n  )\n  (\\/)?              slash\n  |\n  {(\\^)?{            bind2\n  (?:\n    (?:\\/(\\w+))\\s*   closeBlock\n    |\n    !--[\\s\\S]*?--    comment\n  )\n)\n}}/g\n\n*/\n\t\tif (codeTag && bind || slash && !tagName || params && params.slice(-1) === \":\" || bind2) {\n\t\t\tsyntaxError(all);\n\t\t}\n\n\t\t// Build abstract syntax tree (AST): [tagName, converter, params, content, hash, bindings, contentMarkup]\n\t\tif (html) {\n\t\t\tcolon = \":\";\n\t\t\tconverter = HTML;\n\t\t}\n\t\tslash = slash || isLinkExpr && !hasElse;\n\n\t\tvar pathBindings = (bind || isLinkExpr) && [[]],\n\t\t\tprops = \"\",\n\t\t\targs = \"\",\n\t\t\tctxProps = \"\",\n\t\t\tparamsArgs = \"\",\n\t\t\tparamsProps = \"\",\n\t\t\tparamsCtxProps = \"\",\n\t\t\tonError = \"\",\n\t\t\tuseTrigger = \"\",\n\t\t\t// Block tag if not self-closing and not {{:}} or {{>}} (special case) and not a data-link expression\n\t\t\tblock = !slash && !colon;\n\n\t\t//==== nested helper function ====\n\t\ttagName = tagName || (params = params || \"#data\", colon); // {{:}} is equivalent to {{:#data}}\n\t\tpushprecedingContent(index);\n\t\tloc = index + all.length; // location marker - parsed up to here\n\t\tif (codeTag) {\n\t\t\tif (allowCode) {\n\t\t\t\tcontent.push([\"*\", \"\\n\" + params.replace(/^:/, \"ret+= \").replace(rUnescapeQuotes, \"$1\") + \";\\n\"]);\n\t\t\t}\n\t\t} else if (tagName) {\n\t\t\tif (tagName === \"else\") {\n\t\t\t\tif (rTestElseIf.test(params)) {\n\t\t\t\t\tsyntaxError('for \"{{else if expr}}\" use \"{{else expr}}\"');\n\t\t\t\t}\n\t\t\t\tpathBindings = current[7] && [[]];\n\t\t\t\tcurrent[8] = markup.substring(current[8], index); // contentMarkup for block tag\n\t\t\t\tcurrent = stack.pop();\n\t\t\t\tcontent = current[2];\n\t\t\t\tblock = true;\n\t\t\t}\n\t\t\tif (params) {\n\t\t\t\t// remove newlines from the params string, to avoid compiled code errors for unterminated strings\n\t\t\t\tparseParams(params.replace(rNewLine, \" \"), pathBindings, tmpl)\n\t\t\t\t\t.replace(rBuildHash, function(all, onerror, isCtx, key, keyToken, keyValue, arg, param) {\n\t\t\t\t\t\tkey = \"'\" + keyToken + \"':\";\n\t\t\t\t\t\tif (arg) {\n\t\t\t\t\t\t\targs += keyValue + \",\";\n\t\t\t\t\t\t\tparamsArgs += \"'\" + param + \"',\";\n\t\t\t\t\t\t} else if (isCtx) {\n\t\t\t\t\t\t\tctxProps += key + 'j._cp(' + keyValue + ',\"' + param + '\",view),';\n\t\t\t\t\t\t\t// Compiled code for evaluating tagCtx on a tag will have: ctx:{'foo':j._cp(compiledExpr, \"expr\", view)}\n\t\t\t\t\t\t\tparamsCtxProps += key + \"'\" + param + \"',\";\n\t\t\t\t\t\t} else if (onerror) {\n\t\t\t\t\t\t\tonError += keyValue;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (keyToken === \"trigger\") {\n\t\t\t\t\t\t\t\tuseTrigger += keyValue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprops += key + keyValue + \",\";\n\t\t\t\t\t\t\tparamsProps += key + \"'\" + param + \"',\";\n\t\t\t\t\t\t\thasHandlers = hasHandlers || rHasHandlers.test(keyToken);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t}).slice(0, -1);\n\t\t\t}\n\n\t\t\tif (pathBindings && pathBindings[0]) {\n\t\t\t\tpathBindings.pop(); // Remove the bindings that was prepared for next arg. (There is always an extra one ready).\n\t\t\t}\n\n\t\t\tnewNode = [\n\t\t\t\t\ttagName,\n\t\t\t\t\tconverter || !!convertBack || hasHandlers || \"\",\n\t\t\t\t\tblock && [],\n\t\t\t\t\tparsedParam(paramsArgs || (tagName === \":\" ? \"'#data',\" : \"\"), paramsProps, paramsCtxProps), // {{:}} equivalent to {{:#data}}\n\t\t\t\t\tparsedParam(args || (tagName === \":\" ? \"data,\" : \"\"), props, ctxProps),\n\t\t\t\t\tonError,\n\t\t\t\t\tuseTrigger,\n\t\t\t\t\tpathBindings || 0\n\t\t\t\t];\n\t\t\tcontent.push(newNode);\n\t\t\tif (block) {\n\t\t\t\tstack.push(current);\n\t\t\t\tcurrent = newNode;\n\t\t\t\tcurrent[8] = loc; // Store current location of open tag, to be able to add contentMarkup when we reach closing tag\n\t\t\t}\n\t\t} else if (closeBlock) {\n\t\t\tblockTagCheck(closeBlock !== current[0] && current[0] !== \"else\" && closeBlock, current[0]);\n\t\t\tcurrent[8] = markup.substring(current[8], index); // contentMarkup for block tag\n\t\t\tcurrent = stack.pop();\n\t\t}\n\t\tblockTagCheck(!current && closeBlock);\n\t\tcontent = current[2];\n\t}\n\t//==== /end of nested functions ====\n\n\tvar i, result, newNode, hasHandlers, bindings,\n\t\tallowCode = $subSettings.allowCode || tmpl && tmpl.allowCode\n\t\t\t|| $viewsSettings.allowCode === true, // include direct setting of settings.allowCode true for backward compat only\n\t\tastTop = [],\n\t\tloc = 0,\n\t\tstack = [],\n\t\tcontent = astTop,\n\t\tcurrent = [,,astTop];\n\n\tif (allowCode && tmpl._is) {\n\t\ttmpl.allowCode = allowCode;\n\t}\n\n//TODO\tresult = tmplFnsCache[markup]; // Only cache if template is not named and markup length < ...,\n//and there are no bindings or subtemplates?? Consider standard optimization for data-link=\"a.b.c\"\n//\t\tif (result) {\n//\t\t\ttmpl.fn = result;\n//\t\t} else {\n\n//\t\tresult = markup;\n\tif (isLinkExpr) {\n\t\tif (convertBack !== undefined) {\n\t\t\tmarkup = markup.slice(0, -convertBack.length - 2) + delimCloseChar0;\n\t\t}\n\t\tmarkup = delimOpenChar0 + markup + delimCloseChar1;\n\t}\n\n\tblockTagCheck(stack[0] && stack[0][2].pop()[0]);\n\t// Build the AST (abstract syntax tree) under astTop\n\tmarkup.replace(rTag, parseTag);\n\n\tpushprecedingContent(markup.length);\n\n\tif (loc = astTop[astTop.length - 1]) {\n\t\tblockTagCheck(\"\" + loc !== loc && (+loc[8] === loc[8]) && loc[0]);\n\t}\n//\t\t\tresult = tmplFnsCache[markup] = buildCode(astTop, tmpl);\n//\t\t}\n\n\tif (isLinkExpr) {\n\t\tresult = buildCode(astTop, markup, isLinkExpr);\n\t\tbindings = [];\n\t\ti = astTop.length;\n\t\twhile (i--) {\n\t\t\tbindings.unshift(astTop[i][7]);  // With data-link expressions, pathBindings array for tagCtx[i] is astTop[i][7]\n\t\t}\n\t\tsetPaths(result, bindings);\n\t} else {\n\t\tresult = buildCode(astTop, tmpl);\n\t}\n\treturn result;\n}\n\nfunction setPaths(fn, pathsArr) {\n\tvar key, paths,\n\t\ti = 0,\n\t\tl = pathsArr.length;\n\tfn.deps = [];\n\tfor (; i < l; i++) {\n\t\tpaths = pathsArr[i];\n\t\tfor (key in paths) {\n\t\t\tif (key !== \"_jsvto\" && paths.hasOwnProperty(key) && paths[key].length) {\n\t\t\t\tfn.deps = fn.deps.concat(paths[key]); // deps is the concatenation of the paths arrays for the different bindings\n\t\t\t}\n\t\t}\n\t}\n\tfn.paths = paths; // The array of paths arrays for the different bindings\n}\n\nfunction parsedParam(args, props, ctx) {\n\treturn [args.slice(0, -1), props.slice(0, -1), ctx.slice(0, -1)];\n}\n\nfunction paramStructure(parts, type) {\n\treturn '\\n\\t'\n\t\t+ (type\n\t\t\t? type + ':{'\n\t\t\t: '')\n\t\t+ 'args:[' + parts[0] + ']'\n\t\t+ (parts[1] || !type\n\t\t\t? ',\\n\\tprops:{' + parts[1] + '}'\n\t\t\t: \"\")\n\t\t+ (parts[2] ? ',\\n\\tctx:{' + parts[2] + '}' : \"\");\n}\n\nfunction parseParams(params, pathBindings, tmpl) {\n\n\tfunction parseTokens(all, lftPrn0, lftPrn, bound, path, operator, err, eq, path2, prn, comma, lftPrn2, apos, quot, rtPrn, rtPrnDot, prn2, space, index, full) {\n\t// /(\\()(?=\\s*\\()|(?:([([])\\s*)?(?:(\\^?)(!*?[#~]?[\\w$.^]+)?\\s*((\\+\\+|--)|\\+|-|&&|\\|\\||===|!==|==|!=|<=|>=|[<>%*:?\\/]|(=))\\s*|(!*?[#~]?[\\w$.^]+)([([])?)|(,\\s*)|(\\(?)\\\\?(?:(')|(\"))|(?:\\s*(([)\\]])(?=\\s*[.^]|\\s*$|[^([])|[)\\]])([([]?))|(\\s+)/g,\n\t//   lftPrn0        lftPrn        bound            path    operator err                                                eq             path2       prn    comma   lftPrn2   apos quot      rtPrn rtPrnDot                        prn2  space\n\t\t// (left paren? followed by (path? followed by operator) or (path followed by paren?)) or comma or apos or quot or right paren or space\n\t\tfunction parsePath(allPath, not, object, helper, view, viewProperty, pathTokens, leafToken) {\n\t\t\t//rPath = /^(!*?)(?:null|true|false|\\d[\\d.]*|([\\w$]+|\\.|~([\\w$]+)|#(view|([\\w$]+))?)([\\w$.^]*?)(?:[.[^]([\\w$]+)\\]?)?)$/g,\n\t\t\t//          not                               object     helper    view  viewProperty pathTokens      leafToken\n\t\t\tvar subPath = object === \".\";\n\t\t\tif (object) {\n\t\t\t\tpath = path.slice(not.length);\n\t\t\t\tif (/^\\.?constructor$/.test(leafToken||path)) {\n\t\t\t\t\tsyntaxError(allPath);\n\t\t\t\t}\n\t\t\t\tif (!subPath) {\n\t\t\t\t\tallPath = (helper\n\t\t\t\t\t\t\t? 'view.hlp(\"' + helper + '\")'\n\t\t\t\t\t\t\t: view\n\t\t\t\t\t\t\t\t? \"view\"\n\t\t\t\t\t\t\t\t: \"data\")\n\t\t\t\t\t\t+ (leafToken\n\t\t\t\t\t\t\t? (viewProperty\n\t\t\t\t\t\t\t\t? \".\" + viewProperty\n\t\t\t\t\t\t\t\t: helper\n\t\t\t\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t\t\t\t: (view ? \"\" : \".\" + object)\n\t\t\t\t\t\t\t\t) + (pathTokens || \"\")\n\t\t\t\t\t\t\t: (leafToken = helper ? \"\" : view ? viewProperty || \"\" : object, \"\"));\n\n\t\t\t\t\tallPath = allPath + (leafToken ? \".\" + leafToken : \"\");\n\n\t\t\t\t\tallPath = not + (allPath.slice(0, 9) === \"view.data\"\n\t\t\t\t\t\t? allPath.slice(5) // convert #view.data... to data...\n\t\t\t\t\t\t: allPath);\n\t\t\t\t}\n\t\t\t\tif (bindings) {\n\t\t\t\t\tbinds = named === \"linkTo\" ? (bindto = pathBindings._jsvto = pathBindings._jsvto || []) : bndCtx.bd;\n\t\t\t\t\tif (theOb = subPath && binds[binds.length-1]) {\n\t\t\t\t\t\tif (theOb._jsv) {\n\t\t\t\t\t\t\twhile (theOb.sb) {\n\t\t\t\t\t\t\t\ttheOb = theOb.sb;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (theOb.bnd) {\n\t\t\t\t\t\t\t\tpath = \"^\" + path.slice(1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttheOb.sb = path;\n\t\t\t\t\t\t\ttheOb.bnd = theOb.bnd || path.charAt(0) === \"^\";\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbinds.push(path);\n\t\t\t\t\t}\n\t\t\t\t\tpathStart[parenDepth] = index + (subPath ? 1 : 0);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn allPath;\n\t\t}\n\n\t\t//bound = bindings && bound;\n\t\tif (bound && !eq) {\n\t\t\tpath = bound + path; // e.g. some.fn(...)^some.path - so here path is \"^some.path\"\n\t\t}\n\t\toperator = operator || \"\";\n\t\tlftPrn = lftPrn || lftPrn0 || lftPrn2;\n\t\tpath = path || path2;\n\t\t// Could do this - but not worth perf cost?? :-\n\t\t// if (!path.lastIndexOf(\"#data.\", 0)) { path = path.slice(6); } // If path starts with \"#data.\", remove that.\n\t\tprn = prn || prn2 || \"\";\n\n\t\tvar expr, exprFn, binds, theOb, newOb,\n\t\t\trtSq = \")\";\n\n\t\tif (prn === \"[\") {\n\t\t\tprn  =\"[j._sq(\";\n\t\t\trtSq = \")]\";\n\t\t}\n\n\t\tif (err && !aposed && !quoted) {\n\t\t\tsyntaxError(params);\n\t\t} else {\n\t\t\tif (bindings && rtPrnDot && !aposed && !quoted) {\n\t\t\t\t// This is a binding to a path in which an object is returned by a helper/data function/expression, e.g. foo()^x.y or (a?b:c)^x.y\n\t\t\t\t// We create a compiled function to get the object instance (which will be called when the dependent data of the subexpression changes, to return the new object, and trigger re-binding of the subsequent path)\n\t\t\t\tif (!named || boundName || bindto) {\n\t\t\t\t\texpr = pathStart[parenDepth - 1];\n\t\t\t\t\tif (full.length - 1 > index - (expr || 0)) { // We need to compile a subexpression\n\t\t\t\t\t\texpr = full.slice(expr, index + all.length);\n\t\t\t\t\t\tif (exprFn !== true) { // If not reentrant call during compilation\n\t\t\t\t\t\t\tbinds = bindto || bndStack[parenDepth-1].bd;\n\t\t\t\t\t\t\t// Insert exprOb object, to be used during binding to return the computed object\n\t\t\t\t\t\t\ttheOb = binds[binds.length-1];\n\t\t\t\t\t\t\tif (theOb && theOb.prm) {\n\t\t\t\t\t\t\t\twhile (theOb.sb && theOb.sb.prm) {\n\t\t\t\t\t\t\t\t\ttheOb = theOb.sb;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tnewOb = theOb.sb = {path: theOb.sb, bnd: theOb.bnd};\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbinds.push(newOb = {path: binds.pop()}); // Insert exprOb object, to be used during binding to return the computed object\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t // (e.g. \"some.object()\" in \"some.object().a.b\" - to be used as context for binding the following tokens \"a.b\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\trtPrnDot = delimOpenChar1 + \":\" + expr // The parameter or function subexpression\n\t\t\t\t\t\t\t+ \" onerror=''\" // set onerror='' in order to wrap generated code with a try catch - returning '' as object instance if there is an error/missing parent\n\t\t\t\t\t\t\t+ delimCloseChar0;\n\t\t\t\t\t\texprFn = tmplLinks[rtPrnDot];\n\t\t\t\t\t\tif (!exprFn) {\n\t\t\t\t\t\t\ttmplLinks[rtPrnDot] = true; // Flag that this exprFn (for rtPrnDot) is being compiled\n\t\t\t\t\t\t\ttmplLinks[rtPrnDot] = exprFn = tmplFn(rtPrnDot, tmpl, true); // Compile the expression (or use cached copy already in tmpl.links)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (exprFn !== true && newOb) {\n\t\t\t\t\t\t\t// If not reentrant call during compilation\n\t\t\t\t\t\t\tnewOb._jsv = exprFn;\n\t\t\t\t\t\t\tnewOb.prm = bndCtx.bd;\n\t\t\t\t\t\t\tnewOb.bnd = newOb.bnd || newOb.path && newOb.path.indexOf(\"^\") >= 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (aposed\n\t\t\t\t// within single-quoted string\n\t\t\t\t? (aposed = !apos, (aposed ? all : lftPrn2 + '\"'))\n\t\t\t\t: quoted\n\t\t\t\t// within double-quoted string\n\t\t\t\t\t? (quoted = !quot, (quoted ? all : lftPrn2 + '\"'))\n\t\t\t\t\t:\n\t\t\t\t(\n\t\t\t\t\t(lftPrn\n\t\t\t\t\t\t? (pathStart[parenDepth] = index++, bndCtx = bndStack[++parenDepth] = {bd: []}, lftPrn)\n\t\t\t\t\t\t: \"\")\n\t\t\t\t\t+ (space\n\t\t\t\t\t\t? (parenDepth\n\t\t\t\t\t\t\t? \"\"\n\t\t\t\t// New arg or prop - so insert backspace \\b (\\x08) as separator for named params, used subsequently by rBuildHash, and prepare new bindings array\n\t\t\t\t\t\t\t: (paramIndex = full.slice(paramIndex, index), named\n\t\t\t\t\t\t\t\t? (named = boundName = bindto = false, \"\\b\")\n\t\t\t\t\t\t\t\t: \"\\b,\") + paramIndex + (paramIndex = index + all.length, bindings && pathBindings.push(bndCtx.bd = []), \"\\b\")\n\t\t\t\t\t\t)\n\t\t\t\t\t\t: eq\n\t\t\t\t// named param. Remove bindings for arg and create instead bindings array for prop\n\t\t\t\t\t\t\t? (parenDepth && syntaxError(params), bindings && pathBindings.pop(), named = path, boundName = bound, paramIndex = index + all.length, bound && (bindings = bndCtx.bd = pathBindings[named] = []), path + ':')\n\t\t\t\t\t\t\t: path\n\t\t\t\t// path\n\t\t\t\t\t\t\t\t? (path.split(\"^\").join(\".\").replace(rPath, parsePath)\n\t\t\t\t\t\t\t\t\t+ (prn\n\t\t\t\t// some.fncall(\n\t\t\t\t\t\t\t\t\t\t? (bndCtx = bndStack[++parenDepth] = {bd: []}, fnCall[parenDepth] = rtSq, prn)\n\t\t\t\t\t\t\t\t\t\t: operator)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: operator\n\t\t\t\t// operator\n\t\t\t\t\t\t\t\t\t? operator\n\t\t\t\t\t\t\t\t\t: rtPrn\n\t\t\t\t// function\n\t\t\t\t\t\t\t\t\t\t? ((rtPrn = fnCall[parenDepth] || rtPrn, fnCall[parenDepth] = false, bndCtx = bndStack[--parenDepth], rtPrn)\n\t\t\t\t\t\t\t\t\t\t\t+ (prn // rtPrn and prn, e.g )( in (a)() or a()(), or )[ in a()[]\n\t\t\t\t\t\t\t\t\t\t\t\t? (bndCtx = bndStack[++parenDepth], fnCall[parenDepth] = rtSq, prn)\n\t\t\t\t\t\t\t\t\t\t\t\t: \"\")\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t: comma\n\t\t\t\t\t\t\t\t\t\t\t? (fnCall[parenDepth] || syntaxError(params), \",\") // We don't allow top-level literal arrays or objects\n\t\t\t\t\t\t\t\t\t\t\t: lftPrn0\n\t\t\t\t\t\t\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t\t\t\t\t\t\t: (aposed = apos, quoted = quot, '\"')\n\t\t\t\t))\n\t\t\t);\n\t\t}\n\t}\n\n\tvar named, bindto, boundName,\n\t\tquoted, // boolean for string content in double quotes\n\t\taposed, // or in single quotes\n\t\tbindings = pathBindings && pathBindings[0], // bindings array for the first arg\n\t\tbndCtx = {bd: bindings},\n\t\tbndStack = {0: bndCtx},\n\t\tparamIndex = 0, // list,\n\t\ttmplLinks = (tmpl ? tmpl.links : bindings && (bindings.links = bindings.links || {})) || topView.tmpl.links,\n\t\t// The following are used for tracking path parsing including nested paths, such as \"a.b(c^d + (e))^f\", and chained computed paths such as\n\t\t// \"a.b().c^d().e.f().g\" - which has four chained paths, \"a.b()\", \"^c.d()\", \".e.f()\" and \".g\"\n\t\tparenDepth = 0,\n\t\tfnCall = {}, // We are in a function call\n\t\tpathStart = {}, // tracks the start of the current path such as c^d() in the above example\n\t\tresult = (params + (tmpl ? \" \" : \"\")).replace(rParams, parseTokens);\n\n\treturn !parenDepth && result || syntaxError(params); // Syntax error if unbalanced parens in params expression\n}\n\nfunction buildCode(ast, tmpl, isLinkExpr) {\n\t// Build the template function code from the AST nodes, and set as property on the passed-in template object\n\t// Used for compiling templates, and also by JsViews to build functions for data link expressions\n\tvar i, node, tagName, converter, tagCtx, hasTag, hasEncoder, getsVal, hasCnvt, useCnvt, tmplBindings, pathBindings, params, boundOnErrStart, boundOnErrEnd,\n\t\ttagRender, nestedTmpls, tmplName, nestedTmpl, tagAndElses, content, markup, nextIsElse, oldCode, isElse, isGetVal, tagCtxFn, onError, tagStart, trigger,\n\t\ttmplBindingKey = 0,\n\t\tuseViews = $subSettingsAdvanced.useViews || tmpl.useViews || tmpl.tags || tmpl.templates || tmpl.helpers || tmpl.converters,\n\t\tcode = \"\",\n\t\ttmplOptions = {},\n\t\tl = ast.length;\n\n\tif (\"\" + tmpl === tmpl) {\n\t\ttmplName = isLinkExpr ? 'data-link=\"' + tmpl.replace(rNewLine, \" \").slice(1, -1) + '\"' : tmpl;\n\t\ttmpl = 0;\n\t} else {\n\t\ttmplName = tmpl.tmplName || \"unnamed\";\n\t\tif (tmpl.allowCode) {\n\t\t\ttmplOptions.allowCode = true;\n\t\t}\n\t\tif (tmpl.debug) {\n\t\t\ttmplOptions.debug = true;\n\t\t}\n\t\ttmplBindings = tmpl.bnds;\n\t\tnestedTmpls = tmpl.tmpls;\n\t}\n\tfor (i = 0; i < l; i++) {\n\t\t// AST nodes: [0: tagName, 1: converter, 2: content, 3: params, 4: code, 5: onError, 6: trigger, 7:pathBindings, 8: contentMarkup]\n\t\tnode = ast[i];\n\n\t\t// Add newline for each callout to t() c() etc. and each markup string\n\t\tif (\"\" + node === node) {\n\t\t\t// a markup string to be inserted\n\t\t\tcode += '\\n+\"' + node + '\"';\n\t\t} else {\n\t\t\t// a compiled tag expression to be inserted\n\t\t\ttagName = node[0];\n\t\t\tif (tagName === \"*\") {\n\t\t\t\t// Code tag: {{* }}\n\t\t\t\tcode += \";\\n\" + node[1] + \"\\nret=ret\";\n\t\t\t} else {\n\t\t\t\tconverter = node[1];\n\t\t\t\tcontent = !isLinkExpr && node[2];\n\t\t\t\ttagCtx = paramStructure(node[3], 'params') + '},' + paramStructure(params = node[4]);\n\t\t\t\t// NODE.JS-SPECIFIC CODE:\n\t\t\t\tvar prm = params[1];\n\t\t\t\tif (prm && /^'tmpl':\"\\.\\/[^\\:*?\"<>]*\"$/.test(prm)) {\n\t\t\t\t\ttmpl.refs = tmpl.refs || {}; // Used by browserify to chain require() dependencies for tmpl=\"./some.file.html\"\n\t\t\t\t\ttmpl.refs[prm.slice(8,-1)] = 1;\n\t\t\t\t} // END NODE.JS-SPECIFIC CODE\n\t\t\t\tonError = node[5];\n\t\t\t\ttrigger = node[6];\n\t\t\t\tmarkup = node[8] && node[8].replace(rUnescapeQuotes, \"$1\");\n\t\t\t\tif (isElse = tagName === \"else\") {\n\t\t\t\t\tif (pathBindings) {\n\t\t\t\t\t\tpathBindings.push(node[7]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttmplBindingKey = 0;\n\t\t\t\t\tif (tmplBindings && (pathBindings = node[7])) { // Array of paths, or false if not data-bound\n\t\t\t\t\t\tpathBindings = [pathBindings];\n\t\t\t\t\t\ttmplBindingKey = tmplBindings.push(1); // Add placeholder in tmplBindings for compiled function\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tuseViews = useViews || params[1] || params[2] || pathBindings || /view.(?!index)/.test(params[0]);\n\t\t\t\t// useViews is for perf optimization. For render() we only use views if necessary - for the more advanced scenarios.\n\t\t\t\t// We use views if there are props, contextual properties or args with #... (other than #index) - but you can force\n\t\t\t\t// using the full view infrastructure, (and pay a perf price) by opting in: Set useViews: true on the template, manually...\n\t\t\t\tif (isGetVal = tagName === \":\") {\n\t\t\t\t\tif (converter) {\n\t\t\t\t\t\ttagName = converter === HTML ? \">\" : converter + tagName;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (content) { // TODO optimize - if content.length === 0 or if there is a tmpl=\"...\" specified - set content to null / don't run this compilation code - since content won't get used!!\n\t\t\t\t\t\t// Create template object for nested template\n\t\t\t\t\t\tnestedTmpl = tmplObject(markup, tmplOptions);\n\t\t\t\t\t\tnestedTmpl.tmplName = tmplName + \"/\" + tagName;\n\t\t\t\t\t\t// Compile to AST and then to compiled function\n\t\t\t\t\t\tnestedTmpl.useViews = nestedTmpl.useViews || useViews;\n\t\t\t\t\t\tbuildCode(content, nestedTmpl);\n\t\t\t\t\t\tuseViews = nestedTmpl.useViews;\n\t\t\t\t\t\tnestedTmpls.push(nestedTmpl);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!isElse) {\n\t\t\t\t\t\t// This is not an else tag.\n\t\t\t\t\t\ttagAndElses = tagName;\n\t\t\t\t\t\tuseViews = useViews || tagName && (!$tags[tagName] || !$tags[tagName].flow);\n\t\t\t\t\t\t// Switch to a new code string for this bound tag (and its elses, if it has any) - for returning the tagCtxs array\n\t\t\t\t\t\toldCode = code;\n\t\t\t\t\t\tcode = \"\";\n\t\t\t\t\t}\n\t\t\t\t\tnextIsElse = ast[i + 1];\n\t\t\t\t\tnextIsElse = nextIsElse && nextIsElse[0] === \"else\";\n\t\t\t\t}\n\t\t\t\ttagStart = onError ? \";\\ntry{\\nret+=\" : \"\\n+\";\n\t\t\t\tboundOnErrStart = \"\";\n\t\t\t\tboundOnErrEnd = \"\";\n\n\t\t\t\tif (isGetVal && (pathBindings || trigger || converter && converter !== HTML)) {\n\t\t\t\t\t// For convertVal we need a compiled function to return the new tagCtx(s)\n\t\t\t\t\ttagCtxFn = new Function(\"data,view,j,u\", \" // \" + tmplName + \" \" + tmplBindingKey + \" \" + tagName\n\t\t\t\t\t\t\t\t\t\t+ \"\\nreturn {\" + tagCtx + \"};\");\n\t\t\t\t\ttagCtxFn._er = onError;\n\t\t\t\t\ttagCtxFn._tag = tagName;\n\n\t\t\t\t\tif (isLinkExpr) {\n\t\t\t\t\t\treturn tagCtxFn;\n\t\t\t\t\t}\n\n\t\t\t\t\tsetPaths(tagCtxFn, pathBindings);\n\t\t\t\t\ttagRender = 'c(\"' + converter + '\",view,';\n\t\t\t\t\tuseCnvt = true;\n\t\t\t\t\tboundOnErrStart = tagRender + tmplBindingKey + \",\";\n\t\t\t\t\tboundOnErrEnd = \")\";\n\t\t\t\t}\n\t\t\t\tcode += (isGetVal\n\t\t\t\t\t? (isLinkExpr ? (onError ? \"try{\\n\" : \"\") + \"return \" : tagStart) + (useCnvt // Call _cnvt if there is a converter: {{cnvt: ... }} or {^{cnvt: ... }}\n\t\t\t\t\t\t? (useCnvt = undefined, useViews = hasCnvt = true, tagRender + (pathBindings\n\t\t\t\t\t\t\t? ((tmplBindings[tmplBindingKey - 1] = tagCtxFn), tmplBindingKey) // Store the compiled tagCtxFn in tmpl.bnds, and pass the key to convertVal()\n\t\t\t\t\t\t\t: \"{\" + tagCtx + \"}\") + \")\")\n\t\t\t\t\t\t: tagName === \">\"\n\t\t\t\t\t\t\t? (hasEncoder = true, \"h(\" + params[0] + \")\")\n\t\t\t\t\t\t\t: (getsVal = true, \"((v=\" + params[0] + ')!=null?v:' + (isLinkExpr ? 'null)' : '\"\")'))\n\t\t\t\t\t\t\t// Non strict equality so data-link=\"title{:expr}\" with expr=null/undefined removes title attribute\n\t\t\t\t\t)\n\t\t\t\t\t: (hasTag = true, \"\\n{view:view,tmpl:\" // Add this tagCtx to the compiled code for the tagCtxs to be passed to renderTag()\n\t\t\t\t\t\t+ (content ? nestedTmpls.length : \"0\") + \",\" // For block tags, pass in the key (nestedTmpls.length) to the nested content template\n\t\t\t\t\t\t+ tagCtx + \"},\"));\n\n\t\t\t\tif (tagAndElses && !nextIsElse) {\n\t\t\t\t\t// This is a data-link expression or an inline tag without any elses, or the last {{else}} of an inline tag\n\t\t\t\t\t// We complete the code for returning the tagCtxs array\n\t\t\t\t\tcode = \"[\" + code.slice(0, -1) + \"]\";\n\t\t\t\t\ttagRender = 't(\"' + tagAndElses + '\",view,this,';\n\t\t\t\t\tif (isLinkExpr || pathBindings) {\n\t\t\t\t\t\t// This is a bound tag (data-link expression or inline bound tag {^{tag ...}}) so we store a compiled tagCtxs function in tmp.bnds\n\t\t\t\t\t\tcode = new Function(\"data,view,j,u\", \" // \" + tmplName + \" \" + tmplBindingKey + \" \" + tagAndElses + \"\\nreturn \" + code + \";\");\n\t\t\t\t\t\tcode._er = onError;\n\t\t\t\t\t\tcode._tag = tagAndElses;\n\t\t\t\t\t\tif (pathBindings) {\n\t\t\t\t\t\t\tsetPaths(tmplBindings[tmplBindingKey - 1] = code, pathBindings);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (isLinkExpr) {\n\t\t\t\t\t\t\treturn code; // For a data-link expression we return the compiled tagCtxs function\n\t\t\t\t\t\t}\n\t\t\t\t\t\tboundOnErrStart = tagRender + tmplBindingKey + \",undefined,\";\n\t\t\t\t\t\tboundOnErrEnd = \")\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// This is the last {{else}} for an inline tag.\n\t\t\t\t\t// For a bound tag, pass the tagCtxs fn lookup key to renderTag.\n\t\t\t\t\t// For an unbound tag, include the code directly for evaluating tagCtxs array\n\t\t\t\t\tcode = oldCode + tagStart + tagRender + (tmplBindingKey || code) + \")\";\n\t\t\t\t\tpathBindings = 0;\n\t\t\t\t\ttagAndElses = 0;\n\t\t\t\t}\n\t\t\t\tif (onError) {\n\t\t\t\t\tuseViews = true;\n\t\t\t\t\tcode += ';\\n}catch(e){ret' + (isLinkExpr ? \"urn \" : \"+=\") + boundOnErrStart + 'j._err(e,view,' + onError + ')' + boundOnErrEnd + ';}' + (isLinkExpr ? \"\" : 'ret=ret');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Include only the var references that are needed in the code\n\tcode = \"// \" + tmplName\n\n\t\t+ \"\\nvar v\"\n\t\t+ (hasTag ? \",t=j._tag\" : \"\")                // has tag\n\t\t+ (hasCnvt ? \",c=j._cnvt\" : \"\")              // converter\n\t\t+ (hasEncoder ? \",h=j._html\" : \"\")           // html converter\n\t\t+ (isLinkExpr ? \";\\n\" : ',ret=\"\"\\n')\n\t\t+ (tmplOptions.debug ? \"debugger;\" : \"\")\n\t\t+ code\n\t\t+ (isLinkExpr ? \"\\n\" : \";\\nreturn ret;\");\n\n\tif ($subSettings.debugMode !== false) {\n\t\tcode = \"try {\\n\" + code + \"\\n}catch(e){\\nreturn j._err(e, view);\\n}\";\n\t}\n\n\ttry {\n\t\tcode = new Function(\"data,view,j,u\", code);\n\t} catch (e) {\n\t\tsyntaxError(\"Compiled template code:\\n\\n\" + code + '\\n: \"' + e.message + '\"');\n\t}\n\tif (tmpl) {\n\t\ttmpl.fn = code;\n\t\ttmpl.useViews = !!useViews;\n\t}\n\treturn code;\n}\n\n//==========\n// Utilities\n//==========\n\n// Merge objects, in particular contexts which inherit from parent contexts\nfunction extendCtx(context, parentContext) {\n\t// Return copy of parentContext, unless context is defined and is different, in which case return a new merged context\n\t// If neither context nor parentContext are defined, return undefined\n\treturn context && context !== parentContext\n\t\t? (parentContext\n\t\t\t? $extend($extend({}, parentContext), context)\n\t\t\t: context)\n\t\t: parentContext && $extend({}, parentContext);\n}\n\n// Get character entity for HTML and Attribute encoding\nfunction getCharEntity(ch) {\n\treturn charEntities[ch] || (charEntities[ch] = \"&#\" + ch.charCodeAt(0) + \";\");\n}\n\nfunction getTargetProps(source) {\n\t// this pointer is theMap - which has tagCtx.props too\n\t// arguments: tagCtx.args.\n\tvar key, prop,\n\t\tprops = [];\n\n\tif (typeof source === OBJECT) {\n\t\tfor (key in source) {\n\t\t\tprop = source[key];\n\t\t\tif (source.hasOwnProperty(key) && !$isFunction(prop)) {\n\t\t\t\tprops.push({key: key, prop: prop});\n\t\t\t}\n\t\t}\n\t}\n\treturn props;\n}\n\nfunction $fnRender(data, context, noIteration) {\n\tvar tmplElem = this.jquery && (this[0] || error('Unknown template: \"' + this.selector + '\"')),\n\t\ttmpl = tmplElem.getAttribute(tmplAttr);\n\n\treturn renderContent.call(tmpl ? $.data(tmplElem)[jsvTmpl] : $templates(tmplElem), data, context, noIteration);\n}\n\n//========================== Register converters ==========================\n\nfunction htmlEncode(text) {\n\t// HTML encode: Replace < > & ' and \" by corresponding entities.\n\treturn text != undefined ? rIsHtml.test(text) && (\"\" + text).replace(rHtmlEncode, getCharEntity) || text : \"\";\n}\n\n//========================== Initialize ==========================\n\n$sub = $views.sub;\n$viewsSettings = $views.settings;\n\n{\n\t// JsRender not already loaded, or loaded without jQuery, and we are now moving from jsrender namespace to jQuery namepace\n\tfor (jsvStoreName in jsvStores) {\n\t\tregisterStore(jsvStoreName, jsvStores[jsvStoreName]);\n\t}\n\n\t$converters = $views.converters;\n\t$helpers = $views.helpers;\n\t$tags = $views.tags;\n\n\t$sub._tg.prototype = {\n\t\tbaseApply: baseApply,\n\t\tcvtArgs: convertArgs\n\t};\n\n\ttopView = $sub.topView = new View();\n\n\t{\n\t\t$ = {};\n\n\t\t$.isFunction = function(ob) {\n\t\t\treturn typeof ob === \"function\";\n\t\t};\n\n\t\t$.isArray = Array.isArray || function(obj) {\n\t\t\treturn ({}.toString).call(obj) === \"[object Array]\";\n\t\t};\n\n\t\t$.jsrender = versionNumber;\n\t}\n\t$subSettings = $sub.settings;\n\t$subSettings.allowCode = false;\n\t$isFunction = $.isFunction;\n\t$.render = $render;\n\t$.views = $views;\n\t$.templates = $templates = $views.templates;\n\n\t$.compile = function(markup, options) { // For integration with Hapi (and possibly other platforms) provide standard API/signature for template compilation\n\t\toptions = options || {};\n\t\toptions.markup = markup;\n\t\treturn $templates(options);\n\t};\n\n\tfor (setting in $subSettings) {\n\t\taddSetting(setting);\n\t}\n\n\t($viewsSettings.debugMode = function(debugMode) {\n\t\treturn debugMode === undefined\n\t\t\t? $subSettings.debugMode\n\t\t\t: (\n\t\t\t\t$subSettings.debugMode = debugMode,\n\t\t\t\t$subSettings.onError = debugMode + \"\" === debugMode\n\t\t\t\t\t? new Function(\"\", \"return '\" + debugMode + \"';\" )\n\t\t\t\t\t: $isFunction(debugMode)\n\t\t\t\t\t\t? debugMode\n\t\t\t\t\t\t: undefined,\n\t\t\t\t$viewsSettings);\n\t})(false); // jshint ignore:line\n\n\t$subSettingsAdvanced = $subSettings.advanced = {\n\t\tuseViews: false,\n\t\t_jsv: false // For global access to JsViews store\n\t};\n\n\t//========================== Register tags ==========================\n\n\t$tags({\n\t\t\"if\": {\n\t\t\trender: function(val) {\n\t\t\t\t// This function is called once for {{if}} and once for each {{else}}.\n\t\t\t\t// We will use the tag.rendering object for carrying rendering state across the calls.\n\t\t\t\t// If not done (a previous block has not been rendered), look at expression for this block and render the block if expression is truthy\n\t\t\t\t// Otherwise return \"\"\n\t\t\t\tvar self = this,\n\t\t\t\t\ttagCtx = self.tagCtx,\n\t\t\t\t\tret = (self.rendering.done || !val && (arguments.length || !tagCtx.index))\n\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t: (self.rendering.done = true, self.selected = tagCtx.index,\n\t\t\t\t\t\t\t// Test is satisfied, so render content on current context. We call tagCtx.render() rather than return undefined\n\t\t\t\t\t\t\t// (which would also render the tmpl/content on the current context but would iterate if it is an array)\n\t\t\t\t\t\t\ttagCtx.render(tagCtx.view, true)); // no arg, so renders against parentView.data\n\t\t\t\treturn ret;\n\t\t\t},\n\t\t\tflow: true\n\t\t},\n\t\t\"for\": {\n\t\t\trender: function(val) {\n\t\t\t\t// This function is called once for {{for}} and once for each {{else}}.\n\t\t\t\t// We will use the tag.rendering object for carrying rendering state across the calls.\n\t\t\t\tvar finalElse = !arguments.length,\n\t\t\t\t\tvalue,\n\t\t\t\t\tself = this,\n\t\t\t\t\ttagCtx = self.tagCtx,\n\t\t\t\t\tresult = \"\",\n\t\t\t\t\tdone = 0;\n\n\t\t\t\tif (!self.rendering.done) {\n\t\t\t\t\tvalue = finalElse ? tagCtx.view.data : val; // For the final else, defaults to current data without iteration.\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\tresult += tagCtx.render(value, finalElse); // Iterates except on final else, if data is an array. (Use {{include}} to compose templates without array iteration)\n\t\t\t\t\t\tdone += $isArray(value) ? value.length : 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (self.rendering.done = done) {\n\t\t\t\t\t\tself.selected = tagCtx.index;\n\t\t\t\t\t}\n\t\t\t\t\t// If nothing was rendered we will look at the next {{else}}. Otherwise, we are done.\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\tflow: true\n\t\t},\n\t\tprops: {\n\t\t\tbaseTag: \"for\",\n\t\t\tdataMap: dataMap(getTargetProps),\n\t\t\tflow: true\n\t\t},\n\t\tinclude: {\n\t\t\tflow: true\n\t\t},\n\t\t\"*\": {\n\t\t\t// {{* code... }} - Ignored if template.allowCode and $.views.settings.allowCode are false. Otherwise include code in compiled template\n\t\t\trender: retVal,\n\t\t\tflow: true\n\t\t},\n\t\t\":*\": {\n\t\t\t// {{:* returnedExpression }} - Ignored if template.allowCode and $.views.settings.allowCode are false. Otherwise include code in compiled template\n\t\t\trender: retVal,\n\t\t\tflow: true\n\t\t},\n\t\tdbg: $helpers.dbg = $converters.dbg = dbgBreak // Register {{dbg/}}, {{dbg:...}} and ~dbg() to throw and catch, as breakpoints for debugging.\n\t});\n\n\t$converters({\n\t\thtml: htmlEncode,\n\t\tattr: htmlEncode, // Includes > encoding since rConvertMarkers in JsViews does not skip > characters in attribute strings\n\t\turl: function(text) {\n\t\t\t// URL encoding helper.\n\t\t\treturn text != undefined ? encodeURI(\"\" + text) : text === null ? text : \"\"; // null returns null, e.g. to remove attribute. undefined returns \"\"\n\t\t}\n\t});\n}\n//========================== Define default delimiters ==========================\n$subSettings = $sub.settings;\n$isArray = ($||jsr).isArray;\n$viewsSettings.delimiters(\"{{\", \"}}\", \"^\");\n\n// NODE.JS-SPECIFIC CODE:\nvar nodeFs = require('fs'),\n\tnodePath = require('path'),\n\tnodePathSep = nodePath.sep,\n\trootDirPath = nodePath.resolve(\"./\"),\n\trootDirPathLen = rootDirPath.length + 1;\n\n// Support for rendering templates from file system in Node.js Node, and for Express template engine integration,\n// using app.engine('html', jsrender.__express);\n$.renderFile = $.__express = function(filepath, data, callback) {\n\tfilepath = './' + nodeFs.realpathSync(filepath).slice(rootDirPathLen).split(nodePathSep).join('/'); // Normalize to ./some/file.html\n\tvar html = $templates(filepath).render(data);\n\tif (callback) {\n\t\tcallback(null, html);\n\t}\n\treturn html;\n};\n\n$views.tags(\"clientTemplate\", function(path) { // Custom tag to render a template in a script block, so it can be used as a client template without making an HTTP request\n\treturn '<script id=\"' + path + '\" type=\"text/x-jsrender\">' + $templates(path).markup + '</script>';\n});\n\nmodule.exports = $;\n// END NODE.JS-SPECIFIC CODE\n}(this));\n"]}