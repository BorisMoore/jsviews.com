{"version":3,"sources":["jsviews.js"],"names":["factory","global","eval","$","jQuery","define","amd","exports","module","getDerivedMethod","baseMethod","method","ret","tag","this","prevBase","base","apply","arguments","getMethod","$isFunction","_d","noop","tagHandlersFromProps","tagCtx","prop","props","rHasHandlers","test","retVal","val","dbgBreak","e","baseApply","dbgMode","debugMode","$viewsSettings","_dbgMode","JsViewsError","message","name","link","$extend","target","source","$viewsDelimiters","openChars","closeChars","delimOpenChar0","charAt","delimOpenChar1","delimCloseChar0","delimCloseChar1","linkChar","rTag","$sub","RegExp","rTmplString","getView","inner","type","undefined","views","i","l","found","view","root","_","useKey","get","length","parent","getNestedIndex","index","getIndex","getHelper","helper","wrapped","ctx","linkCtx","res","$helpers","_wrp","convertVal","converter","onError","value","boundTag","tmpl","bnds","args","data","$views","_tg","inline","bnd","unlinked","tagName","cvt","flow","extendCtx","_er","cvtArgs","convert","onRender","convertArgs","getRsc","error","slice","depends","getDeps","getResource","resourceType","itemName","store","renderTag","parentView","tagCtxs","isUpdate","topView","tagDef","template","tags","attr","parentTag","itemRet","tagCtxCtx","content","callInit","mapDef","thisMap","initialTmpl","tagDataMap","parentTmpl","_is","tmpls","render","renderContent","$templates","_ctr","init","dataMap","fn","arrVws","dataBoundOnly","map","parents","parentTags","rendering","src","unmap","tgt","noVws","HTML","$converters","html","View","context","key","contentTmpl","parentView_","self_","self","isArray","id","viewId","linked","indexStr","push","splice","compileChildResources","storeName","resources","resourceName","resource","settings","compile","onStore","jsvStores","compileTag","Tag","baseTag","compiledDef","$tags","prototype","constructor","_parentTmpl","compileTmpl","options","lookupTemplate","currentName","nodeType","elem","document","getElementById","find","innerHTML","getAttribute","tmplAttr","jsvTmpl","tmplName","setAttribute","compiledTmpl","tmplOrMarkup","markup","tmplObject","tmplFn","replace","rEscapeQuotes","$render","Map","getTgt","baseMap","htmlTag","wrapMap","links","rFirstElem","exec","toLowerCase","div","trim","registerStore","storeSettings","theStore","item","thisStore","OBJECT","storeNames","noIteration","isTopRenderCall","prevData","prevIndex","result","isRenderCall","useViews","renderWithViews","$isArray","setItemVar","newCtx","itemVar","newView","childView","itemResult","swapContent","outerOnRender","syntaxError","helpers","it","fallback","Err","isLinkExpr","convertBack","hasElse","pushprecedingContent","shift","loc","substr","rNewLine","blockTagCheck","block","parseTag","all","bind","colon","comment","codeTag","params","slash","closeBlock","pathBindings","ctxProps","paramsArgs","paramsProps","paramsCtxProps","useTrigger","allowCode","rUnescapeQuotes","rTestElseIf","current","substring","stack","pop","parseParams","rBuildHash","onerror","isCtx","keyToken","keyValue","arg","param","hasHandlers","newNode","parsedParam","astTop","buildCode","setPaths","pathsArr","paths","deps","concat","paramStructure","parts","parseTokens","lftPrn0","lftPrn","bound","path","operator","err","eq","path2","prn","comma","lftPrn2","apos","quot","rtPrn","rtPrnDot","prn2","space","full","parsePath","allPath","not","object","viewProperty","pathTokens","leafToken","subPath","bindings","binds","named","bindto","_jsvto","bndCtx","bd","theOb","_jsv","sb","pathStart","parenDepth","expr","exprFn","newOb","aposed","quoted","boundName","bndStack","prm","tmplLinks","indexOf","paramIndex","split","join","rPath","fnCall","rParams","ast","node","hasTag","hasEncoder","getsVal","hasCnvt","useCnvt","tmplBindings","boundOnErrStart","boundOnErrEnd","tagRender","nestedTmpls","nestedTmpl","tagAndElses","nextIsElse","oldCode","isElse","isGetVal","tagCtxFn","tagStart","trigger","tmplBindingKey","templates","converters","code","tmplOptions","debug","Function","_tag","parentContext","getCharEntity","ch","charEntities","charCodeAt","getTargetProps","toJSON","$fnRender","tmplElem","jquery","selector","call","htmlEncode","text","rIsHtml","rHtmlEncode","elemChangeHandler","ev","sourceValue","setter","cancel","fromAttr","cvtBack","cnvtName","$source","binding","oldLinkCtx","onBeforeChange","onAfterChange","to","eventArgs","exprOb","_jsvBnd","rSplitBindings","bindingStore","hlp","onBeforeChangeStr","onAfterChangeStr","defaultAttr","fnSetters","change","oldValue","_val","_ctxCb","chging","$observable","setProperty","propertyChangeHandler","linkFn","noUpdate","forceUpdate","hasError","parentElem","parentNode","onEvent","_toLk","getTargetVal","onUpdate","mergeCtxs","NONE","onBeforeLink","callAfterLink","observeAndBind","_cnvt","TRUE","updateContent","_noUpd","currentValue","css","$target","style","parseInt","CHECKBOX","CHECKED","RADIO","setDefer","_df","deferAttr","prevNode","nextNode","promise","nodesToRemove","useProp","tokens","openIndex","closeIndex","testElem","nodeName","cStyle","renders","targetVal","_elCnt","_prv","_nxt","currentStyle","getComputedStyle","display","_jsvd","displayStyles","createElement","body","appendChild","removeChild","nodes","transferViewTokens","_tgId","disposeTokens","previousSibling","lastChild","remove","lazyLink","empty","children","textContent","innerText","arrayChangeHandler","action","items","addViews","removeViews","refresh","setArrayChangeLink","handler","arrayBinding","bndArr","off","arrayChangeStr","on","linkGetVal","merge","contentEditable","from","renderAndLink","linkToNode","prevView","bindId","elCnt","removeViewBinding","nextSibling","addBindingMarkers","end","bindingKey","viewStore","linkedElem","exprFnDeps","cvtBk","_bndId","_hdl","_depends","_apply","bindTo","onAfterBind","jsvAttrStr","radio","_jsvLkEl","tmplLink","$link","tmplOrLinkTag","activeBody","elementChangeStr","k","vwInfos","placeholderParent","targetEl","topLevelCall","replaceMode","$view","addDataBinding","cleanData","lnk","viewInfos","rOpenViewMarkers","viewLink","outerData","validateOnly","convertMarkers","preceding","selfClose","closeTag","spaceBefore","boundId","spaceAfter","tag1","tag2","closeTag2","spaceAfterClose","selfClose2","endOpenTag","errorMsg","bndId","endOfElCnt","inTag","isVoid","tagStack","validate","voidElems","prevElCnt","elContent","defer","ids","openScript","closeScript","deferStack","unshift","badParent","processViewInfos","targetParent","deferPath","deferChar","bindChar","onAftCr","deep","addedBindEls","_tkns","len","vwInfo","j","open","onArrayChange","removeSubStr","onAfterCreate","bindEls","getViewInfos","level","tagDepth","dataLink","wrap","linkViewsSel","elems","qsa","querySelectorAll","prevNodes","markerNodeInfo","contains","isLink","rViewMarkers","skip","processInfos","$viewsLinkAttr","rOpenTagMarkers","unmarkPrevOrNextNode","resolve","prevIds","linkInfo","token","nextView","depth","fragment","copiedNode","firstTag","wrapper","thisId","onAfterCreateStr","Deferred","noValidate","markPrevOrNextNode","namespaceURI","noDomLevel0","rConvertMarkers","safeFragment","createDocumentFragment","firstChild","insertBefore","setTimeout","linkMarkup","currentView","boundTagId","trimLen","tagExpr","rTagIndex","linkExpressions","bindDataLinkTarget","normalizeLinkTag","rTagDatalink","lastIndex","isLk","noArray","getContextCb","str","SCRIPT","isVal","rBinding","getInfos","close","elPath","infos","rMarkerTokens","removeAttribute","marker","twoway","$linkedElem","radioButtons","linkedTag","oldTrig","newTrig","onAfterLink","targetTag","noVal","setSize","height","width","addClass","_jsvTr","bindElChange","asyncElemChangeHandler","$elem","trig","onoff","pathIndex","lastPath","bindtoOb","newCtxs","newTagCtx","_ths","clean","elemArray","linkedElemTag","objId","obsId","cbId","propertyChangeStr","onDispose","_cbBnds","$unlink","each","innerView","getElementsByTagName","tmplUnlink","rViewPath","inputAttrib","viewOrTagChar","viewOrTag","precedingLength","emptyView","vwItem","rOpenMarkers","observeProps","insert","observeMappedProps","removeProperty","shallowArrayFilter","setGlobals","jsvStoreName","$observe","versionNumber","rAttrEncode","&","<",">","\u0000","'","\"","`","jsr","jsrender","jsrToJq","jsviews","jsv","sub","parse","extend","syntaxErr","_err","Error","observable","renderFile","__express","isFunction","ob","Array","obj","_jq","jq","delimiters","if","done","selected","for","finalElse","include","*",":*","dbg","url","encodeURI","observe","$eventSpecial","event","special","$expando","expando","PARSEINT","rNotWhite","propChng","arrChng","cbBindingsStore","observeStr","observeObjKey","observeCbKey","observeInnerCbKey","$hasData","hasData","$data","getCbKey","cb","_cId","ObjectObservable","_data","ArrayObservable","wrapArray","resolvePathObjects","nextObj","out","removeCbBindings","cbBindings","cbBindingsId","onObservableChange","isOb","allowArray","filter","parentObs","observeAll","array","_path","observe_apply","ns","$observeAll","namespace","unobserve","$unobserveAll","objMap","observeArrayItems","arr","unobs","newAllPath","filterAndObserveAll","nestedArray","newObject","newParentObs","_fltr","nextParentObs","updatedTgt","wrappedCb","oldItems","isObject","obId","notRemoving","un","shallowFilter","$unobserve","innerObserve","observeOnOff","pathStr","isArrayBinding","evData","obIdExpando","boundObOrArr","prntObs","allPth","initialNs","events","el","callback","fullPath","inArray","getInnerCb","origRt","contextCb","newObj","bindArray","unbind","relPath","prevObj","prevAllPath","p","dep","innerCb","initNsArr","initNsArrLen","lastArg","_inId","match","origRoot","set","Object","unobserveAll","nonStrict","pair","_setProperty","leaf","getter","removeProp","property","Date","_trigger","triggerHandler","_insert","oldLength","numToRemove","_remove","move","oldIndex","newIndex","numToMove","_move","newItems","_refresh","$_data","handleObj","unbound","changing","update","obsSrc","obs","srcFlt","obsTgt","obt","tgtFlt","_def","linkMethods","bindElsSel","input","valueBinding","isCleanCall","oldCleanData","oldJsvDelimiters","querySelector","ol","ul","table","tbody","thead","tfoot","tr","colgroup","dl","select","optgroup","svg","svg_ns","br","img","hr","area","col","meta","command","embed","keygen","track","wbr","requiresStr","contents","filtered","add","withMarkers","prevIsFirstNode","lastSibling","childTags","disposed","unlink","domChange","hasListener","domChangeNotification","delimChars","dataItems","viewsCount","itemsCount","keepNodes","removeView","viewToRemove","regularExpression","toggle","elemType","label","contextOb","activeElem","_evs","_sel","_hlr","arrayView","targetLength","arrHandler","arrBinding","arrayBindings","_ars","tagCt","tci","prevArg","different","getInnerView","nd","isVl","oldFn","option","legend","td","support","htmlSerialize","linkAttr","textarea","jsrDbgMode","caption","th"],"mappings":"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","file":"jsviews.min.js","sourcesContent":["/*! jsviews.js v1.0.0-beta.70 (Beta Candidate) single-file version: http://jsviews.com/ */\n/*! includes JsRender, JsObservable and JsViews - see: http://jsviews.com/#download */\n\n/* Interactive data-driven views using JsRender templates */\n\n//<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< JsRender >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n/* JsRender:\n * See http://jsviews.com/#jsrender and http://github.com/BorisMoore/jsrender\n * Copyright 2015, Boris Moore\n * Released under the MIT License.\n */\n\n//jshint -W018, -W041\n\n(function(factory) {\n\t// global var is the this object, which is window when running in the usual browser environment\n\tvar global = (0, eval)('this'), // jshint ignore:line\n\t\t$ = global.jQuery;\n\n\tif (typeof define === \"function\" && define.amd) { // AMD script loader, e.g. RequireJS\n\t\tdefine([\"jquery\"], factory);\n\t} else if (typeof exports === \"object\") { // CommonJS e.g. Browserify\n\t\tmodule.exports = $\n\t\t\t? factory($)\n\t\t\t: function($) { // If no global jQuery, take jQuery passed as parameter: require(\"jsviews\")(jQuery)\n\t\t\t\treturn factory($);\n\t\t\t};\n\t} else { // Browser using plain <script> tag\n\t\tfactory(false);\n\t}\n} (\n\n// factory (for jsviews.js)\nfunction($) {\n\"use strict\";\n\n//========================== Top-level vars ==========================\n\n// global var is the this object, which is window when running in the usual browser environment\nvar global = (0, eval)('this'), // jshint ignore:line\n\tsetGlobals = $ === false; // Only set globals if script block in browser (not AMD and not CommonJS)\n\n$ = $ || global.jQuery; // $ is jQuery passed in by CommonJS loader (Browserify), or global jQuery.\n\nif (!$ || !$.fn) {\n\t// jQuery is not loaded.\n\tthrow \"JsViews requires jQuery\"; // We require jQuery\n}\n\nvar versionNumber = \"v1.0.0-beta\",\n\n\tjsvStoreName, rTag, rTmplString, topView, $views, $observe, $observable,\n\n//TODO\ttmplFnsCache = {},\n\t$isFunction, $isArray, $templates, $converters, $helpers, $tags, $sub, $viewsSettings,\n\n\tdelimOpenChar0 = \"{\", delimOpenChar1 = \"{\", delimCloseChar0 = \"}\", delimCloseChar1 = \"}\", linkChar = \"^\",\n\n\trPath = /^(!*?)(?:null|true|false|\\d[\\d.]*|([\\w$]+|\\.|~([\\w$]+)|#(view|([\\w$]+))?)([\\w$.^]*?)(?:[.[^]([\\w$]+)\\]?)?)$/g,\n\t//        not                               object     helper    view  viewProperty pathTokens      leafToken\n\n\trParams = /(\\()(?=\\s*\\()|(?:([([])\\s*)?(?:(\\^?)(!*?[#~]?[\\w$.^]+)?\\s*((\\+\\+|--)|\\+|-|&&|\\|\\||===|!==|==|!=|<=|>=|[<>%*:?\\/]|(=))\\s*|(!*?[#~]?[\\w$.^]+)([([])?)|(,\\s*)|(\\(?)\\\\?(?:(')|(\"))|(?:\\s*(([)\\]])(?=\\s*[.^]|\\s*$|[^\\(\\[])|[)\\]])([([]?))|(\\s+)/g,\n\t//          lftPrn0        lftPrn        bound            path    operator err                                                eq             path2       prn    comma   lftPrn2   apos quot      rtPrn rtPrnDot                           prn2  space\n\t// (left paren? followed by (path? followed by operator) or (path followed by left paren?)) or comma or apos or quot or right paren or space\n\n\tisRenderCall,\n\trNewLine = /[ \\t]*(\\r\\n|\\n|\\r)/g,\n\trUnescapeQuotes = /\\\\(['\"])/g,\n\trEscapeQuotes = /['\"\\\\]/g, // Escape quotes and \\ character\n\trBuildHash = /(?:\\x08|^)(onerror:)?(?:(~?)(([\\w$_\\.]+):)?([^\\x08]+))\\x08(,)?([^\\x08]+)/gi,\n\trTestElseIf = /^if\\s/,\n\trFirstElem = /<(\\w+)[>\\s]/,\n\trAttrEncode = /[\\x00`><\"'&]/g, // Includes > encoding since rConvertMarkers in JsViews does not skip > characters in attribute strings\n\trIsHtml = /[\\x00`><\\\"'&]/,\n\trHasHandlers = /^on[A-Z]|^convert(Back)?$/,\n\trHtmlEncode = rAttrEncode,\n\tviewId = 0,\n\tcharEntities = {\n\t\t\"&\": \"&amp;\",\n\t\t\"<\": \"&lt;\",\n\t\t\">\": \"&gt;\",\n\t\t\"\\x00\": \"&#0;\",\n\t\t\"'\": \"&#39;\",\n\t\t'\"': \"&#34;\",\n\t\t\"`\": \"&#96;\"\n\t},\n\tHTML = \"html\",\n\tOBJECT = \"object\",\n\ttmplAttr = \"data-jsv-tmpl\",\n\tjsvTmpl = \"jsvTmpl\",\n\tindexStr = \"For #index in nested block use #getIndex().\",\n\t$render = {},\n\n\tjsr = global.jsrender,\n\tjsrToJq = jsr && $ && !$.render, // JsRender already loaded, without jQuery. but we will re-load it now to attach to jQuery\n\n\tjsvStores = {\n\t\ttemplate: {\n\t\t\tcompile: compileTmpl\n\t\t},\n\t\ttag: {\n\t\t\tcompile: compileTag\n\t\t},\n\t\thelper: {},\n\t\tconverter: {}\n\t};\n\n// views object ($.views if jQuery is loaded, jsrender.views if no jQuery, e.g. in Node.js)\n\t$views = {\n\t\tjsviews: versionNumber,\n\t\tsettings: function(settings) {\n\t\t\t$extend($viewsSettings, settings);\n\t\t\tdbgMode($viewsSettings._dbgMode);\n\t\t\tif ($viewsSettings.jsv) {\n\t\t\t\t$viewsSettings.jsv();\n\t\t\t}\n\t\t},\n\t\tsub: {\n\t\t\t// subscription, e.g. JsViews integration\n\t\t\tView: View,\n\t\t\tErr: JsViewsError,\n\t\t\ttmplFn: tmplFn,\n\t\t\tparse: parseParams,\n\t\t\textend: $extend,\n\t\t\textendCtx: extendCtx,\n\t\t\tsyntaxErr: syntaxError,\n\t\t\tonStore: {},\n\t\t\t_ths: tagHandlersFromProps,\n\t\t\t_tg: function() {} // Constructor for tagDef\n\t\t},\n\t\tmap: dataMap, // If jsObservable loaded first, use that definition of dataMap\n\t\t_cnvt: convertVal,\n\t\t_tag: renderTag,\n\t\t_err: error\n\t};\n\nfunction getDerivedMethod(baseMethod, method) {\n\treturn function() {\n\t\tvar ret,\n\t\t\ttag = this,\n\t\t\tprevBase = tag.base;\n\n\t\ttag.base = baseMethod; // Within method call, calling this.base will call the base method\n\t\tret = method.apply(tag, arguments); // Call the method\n\t\ttag.base = prevBase; // Replace this.base to be the base method of the previous call, for chained calls\n\t\treturn ret;\n\t};\n}\n\nfunction getMethod(baseMethod, method) {\n\t// For derived methods (or handlers declared declaratively as in {{:foo onChange=~fooChanged}} replace by a derived method, to allow using this.base(...)\n\t// or this.baseApply(arguments) to call the base implementation. (Equivalent to this._super(...) and this._superApply(arguments) in jQuery UI)\n\tif ($isFunction(method)) {\n\t\tmethod = getDerivedMethod(\n\t\t\t\t!baseMethod\n\t\t\t\t\t? noop // no base method implementation, so use noop as base method\n\t\t\t\t\t: baseMethod._d\n\t\t\t\t\t\t? baseMethod // baseMethod is a derived method, so us it\n\t\t\t\t\t\t: getDerivedMethod(noop, baseMethod), // baseMethod is not derived so make its base method be the noop method\n\t\t\t\tmethod\n\t\t\t);\n\t\tmethod._d = 1; // Add flag that this is a derived method\n\t}\n\treturn method;\n}\n\nfunction tagHandlersFromProps(tag, tagCtx) {\n\tfor (var prop in tagCtx.props) {\n\t\tif (rHasHandlers.test(prop)) {\n\t\t\ttag[prop] = getMethod(tag[prop], tagCtx.props[prop]);\n\t\t\t// Copy over the onFoo props, convert and convertBack from tagCtx.props to tag (overrides values in tagDef).\n\t\t\t// Note: unsupported scenario: if handlers are dynamically added ^onFoo=expression this will work, but dynamically removing will not work.\n\t\t}\n\t}\n}\n\nfunction retVal(val) {\n\treturn val;\n}\n\nfunction noop() {\n\treturn \"\";\n}\n\nfunction dbgBreak(val) {\n\t// Usage examples: {{dbg:...}}, {{:~dbg(...)}}, {{for ... onAfterLink=~dbg}}, {{dbg .../}} etc.\n\t// To break here, stop on caught exceptions.\n\ttry {\n\t\tdebugger;\n\t\tthrow \"dbg breakpoint\";\n\t}\n\tcatch (e) {}\n\treturn this.base ? this.baseApply(arguments) : val;\n}\n\nfunction dbgMode(debugMode) {\n\t$viewsSettings._dbgMode = debugMode !== false; // Pass in false to unset. Otherwise sets to true.\n}\n\nfunction JsViewsError(message) {\n\t// Error exception type for JsViews/JsRender\n\t// Override of $.views.sub.Error is possible\n\tthis.name = ($.link ? \"JsViews\" : \"JsRender\") + \" Error\";\n\tthis.message = message || this.name;\n}\n\nfunction $extend(target, source) {\n\tvar name;\n\tfor (name in source) {\n\t\ttarget[name] = source[name];\n\t}\n\treturn target;\n}\n\n(JsViewsError.prototype = new Error()).constructor = JsViewsError;\n\n//========================== Top-level functions ==========================\n\n//===================\n// views.delimiters\n//===================\nfunction $viewsDelimiters(openChars, closeChars, link) {\n\t// Set the tag opening and closing delimiters and 'link' character. Default is \"{{\", \"}}\" and \"^\"\n\t// openChars, closeChars: opening and closing strings, each with two characters\n\n\tif (this !== 0 || openChars) {\n\t\tdelimOpenChar0 = openChars ? openChars.charAt(0) : delimOpenChar0; // Escape the characters - since they could be regex special characters\n\t\tdelimOpenChar1 = openChars ? openChars.charAt(1) : delimOpenChar1;\n\t\tdelimCloseChar0 = closeChars ? closeChars.charAt(0) : delimCloseChar0;\n\t\tdelimCloseChar1 = closeChars ? closeChars.charAt(1) : delimCloseChar1;\n\t\tlinkChar = link || linkChar;\n\t\topenChars = \"\\\\\" + delimOpenChar0 + \"(\\\\\" + linkChar + \")?\\\\\" + delimOpenChar1; // Default is \"{^{\"\n\t\tcloseChars = \"\\\\\" + delimCloseChar0 + \"\\\\\" + delimCloseChar1;                   // Default is \"}}\"\n\t\t// Build regex with new delimiters\n\t\t//          tag    (followed by / space or })   or cvtr+colon or html or code\n\t\trTag = \"(?:(?:(\\\\w+(?=[\\\\/\\\\s\\\\\" + delimCloseChar0 + \"]))|(?:(\\\\w+)?(:)|(>)|!--((?:[^-]|-(?!-))*)--|(\\\\*)))\"\n\t\t\t+ \"\\\\s*((?:[^\\\\\" + delimCloseChar0 + \"]|\\\\\" + delimCloseChar0 + \"(?!\\\\\" + delimCloseChar1 + \"))*?)\";\n\n\t\t// make rTag available to JsViews (or other components) for parsing binding expressions\n\t\t$sub.rTag = rTag + \")\";\n\n\t\trTag = new RegExp(openChars + rTag + \"(\\\\/)?|(?:\\\\/(\\\\w+)))\" + closeChars, \"g\");\n\n\t\t// Default:    bind           tag       converter colon html     comment            code      params            slash   closeBlock\n\t\t//           /{(\\^)?{(?:(?:(\\w+(?=[\\/\\s}]))|(?:(\\w+)?(:)|(>)|!--((?:[^-]|-(?!-))*)--|(\\*)))\\s*((?:[^}]|}(?!}))*?)(\\/)?|(?:\\/(\\w+)))}}/g\n\n\t\trTmplString = new RegExp(\"<.*>|([^\\\\\\\\]|^)[{}]|\" + openChars + \".*\" + closeChars);\n\t\t// rTmplString looks for html tags or { or } char not preceded by \\\\, or JsRender tags {{xxx}}. Each of these strings are considered\n\t\t// NOT to be jQuery selectors\n\t}\n\treturn [delimOpenChar0, delimOpenChar1, delimCloseChar0, delimCloseChar1, linkChar];\n}\n\n//=========\n// View.get\n//=========\n\nfunction getView(inner, type) { //view.get(inner, type)\n\tif (!type) {\n\t\t// view.get(type)\n\t\ttype = inner;\n\t\tinner = undefined;\n\t}\n\n\tvar views, i, l, found,\n\t\tview = this,\n\t\troot = !type || type === \"root\";\n\t\t// If type is undefined, returns root view (view under top view).\n\n\tif (inner) {\n\t\t// Go through views - this one, and all nested ones, depth-first - and return first one with given type.\n\t\tfound = view.type === type ? view : undefined;\n\t\tif (!found) {\n\t\t\tviews = view.views;\n\t\t\tif (view._.useKey) {\n\t\t\t\tfor (i in views) {\n\t\t\t\t\tif (found = views[i].get(inner, type)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0, l = views.length; !found && i < l; i++) {\n\t\t\t\t\tfound = views[i].get(inner, type);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (root) {\n\t\t// Find root view. (view whose parent is top view)\n\t\twhile (view.parent.parent) {\n\t\t\tfound = view = view.parent;\n\t\t}\n\t} else {\n\t\twhile (view && !found) {\n\t\t\t// Go through views - this one, and all parent ones - and return first one with given type.\n\t\t\tfound = view.type === type ? view : undefined;\n\t\t\tview = view.parent;\n\t\t}\n\t}\n\treturn found;\n}\n\nfunction getNestedIndex() {\n\tvar view = this.get(\"item\");\n\treturn view ? view.index : undefined;\n}\n\ngetNestedIndex.depends = function() {\n\treturn [this.get(\"item\"), \"index\"];\n};\n\nfunction getIndex() {\n\treturn this.index;\n}\n\ngetIndex.depends = \"index\";\n\n//==========\n// View.hlp\n//==========\n\nfunction getHelper(helper) {\n\t// Helper method called as view.hlp(key) from compiled template, for helper functions or template parameters ~foo\n\tvar wrapped,\n\t\tview = this,\n\t\tctx = view.linkCtx,\n\t\tres = (view.ctx || {})[helper];\n\n\tif (res === undefined && ctx && ctx.ctx) {\n\t\tres = ctx.ctx[helper];\n\t}\n\tif (res === undefined) {\n\t\tres = $helpers[helper];\n\t}\n\n\tif (res) {\n\t\tif ($isFunction(res) && !res._wrp) {\n\t\t\t// If it is of type function, and not already wrapped, we will wrap it, so if called with no this pointer it will be called with the\n\t\t\t// view as 'this' context. If the helper ~foo() was in a data-link expression, the view will have a 'temporary' linkCtx property too.\n\t\t\t// Note that helper functions on deeper paths will have specific this pointers, from the preceding path.\n\t\t\t// For example, ~util.foo() will have the ~util object as 'this' pointer\n\t\t\twrapped = function() {\n\t\t\t\treturn res.apply((!this || this === global) ? view : this, arguments);\n\t\t\t};\n\t\t\twrapped._wrp = true;\n\t\t\t$extend(wrapped, res); // Attach same expandos (if any) to the wrapped function\n\t\t}\n\t}\n\treturn wrapped || res;\n}\n\n//==============\n// views._cnvt\n//==============\n\nfunction convertVal(converter, view, tagCtx, onError) {\n\t// self is template object or linkCtx object\n\tvar tag, value,\n\t\t// if tagCtx is an integer, then it is the key for the compiled function to return the boundTag tagCtx\n\t\tboundTag = typeof tagCtx === \"number\" && view.tmpl.bnds[tagCtx-1],\n\t\tlinkCtx = view.linkCtx; // For data-link=\"{cvt:...}\"...\n\n\tif (onError !== undefined) {\n\t\ttagCtx = onError = {props: {}, args: [onError]};\n\t} else if (boundTag) {\n\t\ttagCtx = boundTag(view.data, view, $views);\n\t}\n\n\tvalue = tagCtx.args[0];\n\tif (converter || boundTag) {\n\t\ttag = linkCtx && linkCtx.tag;\n\t\tif (!tag) {\n\t\t\ttag = $extend(new $sub._tg(), {\n\t\t\t\t_: {\n\t\t\t\t\tinline: !linkCtx,\n\t\t\t\t\tbnd: boundTag,\n\t\t\t\t\tunlinked: true\n\t\t\t\t},\n\t\t\t\ttagName: \":\",\n\t\t\t\tcvt: converter,\n\t\t\t\tflow: true,\n\t\t\t\ttagCtx: tagCtx,\n\t\t\t});\n\t\t\tif (linkCtx) {\n\t\t\t\tlinkCtx.tag = tag;\n\t\t\t\ttag.linkCtx = linkCtx;\n\t\t\t}\n\t\t\ttagCtx.ctx = extendCtx(tagCtx.ctx, (linkCtx ? linkCtx.view : view).ctx);\n\t\t}\n\t\ttag._er = onError && value;\n\t\ttagHandlersFromProps(tag, tagCtx);\n\n\t\ttagCtx.view = view;\n\n\t\ttag.ctx = tagCtx.ctx || {};\n\t\ttagCtx.ctx = undefined;\n\t\t// Provide this tag on view, for addBindingMarkers on bound tags to add the tag to view._.bnds, associated with the tag id,\n\t\tview._.tag = tag;\n\n\t\tvalue = tag.cvtArgs(tag.convert || converter !== \"true\" && converter)[0]; // If there is a convertBack but no convert, converter will be \"true\"\n\n\t\t// Call onRender (used by JsViews if present, to add binding annotations around rendered content)\n\t\tvalue = boundTag && view._.onRender\n\t\t\t? view._.onRender(value, view, boundTag)\n\t\t\t: value;\n\t\tview._.tag = undefined;\n\t}\n\treturn value != undefined ? value : \"\";\n}\n\nfunction convertArgs(converter) {\n\tvar tag = this,\n\t\ttagCtx = tag.tagCtx,\n\t\tview = tagCtx.view,\n\t\targs = tagCtx.args;\n\n\tconverter = tag.convert || converter;\n\tconverter = converter && (\"\" + converter === converter\n\t\t? (view.getRsc(\"converters\", converter) || error(\"Unknown converter: '\" + converter + \"'\"))\n\t\t: converter);\n\n\targs = !args.length && !tagCtx.index // On the opening tag with no args, bind to the current data context\n\t\t? [view.data]\n\t\t: converter\n\t\t\t? args.slice() // If there is a converter, use a copy of the tagCtx.args array for rendering, and replace the args[0] in\n\t\t\t// the copied array with the converted value. But we do not modify the value of tag.tagCtx.args[0] (the original args array)\n\t\t\t: args; // If no converter, get the original tagCtx.args\n\n\tif (converter) {\n\t\tif (converter.depends) {\n\t\t\ttag.depends = $sub.getDeps(tag.depends, tag, converter.depends, converter);\n\t\t}\n\t\targs[0] = converter.apply(tag, args);\n\t}\n\treturn args;\n}\n\n//=============\n// views._tag\n//=============\n\nfunction getResource(resourceType, itemName) {\n\tvar res, store,\n\t\tview = this;\n\twhile ((res === undefined) && view) {\n\t\tstore = view.tmpl && view.tmpl[resourceType];\n\t\tres = store && store[itemName];\n\t\tview = view.parent;\n\t}\n\treturn res || $views[resourceType][itemName];\n}\n\nfunction renderTag(tagName, parentView, tmpl, tagCtxs, isUpdate, onError) {\n\tparentView = parentView || topView;\n\tvar tag, tag_, tagDef, template, tags, attr, parentTag, i, l, itemRet, tagCtx, tagCtxCtx, content, callInit, mapDef, thisMap, args, props, initialTmpl, tagDataMap,\n\t\tret = \"\",\n\t\tlinkCtx = parentView.linkCtx || 0,\n\t\tctx = parentView.ctx,\n\t\tparentTmpl = tmpl || parentView.tmpl,\n\t\t// if tagCtx is an integer, then it is the key for the compiled function to return the boundTag tagCtxs\n\t\tboundTag = typeof tagCtxs === \"number\" && parentView.tmpl.bnds[tagCtxs-1];\n\n\tif (tagName._is === \"tag\") {\n\t\ttag = tagName;\n\t\ttagName = tag.tagName;\n\t\ttagCtxs = tag.tagCtxs;\n\t\ttemplate = tag.template;\n\t} else {\n\t\ttagDef = parentView.getRsc(\"tags\", tagName) || error(\"Unknown tag: {{\" + tagName + \"}} \");\n\t\ttemplate = tagDef.template;\n\t}\n\n\tif (onError !== undefined) {\n\t\tret += onError;\n\t\ttagCtxs = onError = [{props: {}, args: []}];\n\t} else if (boundTag) {\n\t\ttagCtxs = boundTag(parentView.data, parentView, $views);\n\t}\n\n\tl = tagCtxs.length;\n\tfor (i = 0; i < l; i++) {\n\t\ttagCtx = tagCtxs[i];\n\t\tif (!linkCtx || !linkCtx.tag || i && !linkCtx.tag._.inline || tag._er) {\n\t\t\t// Initialize tagCtx\n\t\t\t// For block tags, tagCtx.tmpl is an integer > 0\n\t\t\tif (content = tagCtx.tmpl) {\n\t\t\t\tcontent = tagCtx.content = parentTmpl.tmpls[content - 1];\n\t\t\t}\n\t\t\ttagCtx.index = i;\n\t\t\ttagCtx.tmpl = template || content; // Set the tmpl property to the content of the block tag\n\t\t\ttagCtx.render = renderContent;\n\t\t\ttagCtx.view = parentView;\n\t\t\ttagCtx.ctx = extendCtx(tagCtx.ctx, ctx); // Clone and extend parentView.ctx\n\t\t}\n\t\tif (tmpl = tagCtx.props.tmpl) {\n\t\t\t// If the tmpl property is overridden, set the value (when initializing, or, in case of binding: ^tmpl=..., when updating)\n\t\t\ttmpl = \"\" + tmpl === tmpl // if a string\n\t\t\t\t? parentView.getRsc(\"templates\", tmpl) || $templates(tmpl)\n\t\t\t\t: tmpl;\n\n\t\t\ttagCtx.tmpl = tmpl;\n\t\t}\n\n\t\tif (!tag) {\n\t\t\t// This will only be hit for initial tagCtx (not for {{else}}) - if the tag instance does not exist yet\n\t\t\t// Instantiate tag if it does not yet exist\n\t\t\t// If the tag has not already been instantiated, we will create a new instance.\n\t\t\t// ~tag will access the tag, even within the rendering of the template content of this tag.\n\t\t\t// From child/descendant tags, can access using ~tag.parent, or ~parentTags.tagName\n\t\t\ttag = new tagDef._ctr();\n\t\t\tcallInit = !!tag.init;\n\n\t\t\ttag.parent = parentTag = ctx && ctx.tag;\n\t\t\ttag.tagCtxs = tagCtxs;\n\t\t\ttagDataMap = tag.dataMap;\n\n\t\t\tif (linkCtx) {\n\t\t\t\ttag._.inline = false;\n\t\t\t\tlinkCtx.tag = tag;\n\t\t\t\ttag.linkCtx = linkCtx;\n\t\t\t}\n\t\t\tif (tag._.bnd = boundTag || linkCtx.fn) {\n\t\t\t\t// Bound if {^{tag...}} or data-link=\"{tag...}\"\n\t\t\t\ttag._.arrVws = {};\n\t\t\t} else if (tag.dataBoundOnly) {\n\t\t\t\terror(\"{^{\" + tagName + \"}} tag must be data-bound\");\n\t\t\t}\n\t\t\t//TODO better perf for childTags() - keep child tag.tags array, (and remove child, when disposed)\n\t\t\t// tag.tags = [];\n\t\t}\n\t\ttagCtxs = tag.tagCtxs;\n\t\ttagDataMap = tag.dataMap;\n\n\t\ttagCtx.tag = tag;\n\t\tif (tagDataMap && tagCtxs) {\n\t\t\ttagCtx.map = tagCtxs[i].map; // Copy over the compiled map instance from the previous tagCtxs to the refreshed ones\n\t\t}\n\t\tif (!tag.flow) {\n\t\t\ttagCtxCtx = tagCtx.ctx = tagCtx.ctx || {};\n\n\t\t\t// tags hash: tag.ctx.tags, merged with parentView.ctx.tags,\n\t\t\ttags = tag.parents = tagCtxCtx.parentTags = ctx && extendCtx(tagCtxCtx.parentTags, ctx.parentTags) || {};\n\t\t\tif (parentTag) {\n\t\t\t\ttags[parentTag.tagName] = parentTag;\n\t\t\t\t//TODO better perf for childTags: parentTag.tags.push(tag);\n\t\t\t}\n\t\t\ttags[tag.tagName] = tagCtxCtx.tag = tag;\n\t\t}\n\t}\n\tif (boundTag || linkCtx) {\n\t\t// Provide this tag on view, for addBindingMarkers on bound tags to add the tag to view._.bnds, associated with the tag id\n\t\tparentView._.tag = tag;\n\t}\n\tif (!(tag._er = onError)) {\n\t\ttagHandlersFromProps(tag, tagCtxs[0]);\n\t\ttag.rendering = {}; // Provide object for state during render calls to tag and elses. (Used by {{if}} and {{for}}...)\n\t\tfor (i = 0; i < l; i++) {\n\t\t\ttagCtx = tag.tagCtx = tagCtxs[i];\n\t\t\tprops = tagCtx.props;\n\t\t\targs = tag.cvtArgs();\n\n\t\t\tif (mapDef = props.dataMap || tagDataMap) {\n\t\t\t\tif (args.length || props.dataMap) {\n\t\t\t\t\tthisMap = tagCtx.map;\n\t\t\t\t\tif (!thisMap || thisMap.src !== args[0] || isUpdate) {\n\t\t\t\t\t\tif (thisMap && thisMap.src) {\n\t\t\t\t\t\t\tthisMap.unmap(); // only called if observable map - not when only used in JsRender, e.g. by {{props}}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthisMap = tagCtx.map = mapDef.map(args[0], props, undefined, !tag._.bnd);\n\t\t\t\t\t}\n\t\t\t\t\targs = [thisMap.tgt];\n\t\t\t\t}\n\t\t\t}\n\t\t\ttag.ctx = tagCtx.ctx;\n\n\t\t\tif (!i) {\n\t\t\t\tif (callInit) {\n\t\t\t\t\tinitialTmpl = tag.template;\n\t\t\t\t\ttag.init(tagCtx, linkCtx, tag.ctx);\n\t\t\t\t\tcallInit = undefined;\n\t\t\t\t\tif (tag.template !== initialTmpl) {\n\t\t\t\t\t\ttag._.tmpl = tag.template; // This will override the tag.template and also tagCtx.props.tmpl for all tagCtxs\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (linkCtx) {\n\t\t\t\t\t// Set attr on linkCtx to ensure outputting to the correct target attribute.\n\t\t\t\t\t// Setting either linkCtx.attr or this.attr in the init() allows per-instance choice of target attrib.\n\t\t\t\t\tlinkCtx.attr = tag.attr = linkCtx.attr || tag.attr;\n\t\t\t\t}\n\t\t\t\tattr = tag.attr;\n\t\t\t\ttag._.noVws = attr && attr !== HTML;\n\t\t\t}\n\n\t\t\titemRet = undefined;\n\t\t\tif (tag.render) {\n\t\t\t\titemRet = tag.render.apply(tag, args);\n\t\t\t}\n\t\t\tif (!args.length) {\n\t\t\t\targs = [parentView]; // no arguments - get data context from view.\n\t\t\t}\n\t\t\tif (itemRet === undefined) {\n\t\t\t\titemRet = tagCtx.render(args.length ? args[0] : parentView, true) || (isUpdate ? undefined : \"\");\n\t\t\t}\n\t\t\t// No return value from render, and no template/content tagCtx.render(...), so return undefined\n\t\t\tret = ret ? ret + (itemRet || \"\") : itemRet; // If no rendered content, this will be undefined\n\t\t}\n\t\ttag.rendering = undefined;\n\t}\n\ttag.tagCtx = tagCtxs[0];\n\ttag.ctx = tag.tagCtx.ctx;\n\n\tif (tag._.noVws) {\n\t\t\tif (tag._.inline) {\n\t\t\t// inline tag with attr set to \"text\" will insert HTML-encoded content - as if it was element-based innerText\n\t\t\tret = attr === \"text\"\n\t\t\t\t? $converters.html(ret)\n\t\t\t\t: \"\";\n\t\t}\n\t}\n\treturn boundTag && parentView._.onRender\n\t\t// Call onRender (used by JsViews if present, to add binding annotations around rendered content)\n\t\t? parentView._.onRender(ret, parentView, boundTag)\n\t\t: ret;\n}\n\n//=================\n// View constructor\n//=================\n\nfunction View(context, type, parentView, data, template, key, contentTmpl, onRender) {\n\t// Constructor for view object in view hierarchy. (Augmented by JsViews if JsViews is loaded)\n\tvar views, parentView_, tag, self_,\n\t\tself = this,\n\t\tisArray = type === \"array\";\n\n\tself.content = contentTmpl;\n\tself.views = isArray ? [] : {};\n\tself.parent = parentView;\n\tself.type = type || \"top\";\n\tself.data = data;\n\tself.tmpl = template;\n\t// If the data is an array, this is an 'array view' with a views array for each child 'item view'\n\t// If the data is not an array, this is an 'item view' with a views 'hash' object for any child nested views\n\t// ._.useKey is non zero if is not an 'array view' (owning a data array). Use this as next key for adding to child views hash\n\tself_ = self._ = {\n\t\tkey: 0,\n\t\tuseKey: isArray ? 0 : 1,\n\t\tid: \"\" + viewId++,\n\t\tonRender: onRender,\n\t\tbnds: {}\n\t};\n\tself.linked = !!onRender;\n\tif (parentView) {\n\t\tviews = parentView.views;\n\t\tparentView_ = parentView._;\n\t\tif (parentView_.useKey) {\n\t\t\t// Parent is an 'item view'. Add this view to its views object\n\t\t\t// self._key = is the key in the parent view hash\n\t\t\tviews[self_.key = \"_\" + parentView_.useKey++] = self;\n\t\t\tself.index = indexStr;\n\t\t\tself.getIndex = getNestedIndex;\n\t\t\ttag = parentView_.tag;\n\t\t\tself_.bnd = isArray && (!tag || !!tag._.bnd && tag); // For array views that are data bound for collection change events, set the\n\t\t\t// view._.bnd property to true for top-level link() or data-link=\"{for}\", or to the tag instance for a data-bound tag, e.g. {^{for ...}}\n\t\t} else if (views.length === (self_.key = self.index = key)) { // Parent is an 'array view'. Add this view to its views array\n\t\t\tviews.push(self); // Use push when possible (better perf than splice)\n\t\t} else {\n\t\t\tviews.splice(key, 0, self);\n\t\t}\n\t\t// If no context was passed in, use parent context\n\t\t// If context was passed in, it should have been merged already with parent context\n\t\tself.ctx = context || parentView.ctx;\n\t} else {\n\t\tself.ctx = context;\n\t}\n}\n\nView.prototype = {\n\tget: getView,\n\tgetIndex: getIndex,\n\tgetRsc: getResource,\n\thlp: getHelper,\n\t_is: \"view\"\n};\n\n//=============\n// Registration\n//=============\n\nfunction compileChildResources(parentTmpl) {\n\tvar storeName, resources, resourceName, resource, settings, compile, onStore;\n\tfor (storeName in jsvStores) {\n\t\tsettings = jsvStores[storeName];\n\t\tif ((compile = settings.compile) && (resources = parentTmpl[storeName + \"s\"])) {\n\t\t\tfor (resourceName in resources) {\n\t\t\t\t// compile child resource declarations (templates, tags, tags[\"for\"] or helpers)\n\t\t\t\tresource = resources[resourceName] = compile(resourceName, resources[resourceName], parentTmpl, 0);\n\t\t\t\tresource._is = storeName; // Only do this for compiled objects (tags, templates...)\n\t\t\t\tif (resource && (onStore = $sub.onStore[storeName])) {\n\t\t\t\t\t// e.g. JsViews integration\n\t\t\t\t\tonStore(resourceName, resource, compile);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction compileTag(name, tagDef, parentTmpl) {\n\tvar tmpl, baseTag, prop,\n\t\tcompiledDef = new $sub._tg();\n\n\tfunction Tag() {\n\t\tvar tag = this;\n\t\ttag._ = {\n\t\t\tinline: true,\n\t\t\tunlinked: true\n\t\t};\n\n\t\ttag.tagName = name;\n\t}\n\n\tif ($isFunction(tagDef)) {\n\t\t// Simple tag declared as function. No presenter instantation.\n\t\ttagDef = {\n\t\t\tdepends: tagDef.depends,\n\t\t\trender: tagDef\n\t\t};\n\t} else if (\"\" + tagDef === tagDef) {\n\t\ttagDef = {template: tagDef};\n\t}\n\tif (baseTag = tagDef.baseTag) {\n\t\ttagDef.flow = !!tagDef.flow; // Set flow property, so defaults to false even if baseTag has flow=true\n\t\ttagDef.baseTag = baseTag = \"\" + baseTag === baseTag\n\t\t\t? (parentTmpl && parentTmpl.tags[baseTag] || $tags[baseTag])\n\t\t\t: baseTag;\n\n\t\tcompiledDef = $extend(compiledDef, baseTag);\n\n\t\tfor (prop in tagDef) {\n\t\t\tcompiledDef[prop] = getMethod(baseTag[prop], tagDef[prop]);\n\t\t}\n\t} else {\n\t\tcompiledDef = $extend(compiledDef, tagDef);\n\t}\n\n\t// Tag declared as object, used as the prototype for tag instantiation (control/presenter)\n\tif ((tmpl = compiledDef.template) !== undefined) {\n\t\tcompiledDef.template = \"\" + tmpl === tmpl ? ($templates[tmpl] || $templates(tmpl)) : tmpl;\n\t}\n\tif (compiledDef.init !== false) {\n\t\t// Set init: false on tagDef if you want to provide just a render method, or render and template, but no constuctor or prototype.\n\t\t// so equivalent to setting tag to render function, except you can also provide a template.\n\t\t(Tag.prototype = compiledDef).constructor = compiledDef._ctr = Tag;\n\t}\n\n\tif (parentTmpl) {\n\t\tcompiledDef._parentTmpl = parentTmpl;\n\t}\n\treturn compiledDef;\n}\n\nfunction baseApply(args) {\n\t// In derived method (or handler declared declaratively as in {{:foo onChange=~fooChanged}} can call base method,\n\t// using this.baseApply(arguments) (Equivalent to this._superApply(arguments) in jQuery UI)\n\treturn this.base.apply(this, args);\n}\n\nfunction compileTmpl(name, tmpl, parentTmpl, options) {\n\t// tmpl is either a template object, a selector for a template script block, the name of a compiled template, or a template object\n\n\t//==== nested functions ====\n\tfunction lookupTemplate(value) {\n\t\t// If value is of type string - treat as selector, or name of compiled template\n\t\t// Return the template object, if already compiled, or the markup string\n\t\tvar currentName, tmpl;\n\t\tif ((\"\" + value === value) || value.nodeType > 0 && (elem = value)) {\n\t\t\tif (!elem) {\n\t\t\t\tif (/^\\.\\/[^\\\\:*?\"<>]*$/.test(value)) {\n\t\t\t\t\t// tmpl=\"./some/file.html\"\n\t\t\t\t\t// If the template is not named, use \"./some/file.html\" as name.\n\t\t\t\t\tif (tmpl = $templates[name = name || value]) {\n\t\t\t\t\t\tvalue = tmpl;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// BROWSER-SPECIFIC CODE (not on Node.js):\n\t\t\t\t\t\t// Look for server-generated script block with id \"./some/file.html\"\n\t\t\t\t\t\telem = document.getElementById(value);\n\t\t\t\t\t}\n\t\t\t\t} else if ($.fn && !rTmplString.test(value)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\telem = $(document).find(value)[0]; // if jQuery is loaded, test for selector returning elements, and get first element\n\t\t\t\t\t} catch (e) {}\n\t\t\t\t}// END BROWSER-SPECIFIC CODE\n\t\t\t} //BROWSER-SPECIFIC CODE\n\t\t\tif (elem) {\n\t\t\t\t// Generally this is a script element.\n\t\t\t\t// However we allow it to be any element, so you can for example take the content of a div,\n\t\t\t\t// use it as a template, and replace it by the same content rendered against data.\n\t\t\t\t// e.g. for linking the content of a div to a container, and using the initial content as template:\n\t\t\t\t// $.link(\"#content\", model, {tmpl: \"#content\"});\n\t\t\t\tif (options) {\n\t\t\t\t\t// We will compile a new template using the markup in the script element\n\t\t\t\t\tvalue = elem.innerHTML;\n\t\t\t\t} else {\n\t\t\t\t\t// We will cache a single copy of the compiled template, and associate it with the name\n\t\t\t\t\t// (renaming from a previous name if there was one).\n\t\t\t\t\tcurrentName = elem.getAttribute(tmplAttr);\n\t\t\t\t\tif (currentName) {\n\t\t\t\t\t\tif (currentName !== jsvTmpl) {\n\t\t\t\t\t\t\tvalue = $templates[currentName];\n\t\t\t\t\t\t\tdelete $templates[currentName];\n\t\t\t\t\t\t} else if ($.fn) {\n\t\t\t\t\t\t\tvalue = $.data(elem)[jsvTmpl];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tname = name || ($.fn ? jsvTmpl : value);\n\t\t\t\t\t\tvalue = compileTmpl(name, elem.innerHTML, parentTmpl, options);\n\t\t\t\t\t}\n\t\t\t\t\tvalue.tmplName = name = name || currentName;\n\t\t\t\t\tif (name !== jsvTmpl) {\n\t\t\t\t\t\t$templates[name] = value;\n\t\t\t\t\t}\n\t\t\t\t\telem.setAttribute(tmplAttr, name);\n\t\t\t\t\tif ($.fn) {\n\t\t\t\t\t\t$.data(elem, jsvTmpl, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // END BROWSER-SPECIFIC CODE\n\t\t\telem = undefined;\n\t\t} else if (!value.fn) {\n\t\t\tvalue = undefined;\n\t\t\t// If value is not a string. HTML element, or compiled template, return undefined\n\t\t}\n\t\treturn value;\n\t}\n\n\tvar elem, compiledTmpl,\n\t\ttmplOrMarkup = tmpl = tmpl || \"\";\n\n\t//==== Compile the template ====\n\tif (options === 0) {\n\t\toptions = undefined;\n\t\ttmplOrMarkup = lookupTemplate(tmplOrMarkup); // Top-level compile so do a template lookup\n\t}\n\n\t// If options, then this was already compiled from a (script) element template declaration.\n\t// If not, then if tmpl is a template object, use it for options\n\toptions = options || (tmpl.markup ? tmpl : {});\n\toptions.tmplName = name;\n\tif (parentTmpl) {\n\t\toptions._parentTmpl = parentTmpl;\n\t}\n\t// If tmpl is not a markup string or a selector string, then it must be a template object\n\t// In that case, get it from the markup property of the object\n\tif (!tmplOrMarkup && tmpl.markup && (tmplOrMarkup = lookupTemplate(tmpl.markup))) {\n\t\tif (tmplOrMarkup.fn) {\n\t\t\t// If the string references a compiled template object, need to recompile to merge any modified options\n\t\t\ttmplOrMarkup = tmplOrMarkup.markup;\n\t\t}\n\t}\n\tif (tmplOrMarkup !== undefined) {\n\t\tif (tmplOrMarkup.fn || tmpl.fn) {\n\t\t\t// tmpl is already compiled, so use it\n\t\t\tif (tmplOrMarkup.fn) {\n\t\t\t\tcompiledTmpl = tmplOrMarkup;\n\t\t\t}\n\t\t} else {\n\t\t\t// tmplOrMarkup is a markup string, not a compiled template\n\t\t\t// Create template object\n\t\t\ttmpl = tmplObject(tmplOrMarkup, options);\n\t\t\t// Compile to AST and then to compiled function\n\t\t\ttmplFn(tmplOrMarkup.replace(rEscapeQuotes, \"\\\\$&\"), tmpl);\n\t\t}\n\t\tif (!compiledTmpl) {\n\t\t\tcompileChildResources(options);\n\n\t\t\tcompiledTmpl = $extend(function() {\n\t\t\t\treturn tmpl.render.apply(tmpl, arguments);\n\t\t\t}, tmpl);\n\t\t}\n\t\tif (name && !parentTmpl && name !== jsvTmpl) {\n\t\t\t$render[name] = compiledTmpl;\n\t\t}\n\t\treturn compiledTmpl;\n\t}\n}\n\n//==== /end of function compileTmpl ====\n\nfunction dataMap(mapDef) {\n\tfunction Map(source, options) {\n\t\tthis.tgt = mapDef.getTgt(source, options);\n\t}\n\n\tif ($isFunction(mapDef)) {\n\t\t// Simple map declared as function\n\t\tmapDef = {\n\t\t\tgetTgt: mapDef\n\t\t};\n\t}\n\n\tif (mapDef.baseMap) {\n\t\tmapDef = $extend($extend({}, mapDef.baseMap), mapDef);\n\t}\n\n\tmapDef.map = function(source, options) {\n\t\treturn new Map(source, options);\n\t};\n\treturn mapDef;\n}\n\nfunction tmplObject(markup, options) {\n\t// Template object constructor\n\tvar htmlTag,\n\t\twrapMap = $viewsSettings.wrapMap || {}, // Only used in JsViews. Otherwise empty: {}\n\t\ttmpl = $extend(\n\t\t\t{\n\t\t\t\ttmpls: [],\n\t\t\t\tlinks: {}, // Compiled functions for link expressions\n\t\t\t\tbnds: [],\n\t\t\t\t_is: \"template\",\n\t\t\t\trender: renderContent\n\t\t\t},\n\t\t\toptions\n\t\t);\n\n\ttmpl.markup = markup;\n\tif (!options.htmlTag) {\n\t\t// Set tmpl.tag to the top-level HTML tag used in the template, if any...\n\t\thtmlTag = rFirstElem.exec(markup);\n\t\ttmpl.htmlTag = htmlTag ? htmlTag[1].toLowerCase() : \"\";\n\t}\n\thtmlTag = wrapMap[tmpl.htmlTag];\n\tif (htmlTag && htmlTag !== wrapMap.div) {\n\t\t// When using JsViews, we trim templates which are inserted into HTML contexts where text nodes are not rendered (i.e. not 'Phrasing Content').\n\t\t// Currently not trimmed for <li> tag. (Not worth adding perf cost)\n\t\ttmpl.markup = $.trim(tmpl.markup);\n\t}\n\n\treturn tmpl;\n}\n\nfunction registerStore(storeName, storeSettings) {\n\n\tfunction theStore(name, item, parentTmpl) {\n\t\t// The store is also the function used to add items to the store. e.g. $.templates, or $.views.tags\n\n\t\t// For store of name 'thing', Call as:\n\t\t//    $.views.things(items[, parentTmpl]),\n\t\t// or $.views.things(name, item[, parentTmpl])\n\n\t\tvar onStore, compile, itemName, thisStore;\n\n\t\tif (name && typeof name === OBJECT && !name.nodeType && !name.markup && !name.getTgt) {\n\t\t\t// Call to $.views.things(items[, parentTmpl]),\n\n\t\t\t// Adding items to the store\n\t\t\t// If name is a hash, then item is parentTmpl. Iterate over hash and call store for key.\n\t\t\tfor (itemName in name) {\n\t\t\t\ttheStore(itemName, name[itemName], item);\n\t\t\t}\n\t\t\treturn $views;\n\t\t}\n\t\t// Adding a single unnamed item to the store\n\t\tif (item === undefined) {\n\t\t\titem = name;\n\t\t\tname = undefined;\n\t\t}\n\t\tif (name && \"\" + name !== name) { // name must be a string\n\t\t\tparentTmpl = item;\n\t\t\titem = name;\n\t\t\tname = undefined;\n\t\t}\n\t\tthisStore = parentTmpl ? parentTmpl[storeNames] = parentTmpl[storeNames] || {} : theStore;\n\t\tcompile = storeSettings.compile;\n\t\tif (item === null) {\n\t\t\t// If item is null, delete this entry\n\t\t\tif (name) {\n\t\t\t\tdelete thisStore[name];\n\t\t\t}\n\t\t} else {\n\t\t\titem = compile ? compile(name, item, parentTmpl, 0) : item;\n\t\t\tif (name) {\n\t\t\t\tthisStore[name] = item;\n\t\t\t}\n\t\t}\n\t\tif (compile && item) {\n\t\t\titem._is = storeName; // Only do this for compiled objects (tags, templates...)\n\t\t}\n\t\tif (item && (onStore = $sub.onStore[storeName])) {\n\t\t\t// e.g. JsViews integration\n\t\t\tonStore(name, item, compile);\n\t\t}\n\t\treturn item;\n\t}\n\n\tvar storeNames = storeName + \"s\";\n\n\t$views[storeNames] = theStore;\n}\n\n//==============\n// renderContent\n//==============\n\nfunction renderContent(data, context, noIteration, parentView, key, onRender) {\n\tvar i, l, tag, tmpl, tagCtx, isTopRenderCall, prevData, prevIndex,\n\t\tview = parentView,\n\t\tresult = \"\";\n\n\tif (context === true) {\n\t\tnoIteration = context; // passing boolean as second param - noIteration\n\t\tcontext = undefined;\n\t} else if (typeof context !== OBJECT) {\n\t\tcontext = undefined; // context must be a boolean (noIteration) or a plain object\n\t}\n\n\tif (tag = this.tag) {\n\t\t// This is a call from renderTag or tagCtx.render(...)\n\t\ttagCtx = this;\n\t\ttmpl = tag._.tmpl || tagCtx.tmpl;\n\t\tview = view || tagCtx.view;\n\t\tif (!arguments.length) {\n\t\t\tdata = view;\n\t\t}\n\t} else {\n\t\t// This is a template.render(...) call\n\t\ttmpl = this;\n\t}\n\n\tif (tmpl) {\n\t\tif (!view && data && data._is === \"view\") {\n\t\t\tview = data; // When passing in a view to render or link (and not passing in a parent view) use the passed-in view as parentView\n\t\t}\n\n\t\tif (view) {\n\t\t\tif (data === view) {\n\t\t\t\t// Inherit the data from the parent view.\n\t\t\t\t// This may be the contents of an {{if}} block\n\t\t\t\tdata = view.data;\n\t\t\t}\n\t\t}\n\n\t\tif (!tmpl.fn) {\n\t\t\t// Template has not been compiled yet, so compile it.\n\t\t\ttmpl = tag._.tmpl = $templates[tmpl] || $templates(tmpl);\n\t\t}\n\n\t\tisTopRenderCall = !view;\n\t\tisRenderCall = isRenderCall || isTopRenderCall;\n\t\tif (!view) {\n\t\t\t(context = context || {}).root = data; // Provide ~root as shortcut to top-level data.\n\t\t}\n\t\tif (!isRenderCall || $viewsSettings.useViews || tmpl.useViews || view && view !== topView) {\n\t\t\tresult = renderWithViews(tmpl, data, context, noIteration, view, key, onRender, tag);\n\t\t} else {\n\t\t\tif (view) { // In a block\n\t\t\t\tprevData = view.data;\n\t\t\t\tprevIndex = view.index;\n\t\t\t\tview.index = indexStr;\n\t\t\t} else {\n\t\t\t\tview = topView;\n\t\t\t\tview.data = data;\n\t\t\t\tview.ctx = context;\n\t\t\t}\n\t\t\tif ($isArray(data) && !noIteration) {\n\t\t\t\t// Create a view for the array, whose child views correspond to each data item. (Note: if key and parentView are passed in\n\t\t\t\t// along with parent view, treat as insert -e.g. from view.addViews - so parentView is already the view item for array)\n\t\t\t\tfor (i = 0, l = data.length; i < l; i++) {\n\t\t\t\t\tview.index = i;\n\t\t\t\t\tview.data = data[i];\n\t\t\t\t\tresult += tmpl.fn(data[i], view, $views);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult += tmpl.fn(data, view, $views);\n\t\t\t}\n\t\t\tview.data = prevData;\n\t\t\tview.index = prevIndex;\n\t\t}\n\t\tif (isTopRenderCall) {\n\t\t\tisRenderCall = undefined;\n\t\t}\n\t}\n\treturn result;\n}\n\nfunction renderWithViews(tmpl, data, context, noIteration, view, key, onRender, tag) {\n\tfunction setItemVar(item) {\n\t\t// When itemVar is specified, set modified ctx with user-named ~item\n\t\tnewCtx = $extend({}, context);\n\t\tnewCtx[itemVar] = item;\n\t}\n\n\t// Render template against data as a tree of subviews (nested rendered template instances), or as a string (top-level template).\n\t// If the data is the parent view, treat as noIteration, re-render with the same data context.\n\tvar i, l, newView, childView, itemResult, swapContent, contentTmpl, outerOnRender, tmplName, itemVar, newCtx, tagCtx,\n\t\tresult=\"\" ;\n\n\tif (tag) {\n\t\t// This is a call from renderTag or tagCtx.render(...)\n\t\ttmplName = tag.tagName;\n\t\ttagCtx = tag.tagCtx;\n\t\tcontext = context ? extendCtx(context, tag.ctx) : tag.ctx;\n\t\tcontentTmpl = tagCtx.content;\n\t\tif (tagCtx.props.link === false) {\n\t\t\t// link=false setting on block tag\n\t\t\t// We will override inherited value of link by the explicit setting link=false taken from props\n\t\t\t// The child views of an unlinked view are also unlinked. So setting child back to true will not have any effect.\n\t\t\tcontext = context || {};\n\t\t\tcontext.link = false;\n\t\t}\n\t\tif (itemVar = tagCtx.props.itemVar) {\n\t\t\tif (itemVar.charAt(0) !== \"~\") {\n\t\t\t\tsyntaxError(\"Use itemVar='~myItem'\");\n\t\t\t}\n\t\t\titemVar = itemVar.slice(1);\n\t\t}\n\t}\n\n\tif (view) {\n\t\tcontentTmpl = contentTmpl || view.content; // The wrapped content - to be added as #content property on views, below\n\t\tonRender = onRender || view._.onRender;\n\t\tcontext = extendCtx(context, view.ctx);\n\t}\n\n\tif (key === true) {\n\t\tswapContent = true;\n\t\tkey = 0;\n\t}\n\n\t// If link===false, do not call onRender, so no data-linking marker nodes\n\tif (onRender && (context && context.link === false || tag && tag._.noVws)) {\n\t\tonRender = undefined;\n\t}\n\touterOnRender = onRender;\n\tif (onRender === true) {\n\t\t// Used by view.refresh(). Don't create a new wrapper view.\n\t\touterOnRender = undefined;\n\t\tonRender = view._.onRender;\n\t}\n\t// Set additional context on views created here, (as modified context inherited from the parent, and to be inherited by child views)\n\tcontext = tmpl.helpers\n\t\t? extendCtx(tmpl.helpers, context)\n\t\t: context;\n\n\tnewCtx = context;\n\tif ($isArray(data) && !noIteration) {\n\t\t// Create a view for the array, whose child views correspond to each data item. (Note: if key and view are passed in\n\t\t// along with parent view, treat as insert -e.g. from view.addViews - so view is already the view item for array)\n\t\tnewView = swapContent\n\t\t\t? view\n\t\t\t: (key !== undefined && view)\n\t\t\t\t|| new View(context, \"array\", view, data, tmpl, key, contentTmpl, onRender);\n\t\tif (itemVar) {\n\t\t\tnewView.it = itemVar;\n\t\t}\n\t\titemVar = newView.it;\n\t\tfor (i = 0, l = data.length; i < l; i++) {\n\t\t\t// Create a view for each data item.\n\t\t\tif (itemVar) {\n\t\t\t\tsetItemVar(data[i]); // use modified ctx with user-named ~item\n\t\t\t}\n\t\t\tchildView = new View(newCtx, \"item\", newView, data[i], tmpl, (key || 0) + i, contentTmpl, onRender);\n\n\t\t\titemResult = tmpl.fn(data[i], childView, $views);\n\t\t\tresult += newView._.onRender ? newView._.onRender(itemResult, childView) : itemResult;\n\t\t}\n\t} else {\n\t\t// Create a view for singleton data object. The type of the view will be the tag name, e.g. \"if\" or \"myTag\" except for\n\t\t// \"item\", \"array\" and \"data\" views. A \"data\" view is from programmatic render(object) against a 'singleton'.\n\t\tif (itemVar) {\n\t\t\tsetItemVar(data);\n\t\t}\n\t\tnewView = swapContent ? view : new View(newCtx, tmplName || \"data\", view, data, tmpl, key, contentTmpl, onRender);\n\t\tif (tag && !tag.flow) {\n\t\t\tnewView.tag = tag;\n\t\t}\n\t\tresult += tmpl.fn(data, newView, $views);\n\t}\n\treturn outerOnRender ? outerOnRender(result, newView) : result;\n}\n\n//===========================\n// Build and compile template\n//===========================\n\n// Generate a reusable function that will serve to render a template against data\n// (Compile AST then build template function)\n\nfunction error(e, view, fallback) {\n\tvar message = $viewsSettings.onError(e, view, fallback);\n\tif (\"\" + e === e) { // if e is a string, not an Exception, then throw new Exception\n\t\tthrow new $sub.Err(message);\n\t}\n\treturn !view.linkCtx && view.linked ? $converters.html(message) : message;\n}\n\nfunction syntaxError(message) {\n\terror(\"Syntax error\\n\" + message);\n}\n\nfunction tmplFn(markup, tmpl, isLinkExpr, convertBack, hasElse) {\n\t// Compile markup to AST (abtract syntax tree) then build the template function code from the AST nodes\n\t// Used for compiling templates, and also by JsViews to build functions for data link expressions\n\n\t//==== nested functions ====\n\tfunction pushprecedingContent(shift) {\n\t\tshift -= loc;\n\t\tif (shift) {\n\t\t\tcontent.push(markup.substr(loc, shift).replace(rNewLine, \"\\\\n\"));\n\t\t}\n\t}\n\n\tfunction blockTagCheck(tagName, block) {\n\t\tif (tagName) {\n\t\t\ttagName += '}}';\n\t\t\t//\t\t\t'{{include}} block has {{/for}} with no open {{for}}'\n\t\t\tsyntaxError((\n\t\t\t\tblock\n\t\t\t\t\t? '{{' + block + '}} block has {{/' + tagName + ' without {{' + tagName\n\t\t\t\t\t: 'Unmatched or missing {{/' + tagName) + ', in template:\\n' + markup);\n\t\t}\n\t}\n\n\tfunction parseTag(all, bind, tagName, converter, colon, html, comment, codeTag, params, slash, closeBlock, index) {\n\n\t\t//    bind         tag        converter colon html     comment            code      params            slash   closeBlock\n\t\t// /{(\\^)?{(?:(?:(\\w+(?=[\\/\\s}]))|(?:(\\w+)?(:)|(>)|!--((?:[^-]|-(?!-))*)--|(\\*)))\\s*((?:[^}]|}(?!}))*?)(\\/)?|(?:\\/(\\w+)))}}/g\n\t\t// Build abstract syntax tree (AST): [tagName, converter, params, content, hash, bindings, contentMarkup]\n\t\tif (html) {\n\t\t\tcolon = \":\";\n\t\t\tconverter = HTML;\n\t\t}\n\t\tslash = slash || isLinkExpr && !hasElse;\n\n\t\tvar pathBindings = (bind || isLinkExpr) && [[]],\n\t\t\tprops = \"\",\n\t\t\targs = \"\",\n\t\t\tctxProps = \"\",\n\t\t\tparamsArgs = \"\",\n\t\t\tparamsProps = \"\",\n\t\t\tparamsCtxProps = \"\",\n\t\t\tonError = \"\",\n\t\t\tuseTrigger = \"\",\n\t\t\t// Block tag if not self-closing and not {{:}} or {{>}} (special case) and not a data-link expression\n\t\t\tblock = !slash && !colon && !comment;\n\n\t\t//==== nested helper function ====\n\t\ttagName = tagName || (params = params || \"#data\", colon); // {{:}} is equivalent to {{:#data}}\n\t\tpushprecedingContent(index);\n\t\tloc = index + all.length; // location marker - parsed up to here\n\t\tif (codeTag) {\n\t\t\tif (allowCode) {\n\t\t\t\tcontent.push([\"*\", \"\\n\" + params.replace(/^:/, \"ret+= \").replace(rUnescapeQuotes, \"$1\") + \";\\n\"]);\n\t\t\t}\n\t\t} else if (tagName) {\n\t\t\tif (tagName === \"else\") {\n\t\t\t\tif (rTestElseIf.test(params)) {\n\t\t\t\t\tsyntaxError('for \"{{else if expr}}\" use \"{{else expr}}\"');\n\t\t\t\t}\n\t\t\t\tpathBindings = current[7] && [[]];\n\t\t\t\tcurrent[8] = markup.substring(current[8], index); // contentMarkup for block tag\n\t\t\t\tcurrent = stack.pop();\n\t\t\t\tcontent = current[2];\n\t\t\t\tblock = true;\n\t\t\t}\n\t\t\tif (params) {\n\t\t\t\t// remove newlines from the params string, to avoid compiled code errors for unterminated strings\n\t\t\t\tparseParams(params.replace(rNewLine, \" \"), pathBindings, tmpl)\n\t\t\t\t\t.replace(rBuildHash, function(all, onerror, isCtx, key, keyToken, keyValue, arg, param) {\n\t\t\t\t\t\tkey = \"'\" + keyToken + \"':\";\n\t\t\t\t\t\tif (arg) {\n\t\t\t\t\t\t\targs += keyValue + \",\";\n\t\t\t\t\t\t\tparamsArgs += \"'\" + param + \"',\";\n\t\t\t\t\t\t} else if (isCtx) {\n\t\t\t\t\t\t\tctxProps += key + keyValue + \",\";\n\t\t\t\t\t\t\tparamsCtxProps += key + \"'\" + param + \"',\";\n\t\t\t\t\t\t} else if (onerror) {\n\t\t\t\t\t\t\tonError += keyValue;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (keyToken === \"trigger\") {\n\t\t\t\t\t\t\t\tuseTrigger += keyValue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tprops += key + keyValue + \",\";\n\t\t\t\t\t\t\tparamsProps += key + \"'\" + param + \"',\";\n\t\t\t\t\t\t\thasHandlers = hasHandlers || rHasHandlers.test(keyToken);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t}).slice(0, -1);\n\t\t\t}\n\n\t\t\tif (pathBindings && pathBindings[0]) {\n\t\t\t\tpathBindings.pop(); // Remove the bindings that was prepared for next arg. (There is always an extra one ready).\n\t\t\t}\n\n\t\t\tnewNode = [\n\t\t\t\t\ttagName,\n\t\t\t\t\tconverter || !!convertBack || hasHandlers || \"\",\n\t\t\t\t\tblock && [],\n\t\t\t\t\tparsedParam(paramsArgs, paramsProps, paramsCtxProps),\n\t\t\t\t\tparsedParam(args, props, ctxProps),\n\t\t\t\t\tonError,\n\t\t\t\t\tuseTrigger,\n\t\t\t\t\tpathBindings || 0\n\t\t\t\t];\n\t\t\tcontent.push(newNode);\n\t\t\tif (block) {\n\t\t\t\tstack.push(current);\n\t\t\t\tcurrent = newNode;\n\t\t\t\tcurrent[8] = loc; // Store current location of open tag, to be able to add contentMarkup when we reach closing tag\n\t\t\t}\n\t\t} else if (closeBlock) {\n\t\t\tblockTagCheck(closeBlock !== current[0] && current[0] !== \"else\" && closeBlock, current[0]);\n\t\t\tcurrent[8] = markup.substring(current[8], index); // contentMarkup for block tag\n\t\t\tcurrent = stack.pop();\n\t\t}\n\t\tblockTagCheck(!current && closeBlock);\n\t\tcontent = current[2];\n\t}\n\t//==== /end of nested functions ====\n\n\tvar result, newNode, hasHandlers,\n\t\tallowCode = $viewsSettings.allowCode || tmpl && tmpl.allowCode,\n\t\tastTop = [],\n\t\tloc = 0,\n\t\tstack = [],\n\t\tcontent = astTop,\n\t\tcurrent = [,,astTop];\n\n\tif (allowCode) {\n\t\ttmpl.allowCode = allowCode;\n\t}\n\n//TODO\tresult = tmplFnsCache[markup]; // Only cache if template is not named and markup length < ...,\n//and there are no bindings or subtemplates?? Consider standard optimization for data-link=\"a.b.c\"\n//\t\tif (result) {\n//\t\t\ttmpl.fn = result;\n//\t\t} else {\n\n//\t\tresult = markup;\n\tif (isLinkExpr) {\n\t\tmarkup = delimOpenChar0 + markup + delimCloseChar1;\n\t}\n\n\tblockTagCheck(stack[0] && stack[0][2].pop()[0]);\n\t// Build the AST (abstract syntax tree) under astTop\n\tmarkup.replace(rTag, parseTag);\n\n\tpushprecedingContent(markup.length);\n\n\tif (loc = astTop[astTop.length - 1]) {\n\t\tblockTagCheck(\"\" + loc !== loc && (+loc[8] === loc[8]) && loc[0]);\n\t}\n//\t\t\tresult = tmplFnsCache[markup] = buildCode(astTop, tmpl);\n//\t\t}\n\n\tif (isLinkExpr) {\n\t\tresult = buildCode(astTop, markup, isLinkExpr);\n\t\tsetPaths(result, [astTop[0][7]]); // With data-link expressions, pathBindings array is astTop[0][7]\n\t} else {\n\t\tresult = buildCode(astTop, tmpl);\n\t}\n\treturn result;\n}\n\nfunction setPaths(fn, pathsArr) {\n\tvar key, paths,\n\t\ti = 0,\n\t\tl = pathsArr.length;\n\tfn.deps = [];\n\tfor (; i < l; i++) {\n\t\tpaths = pathsArr[i];\n\t\tfor (key in paths) {\n\t\t\tif (key !== \"_jsvto\" && paths[key].length) {\n\t\t\t\tfn.deps = fn.deps.concat(paths[key]); // deps is the concatenation of the paths arrays for the different bindings\n\t\t\t}\n\t\t}\n\t}\n\tfn.paths = paths; // The array of paths arrays for the different bindings\n}\n\nfunction parsedParam(args, props, ctx) {\n\treturn [args.slice(0, -1), props.slice(0, -1), ctx.slice(0, -1)];\n}\n\nfunction paramStructure(parts, type) {\n\treturn '\\n\\t'\n\t\t+ (type\n\t\t\t? type + ':{'\n\t\t\t: '')\n\t\t+ 'args:[' + parts[0] + ']'\n\t\t+ (parts[1] || !type\n\t\t\t? ',\\n\\tprops:{' + parts[1] + '}'\n\t\t\t: \"\")\n\t\t+ (parts[2] ? ',\\n\\tctx:{' + parts[2] + '}' : \"\");\n}\n\nfunction parseParams(params, pathBindings, tmpl) {\n\n\tfunction parseTokens(all, lftPrn0, lftPrn, bound, path, operator, err, eq, path2, prn, comma, lftPrn2, apos, quot, rtPrn, rtPrnDot, prn2, space, index, full) {\n\t// /(\\()(?=\\s*\\()|(?:([([])\\s*)?(?:(\\^?)(!*?[#~]?[\\w$.^]+)?\\s*((\\+\\+|--)|\\+|-|&&|\\|\\||===|!==|==|!=|<=|>=|[<>%*:?\\/]|(=))\\s*|(!*?[#~]?[\\w$.^]+)([([])?)|(,\\s*)|(\\(?)\\\\?(?:(')|(\"))|(?:\\s*(([)\\]])(?=\\s*[.^]|\\s*$|\\s)|[)\\]])([([]?))|(\\s+)/g,\n\t//   lftPrn0        lftPrn        bound            path    operator err                                                eq             path2       prn    comma   lftPrn2   apos quot      rtPrn rtPrnDot                    prn2  space\n\t\t// (left paren? followed by (path? followed by operator) or (path followed by paren?)) or comma or apos or quot or right paren or space\n\t\tbound = bindings && bound;\n\t\tif (bound && !eq) {\n\t\t\tpath = bound + path; // e.g. some.fn(...)^some.path - so here path is \"^some.path\"\n\t\t}\n\t\toperator = operator || \"\";\n\t\tlftPrn = lftPrn || lftPrn0 || lftPrn2;\n\t\tpath = path || path2;\n\t\t// Could do this - but not worth perf cost?? :-\n\t\t// if (!path.lastIndexOf(\"#data.\", 0)) { path = path.slice(6); } // If path starts with \"#data.\", remove that.\n\t\tprn = prn || prn2 || \"\";\n\n\t\tvar expr, exprFn, binds, theOb, newOb;\n\n\t\tfunction parsePath(allPath, not, object, helper, view, viewProperty, pathTokens, leafToken) {\n\t\t\t// rPath = /^(?:null|true|false|\\d[\\d.]*|(!*?)([\\w$]+|\\.|~([\\w$]+)|#(view|([\\w$]+))?)([\\w$.^]*?)(?:[.[^]([\\w$]+)\\]?)?)$/g,\n\t\t\t//                                        none   object     helper    view  viewProperty pathTokens      leafToken\n\t\t\tvar subPath = object === \".\";\n\t\t\tif (object) {\n\t\t\t\tpath = path.slice(not.length);\n\t\t\t\tif (!subPath) {\n\t\t\t\t\tallPath = (helper\n\t\t\t\t\t\t\t? 'view.hlp(\"' + helper + '\")'\n\t\t\t\t\t\t\t: view\n\t\t\t\t\t\t\t\t? \"view\"\n\t\t\t\t\t\t\t\t: \"data\")\n\t\t\t\t\t\t+ (leafToken\n\t\t\t\t\t\t\t? (viewProperty\n\t\t\t\t\t\t\t\t? \".\" + viewProperty\n\t\t\t\t\t\t\t\t: helper\n\t\t\t\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t\t\t\t: (view ? \"\" : \".\" + object)\n\t\t\t\t\t\t\t\t) + (pathTokens || \"\")\n\t\t\t\t\t\t\t: (leafToken = helper ? \"\" : view ? viewProperty || \"\" : object, \"\"));\n\n\t\t\t\t\tallPath = allPath + (leafToken ? \".\" + leafToken : \"\");\n\n\t\t\t\t\tallPath = not + (allPath.slice(0, 9) === \"view.data\"\n\t\t\t\t\t\t? allPath.slice(5) // convert #view.data... to data...\n\t\t\t\t\t\t: allPath);\n\t\t\t\t}\n\t\t\t\tif (bindings) {\n\t\t\t\t\tbinds = named === \"linkTo\" ? (bindto = pathBindings._jsvto = pathBindings._jsvto || []) : bndCtx.bd;\n\t\t\t\t\tif (theOb = subPath && binds[binds.length-1]) {\n\t\t\t\t\t\tif (theOb._jsv) {\n\t\t\t\t\t\t\twhile (theOb.sb) {\n\t\t\t\t\t\t\t\ttheOb = theOb.sb;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (theOb.bnd) {\n\t\t\t\t\t\t\t\tpath = \"^\" + path.slice(1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttheOb.sb = path;\n\t\t\t\t\t\t\ttheOb.bnd = theOb.bnd || path.charAt(0) === \"^\";\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbinds.push(path);\n\t\t\t\t\t}\n\t\t\t\t\tpathStart[parenDepth] = index + (subPath ? 1 : 0);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn allPath;\n\t\t}\n\n\t\tif (err && !aposed && !quoted) {\n\t\t\tsyntaxError(params);\n\t\t} else {\n\t\t\tif (bindings && rtPrnDot && !aposed && !quoted) {\n\t\t\t\t// This is a binding to a path in which an object is returned by a helper/data function/expression, e.g. foo()^x.y or (a?b:c)^x.y\n\t\t\t\t// We create a compiled function to get the object instance (which will be called when the dependent data of the subexpression changes, to return the new object, and trigger re-binding of the subsequent path)\n\t\t\t\tif (!named || boundName || bindto) {\n\t\t\t\t\texpr = pathStart[parenDepth - 1];\n\t\t\t\t\tif (full.length - 1 > index - (expr || 0)) { // We need to compile a subexpression\n\t\t\t\t\t\texpr = full.slice(expr, index + all.length);\n\t\t\t\t\t\tif (exprFn !== true) { // If not reentrant call during compilation\n\t\t\t\t\t\t\tbinds = bindto || bndStack[parenDepth-1].bd;\n\t\t\t\t\t\t\t// Insert exprOb object, to be used during binding to return the computed object\n\t\t\t\t\t\t\ttheOb = binds[binds.length-1];\n\t\t\t\t\t\t\tif (theOb && theOb.prm) {\n\t\t\t\t\t\t\t\twhile (theOb.sb && theOb.sb.prm) {\n\t\t\t\t\t\t\t\t\ttheOb = theOb.sb;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tnewOb = theOb.sb = {path: theOb.sb, bnd: theOb.bnd};\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbinds.push(newOb = {path: binds.pop()}); // Insert exprOb object, to be used during binding to return the computed object\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t // (e.g. \"some.object()\" in \"some.object().a.b\" - to be used as context for binding the following tokens \"a.b\")\n\t\t\t\t\t\t}\n\t\t\t\t\t\trtPrnDot = delimOpenChar1 + \":\" + expr // The parameter or function subexpression\n\t\t\t\t\t\t\t+ \" onerror=''\" // set onerror='' in order to wrap generated code with a try catch - returning '' as object instance if there is an error/missing parent\n\t\t\t\t\t\t\t+ delimCloseChar0;\n\t\t\t\t\t\texprFn = tmplLinks[rtPrnDot];\n\t\t\t\t\t\tif (!exprFn) {\n\t\t\t\t\t\t\ttmplLinks[rtPrnDot] = true; // Flag that this exprFn (for rtPrnDot) is being compiled\n\t\t\t\t\t\t\ttmplLinks[rtPrnDot] = exprFn = tmplFn(rtPrnDot, tmpl, true); // Compile the expression (or use cached copy already in tmpl.links)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (exprFn !== true && newOb) {\n\t\t\t\t\t\t\t// If not reentrant call during compilation\n\t\t\t\t\t\t\tnewOb._jsv = exprFn;\n\t\t\t\t\t\t\tnewOb.prm = bndCtx.bd;\n\t\t\t\t\t\t\tnewOb.bnd = newOb.bnd || newOb.path && newOb.path.indexOf(\"^\") >= 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn (aposed\n\t\t\t\t// within single-quoted string\n\t\t\t\t? (aposed = !apos, (aposed ? all : lftPrn2 + '\"'))\n\t\t\t\t: quoted\n\t\t\t\t// within double-quoted string\n\t\t\t\t\t? (quoted = !quot, (quoted ? all : lftPrn2 + '\"'))\n\t\t\t\t\t:\n\t\t\t\t(\n\t\t\t\t\t(lftPrn\n\t\t\t\t\t\t? (pathStart[parenDepth] = index++, bndCtx = bndStack[++parenDepth] = {bd: []}, lftPrn)\n\t\t\t\t\t\t: \"\")\n\t\t\t\t\t+ (space\n\t\t\t\t\t\t? (parenDepth\n\t\t\t\t\t\t\t? \"\"\n\t\t\t\t// New arg or prop - so insert backspace \\b (\\x08) as separator for named params, used subsequently by rBuildHash, and prepare new bindings array\n\t\t\t\t\t\t\t: (paramIndex = full.slice(paramIndex, index), named\n\t\t\t\t\t\t\t\t? (named = boundName = bindto = false, \"\\b\")\n\t\t\t\t\t\t\t\t: \"\\b,\") + paramIndex + (paramIndex = index + all.length, bindings && pathBindings.push(bndCtx.bd = []), \"\\b\")\n\t\t\t\t\t\t)\n\t\t\t\t\t\t: eq\n\t\t\t\t// named param. Remove bindings for arg and create instead bindings array for prop\n\t\t\t\t\t\t\t? (parenDepth && syntaxError(params), bindings && pathBindings.pop(), named = path, boundName = bound, paramIndex = index + all.length, bound && (bindings = bndCtx.bd = pathBindings[named] = []), path + ':')\n\t\t\t\t\t\t\t: path\n\t\t\t\t// path\n\t\t\t\t\t\t\t\t? (path.split(\"^\").join(\".\").replace(rPath, parsePath)\n\t\t\t\t\t\t\t\t\t+ (prn\n\t\t\t\t// some.fncall(\n\t\t\t\t\t\t\t\t\t\t? (bndCtx = bndStack[++parenDepth] = {bd: []}, fnCall[parenDepth] = true, prn)\n\t\t\t\t\t\t\t\t\t\t: operator)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t: operator\n\t\t\t\t// operator\n\t\t\t\t\t\t\t\t\t? operator\n\t\t\t\t\t\t\t\t\t: rtPrn\n\t\t\t\t// function\n\t\t\t\t\t\t\t\t\t\t? ((fnCall[parenDepth] = false, bndCtx = bndStack[--parenDepth], rtPrn)\n\t\t\t\t\t\t\t\t\t\t\t+ (prn // rtPrn and prn, e.g )( in (a)() or a()(), or )[ in a()[]\n\t\t\t\t\t\t\t\t\t\t\t\t? (bndCtx = bndStack[++parenDepth], fnCall[parenDepth] = true, prn)\n\t\t\t\t\t\t\t\t\t\t\t\t: \"\")\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t: comma\n\t\t\t\t\t\t\t\t\t\t\t? (fnCall[parenDepth] || syntaxError(params), \",\") // We don't allow top-level literal arrays or objects\n\t\t\t\t\t\t\t\t\t\t\t: lftPrn0\n\t\t\t\t\t\t\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t\t\t\t\t\t\t: (aposed = apos, quoted = quot, '\"')\n\t\t\t\t))\n\t\t\t);\n\t\t}\n\t}\n\n\tvar named, bindto, boundName,\n\t\tquoted, // boolean for string content in double quotes\n\t\taposed, // or in single quotes\n\t\tbindings = pathBindings && pathBindings[0], // bindings array for the first arg\n\t\tbndCtx = {bd: bindings},\n\t\tbndStack = {0: bndCtx},\n\t\tparamIndex = 0, // list,\n\t\ttmplLinks = tmpl ? tmpl.links : bindings && (bindings.links = bindings.links || {}),\n\t\t// The following are used for tracking path parsing including nested paths, such as \"a.b(c^d + (e))^f\", and chained computed paths such as\n\t\t// \"a.b().c^d().e.f().g\" - which has four chained paths, \"a.b()\", \"^c.d()\", \".e.f()\" and \".g\"\n\t\tparenDepth = 0,\n\t\tfnCall = {}, // We are in a function call\n\t\tpathStart = {}, // tracks the start of the current path such as c^d() in the above example\n\t\tresult = (params + (tmpl ? \" \" : \"\")).replace(rParams, parseTokens);\n\n\treturn !parenDepth && result || syntaxError(params); // Syntax error if unbalanced parens in params expression\n}\n\nfunction buildCode(ast, tmpl, isLinkExpr) {\n\t// Build the template function code from the AST nodes, and set as property on the passed-in template object\n\t// Used for compiling templates, and also by JsViews to build functions for data link expressions\n\tvar i, node, tagName, converter, tagCtx, hasTag, hasEncoder, getsVal, hasCnvt, useCnvt, tmplBindings, pathBindings, params, boundOnErrStart, boundOnErrEnd,\n\t\ttagRender, nestedTmpls, tmplName, nestedTmpl, tagAndElses, content, markup, nextIsElse, oldCode, isElse, isGetVal, tagCtxFn, onError, tagStart, trigger,\n\t\ttmplBindingKey = 0,\n\t\tuseViews = $viewsSettings.useViews || tmpl.useViews || tmpl.tags || tmpl.templates || tmpl.helpers || tmpl.converters,\n\t\tcode = \"\",\n\t\ttmplOptions = {},\n\t\tl = ast.length;\n\n\tif (\"\" + tmpl === tmpl) {\n\t\ttmplName = isLinkExpr ? 'data-link=\"' + tmpl.replace(rNewLine, \" \").slice(1, -1) + '\"' : tmpl;\n\t\ttmpl = 0;\n\t} else {\n\t\ttmplName = tmpl.tmplName || \"unnamed\";\n\t\tif (tmpl.allowCode) {\n\t\t\ttmplOptions.allowCode = true;\n\t\t}\n\t\tif (tmpl.debug) {\n\t\t\ttmplOptions.debug = true;\n\t\t}\n\t\ttmplBindings = tmpl.bnds;\n\t\tnestedTmpls = tmpl.tmpls;\n\t}\n\tfor (i = 0; i < l; i++) {\n\t\t// AST nodes: [0: tagName, 1: converter, 2: content, 3: params, 4: code, 5: onError, 6: trigger, 7:pathBindings, 8: contentMarkup]\n\t\tnode = ast[i];\n\n\t\t// Add newline for each callout to t() c() etc. and each markup string\n\t\tif (\"\" + node === node) {\n\t\t\t// a markup string to be inserted\n\t\t\tcode += '\\n+\"' + node + '\"';\n\t\t} else {\n\t\t\t// a compiled tag expression to be inserted\n\t\t\ttagName = node[0];\n\t\t\tif (tagName === \"*\") {\n\t\t\t\t// Code tag: {{* }}\n\t\t\t\tcode += \";\\n\" + node[1] + \"\\nret=ret\";\n\t\t\t} else {\n\t\t\t\tconverter = node[1];\n\t\t\t\tcontent = !isLinkExpr && node[2];\n\t\t\t\ttagCtx = paramStructure(node[3], 'params') + '},' + paramStructure(params = node[4]);\n\t\t\t\tonError = node[5];\n\t\t\t\ttrigger = node[6];\n\t\t\t\tmarkup = node[8] && node[8].replace(rUnescapeQuotes, \"$1\");\n\t\t\t\tif (isElse = tagName === \"else\") {\n\t\t\t\t\tif (pathBindings) {\n\t\t\t\t\t\tpathBindings.push(node[7]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttmplBindingKey = 0;\n\t\t\t\t\tif (tmplBindings && (pathBindings = node[7])) { // Array of paths, or false if not data-bound\n\t\t\t\t\t\tpathBindings = [pathBindings];\n\t\t\t\t\t\ttmplBindingKey = tmplBindings.push(1); // Add placeholder in tmplBindings for compiled function\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tuseViews = useViews || params[1] || params[2] || pathBindings || /view.(?!index)/.test(params[0]);\n\t\t\t\t// useViews is for perf optimization. For render() we only use views if necessary - for the more advanced scenarios.\n\t\t\t\t// We use views if there are props, contextual properties or args with #... (other than #index) - but you can force\n\t\t\t\t// using the full view infrastructure, (and pay a perf price) by opting in: Set useViews: true on the template, manually...\n\t\t\t\tif (isGetVal = tagName === \":\") {\n\t\t\t\t\tif (converter) {\n\t\t\t\t\t\ttagName = converter === HTML ? \">\" : converter + tagName;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (content) { // TODO optimize - if content.length === 0 or if there is a tmpl=\"...\" specified - set content to null / don't run this compilation code - since content won't get used!!\n\t\t\t\t\t\t// Create template object for nested template\n\t\t\t\t\t\tnestedTmpl = tmplObject(markup, tmplOptions);\n\t\t\t\t\t\tnestedTmpl.tmplName = tmplName + \"/\" + tagName;\n\t\t\t\t\t\t// Compile to AST and then to compiled function\n\t\t\t\t\t\tnestedTmpl.useViews = nestedTmpl.useViews || useViews;\n\t\t\t\t\t\tbuildCode(content, nestedTmpl);\n\t\t\t\t\t\tuseViews = nestedTmpl.useViews;\n\t\t\t\t\t\tnestedTmpls.push(nestedTmpl);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!isElse) {\n\t\t\t\t\t\t// This is not an else tag.\n\t\t\t\t\t\ttagAndElses = tagName;\n\t\t\t\t\t\tuseViews = useViews || tagName && (!$tags[tagName] || !$tags[tagName].flow);\n\t\t\t\t\t\t// Switch to a new code string for this bound tag (and its elses, if it has any) - for returning the tagCtxs array\n\t\t\t\t\t\toldCode = code;\n\t\t\t\t\t\tcode = \"\";\n\t\t\t\t\t}\n\t\t\t\t\tnextIsElse = ast[i + 1];\n\t\t\t\t\tnextIsElse = nextIsElse && nextIsElse[0] === \"else\";\n\t\t\t\t}\n\t\t\t\ttagStart = onError ? \";\\ntry{\\nret+=\" : \"\\n+\";\n\t\t\t\tboundOnErrStart = \"\";\n\t\t\t\tboundOnErrEnd = \"\";\n\n\t\t\t\tif (isGetVal && (pathBindings || trigger || converter && converter !== HTML)) {\n\t\t\t\t\t// For convertVal we need a compiled function to return the new tagCtx(s)\n\t\t\t\t\ttagCtxFn = \"return {\" + tagCtx + \"};\";\n\t\t\t\t\ttagRender = 'c(\"' + converter + '\",view,';\n\t\t\t\t\ttagCtxFn = new Function(\"data,view,j,u\", \" // \" + tmplName + \" \" + tmplBindingKey + \" \" + tagName\n\t\t\t\t\t\t\t\t\t\t+ \"\\n\" + tagCtxFn);\n\t\t\t\t\ttagCtxFn._er = onError;\n\n\t\t\t\t\tboundOnErrStart = tagRender + tmplBindingKey + \",\";\n\t\t\t\t\tboundOnErrEnd = \")\";\n\n\t\t\t\t\ttagCtxFn._tag = tagName;\n\t\t\t\t\tif (isLinkExpr) {\n\t\t\t\t\t\treturn tagCtxFn;\n\t\t\t\t\t}\n\t\t\t\t\tsetPaths(tagCtxFn, pathBindings);\n\t\t\t\t\tuseCnvt = true;\n\t\t\t\t}\n\t\t\t\tcode += (isGetVal\n\t\t\t\t\t? (isLinkExpr ? (onError ? \"\\ntry{\\n\" : \"\") + \"return \" : tagStart) + (useCnvt // Call _cnvt if there is a converter: {{cnvt: ... }} or {^{cnvt: ... }}\n\t\t\t\t\t\t? (useCnvt = undefined, useViews = hasCnvt = true, tagRender + (pathBindings\n\t\t\t\t\t\t\t? ((tmplBindings[tmplBindingKey - 1] = tagCtxFn), tmplBindingKey) // Store the compiled tagCtxFn in tmpl.bnds, and pass the key to convertVal()\n\t\t\t\t\t\t\t: \"{\" + tagCtx + \"}\") + \")\")\n\t\t\t\t\t\t: tagName === \">\"\n\t\t\t\t\t\t\t? (hasEncoder = true, \"h(\" + params[0] + ')')\n\t\t\t\t\t\t\t: (getsVal = true, \"((v=\" + (params[0] || 'data') + ')!=null?v:\"\")') // Strict equality just for data-link=\"title{:expr}\" so expr=null will remove title attribute\n\t\t\t\t\t)\n\t\t\t\t\t: (hasTag = true, \"\\n{view:view,tmpl:\" // Add this tagCtx to the compiled code for the tagCtxs to be passed to renderTag()\n\t\t\t\t\t\t+ (content ? nestedTmpls.length : \"0\") + \",\" // For block tags, pass in the key (nestedTmpls.length) to the nested content template\n\t\t\t\t\t\t+ tagCtx + \"},\"));\n\n\t\t\t\tif (tagAndElses && !nextIsElse) {\n\t\t\t\t\t// This is a data-link expression or an inline tag without any elses, or the last {{else}} of an inline tag\n\t\t\t\t\t// We complete the code for returning the tagCtxs array\n\t\t\t\t\tcode = \"[\" + code.slice(0, -1) + \"]\";\n\t\t\t\t\ttagRender = 't(\"' + tagAndElses + '\",view,this,';\n\t\t\t\t\tif (isLinkExpr || pathBindings) {\n\t\t\t\t\t\t// This is a bound tag (data-link expression or inline bound tag {^{tag ...}}) so we store a compiled tagCtxs function in tmp.bnds\n\t\t\t\t\t\tcode = new Function(\"data,view,j,u\", \" // \" + tmplName + \" \" + tmplBindingKey + \" \" + tagAndElses + \"\\nreturn \" + code + \";\");\n\t\t\t\t\t\tcode._er = onError;\n\t\t\t\t\t\tcode._tag = tagAndElses;\n\t\t\t\t\t\tif (pathBindings) {\n\t\t\t\t\t\t\tsetPaths(tmplBindings[tmplBindingKey - 1] = code, pathBindings);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (isLinkExpr) {\n\t\t\t\t\t\t\treturn code; // For a data-link expression we return the compiled tagCtxs function\n\t\t\t\t\t\t}\n\t\t\t\t\t\tboundOnErrStart = tagRender + tmplBindingKey + \",undefined,\";\n\t\t\t\t\t\tboundOnErrEnd = \")\";\n\t\t\t\t\t}\n\n\t\t\t\t\t// This is the last {{else}} for an inline tag.\n\t\t\t\t\t// For a bound tag, pass the tagCtxs fn lookup key to renderTag.\n\t\t\t\t\t// For an unbound tag, include the code directly for evaluating tagCtxs array\n\t\t\t\t\tcode = oldCode + tagStart + tagRender + (tmplBindingKey || code) + \")\";\n\t\t\t\t\tpathBindings = 0;\n\t\t\t\t\ttagAndElses = 0;\n\t\t\t\t}\n\t\t\t\tif (onError) {\n\t\t\t\t\tuseViews = true;\n\t\t\t\t\tcode += ';\\n}catch(e){ret' + (isLinkExpr ? \"urn \" : \"+=\") + boundOnErrStart + 'j._err(e,view,' + onError + ')' + boundOnErrEnd + ';}\\n' + (isLinkExpr ? \"\" : 'ret=ret');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Include only the var references that are needed in the code\n\tcode = \"// \" + tmplName\n\n\t\t+ \"\\nvar v\"\n\t\t+ (hasTag ? \",t=j._tag\" : \"\")                // has tag\n\t\t+ (hasCnvt ? \",c=j._cnvt\" : \"\")              // converter\n\t\t+ (hasEncoder ? \",h=j.converters.html\" : \"\") // html converter\n\t\t+ (isLinkExpr ? \";\\n\" : ',ret=\"\"\\n')\n\t\t+ (tmplOptions.debug ? \"debugger;\" : \"\")\n\t\t+ code\n\t\t+ (isLinkExpr ? \"\\n\" : \";\\nreturn ret;\");\n\n\tif ($viewsSettings._dbgMode) {\n\t\tcode = \"try {\\n\" + code + \"\\n}catch(e){\\nreturn j._err(e, view);\\n}\";\n\t}\n\n\ttry {\n\t\tcode = new Function(\"data,view,j,u\", code);\n\t} catch (e) {\n\t\tsyntaxError(\"Compiled template code:\\n\\n\" + code + '\\n: \"' + e.message + '\"');\n\t}\n\tif (tmpl) {\n\t\ttmpl.fn = code;\n\t\ttmpl.useViews = !!useViews;\n\t}\n\treturn code;\n}\n\n//==========\n// Utilities\n//==========\n\n// Merge objects, in particular contexts which inherit from parent contexts\nfunction extendCtx(context, parentContext) {\n\t// Return copy of parentContext, unless context is defined and is different, in which case return a new merged context\n\t// If neither context nor parentContext are defined, return undefined\n\treturn context && context !== parentContext\n\t\t? (parentContext\n\t\t\t? $extend($extend({}, parentContext), context)\n\t\t\t: context)\n\t\t: parentContext && $extend({}, parentContext);\n}\n\n// Get character entity for HTML and Attribute encoding\nfunction getCharEntity(ch) {\n\treturn charEntities[ch] || (charEntities[ch] = \"&#\" + ch.charCodeAt(0) + \";\");\n}\n\nfunction getTargetProps(source) {\n\t// this pointer is theMap - which has tagCtx.props too\n\t// arguments: tagCtx.args.\n\tvar key, prop,\n\t\tprops = [];\n\n\tif (typeof source === OBJECT) {\n\t\tfor (key in source) {\n\t\t\tprop = source[key];\n\t\t\tif (!prop || !prop.toJSON || prop.toJSON()) {\n\t\t\t\tif (!$isFunction(prop)) {\n\t\t\t\t\tprops.push({ key: key, prop: prop });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn props;\n}\n\nfunction $fnRender(data, context, noIteration) {\n\tvar tmplElem = this.jquery && (this[0] || error('Unknown template: \"' + this.selector + '\"')),\n\t\ttmpl = tmplElem.getAttribute(tmplAttr);\n\n\treturn renderContent.call(tmpl ? $.data(tmplElem)[jsvTmpl] : $templates(tmplElem), data, context, noIteration);\n}\n\n//========================== Register converters ==========================\n\nfunction htmlEncode(text) {\n\t// HTML encode: Replace < > & ' and \" by corresponding entities.\n\treturn text != undefined ? rIsHtml.test(text) && (\"\" + text).replace(rHtmlEncode, getCharEntity) || text : \"\";\n}\n\n//========================== Initialize ==========================\n\nif (!(jsr || $ && $.render)) {\n\t// JsRender not already loaded, or loaded without jQuery, and we are now moving from jsrender namespace to jQuery namepace\n\tfor (jsvStoreName in jsvStores) {\n\t\tregisterStore(jsvStoreName, jsvStores[jsvStoreName]);\n\t}\n\n\t$templates = $views.templates;\n\t$converters = $views.converters;\n\t$helpers = $views.helpers;\n\t$tags = $views.tags;\n\t$sub = $views.sub;\n\t$viewsSettings = $views.settings;\n\n\t$sub._tg.prototype = {\n\t\tbaseApply: baseApply,\n\t\tcvtArgs: convertArgs\n\t};\n\n\ttopView = $sub.topView = new View();\n\n\t//BROWSER-SPECIFIC CODE\n\tif ($) {\n\n\t\t////////////////////////////////////////////////////////////////////////////////////////////////\n\t\t// jQuery (= $) is loaded\n\n\t\t$.fn.render = $fnRender;\n\n\t\tif ($.observable) {\n\t\t\t$extend($sub, $.views.sub); // jquery.observable.js was loaded before jsrender.js\n\t\t\t$views.map = $.views.map;\n\t\t}\n\n\t} else {\n\t\t////////////////////////////////////////////////////////////////////////////////////////////////\n\t\t// jQuery is not loaded.\n\n\t\t$ = {};\n\n\t\tif (setGlobals) {\n\t\t\tglobal.jsrender = $; // We are loading jsrender.js from a script element, not AMD or CommonJS, so set global\n\t\t}\n\n\t\t// Error warning if jsrender.js is used as template engine on Node.js (e.g. Express or Hapi...)\n\t\t// Use jsrender-node.js instead...\n\t\t$.renderFile = $.__express = $.compile = function() { throw \"Node.js: use npm jsrender, or jsrender-node.js\"; };\n\n\t\t//END BROWSER-SPECIFIC CODE\n\t\t$.isFunction = function(ob) {\n\t\t\treturn typeof ob === \"function\";\n\t\t};\n\n\t\t$.isArray = Array.isArray || function(obj) {\n\t\t\treturn ({}.toString).call(obj) === \"[object Array]\";\n\t\t};\n\n\t\t$sub._jq = function(jq) { // private method to move from JsRender APIs from jsrender namespace to jQuery namespace\n\t\t\tif (jq !== $) {\n\t\t\t\t$extend(jq, $); // map over from jsrender namespace to jQuery namespace\n\t\t\t\t$ = jq;\n\t\t\t\t$.fn.render = $fnRender;\n\t\t\t\tdelete $.jsrender;\n\t\t\t}\n\t\t};\n\n\t\t$.jsrender = versionNumber;\n\t}\n\n\t$isFunction = $.isFunction;\n\t$isArray = $.isArray;\n\t$.render = $render;\n\t$.views = $views;\n\t$.templates = $templates = $views.templates;\n\n\t$viewsSettings({\n\t\tdebugMode: dbgMode,\n\t\tdelimiters: $viewsDelimiters,\n\t\tonError: function(e, view, fallback) {\n\t\t\t// Can override using $.views.settings({onError: function(...) {...}});\n\t\t\tif (view) {\n\t\t\t\t// For render errors, e is an exception thrown in compiled template, and view is the current view. For other errors, e is an error string.\n\t\t\t\te = fallback === undefined\n\t\t\t\t\t? \"{Error: \" + (e.message || e) + \"}\"\n\t\t\t\t\t: $isFunction(fallback)\n\t\t\t\t\t\t? fallback(e, view) : fallback;\n\t\t\t}\n\t\t\treturn e == undefined ? \"\" : e;\n\t\t},\n\t\t_dbgMode: false\n\t});\n\n\t//========================== Register tags ==========================\n\n\t$tags({\n\t\t\"if\": {\n\t\t\trender: function(val) {\n\t\t\t\t// This function is called once for {{if}} and once for each {{else}}.\n\t\t\t\t// We will use the tag.rendering object for carrying rendering state across the calls.\n\t\t\t\t// If not done (a previous block has not been rendered), look at expression for this block and render the block if expression is truthy\n\t\t\t\t// Otherwise return \"\"\n\t\t\t\tvar self = this,\n\t\t\t\t\ttagCtx = self.tagCtx,\n\t\t\t\t\tret = (self.rendering.done || !val && (arguments.length || !tagCtx.index))\n\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t: (self.rendering.done = true, self.selected = tagCtx.index,\n\t\t\t\t\t\t\t// Test is satisfied, so render content on current context. We call tagCtx.render() rather than return undefined\n\t\t\t\t\t\t\t// (which would also render the tmpl/content on the current context but would iterate if it is an array)\n\t\t\t\t\t\t\ttagCtx.render(tagCtx.view, true)); // no arg, so renders against parentView.data\n\t\t\t\treturn ret;\n\t\t\t},\n\t\t\tflow: true\n\t\t},\n\t\t\"for\": {\n\t\t\trender: function(val) {\n\t\t\t\t// This function is called once for {{for}} and once for each {{else}}.\n\t\t\t\t// We will use the tag.rendering object for carrying rendering state across the calls.\n\t\t\t\tvar finalElse = !arguments.length,\n\t\t\t\t\tvalue,\n\t\t\t\t\tself = this,\n\t\t\t\t\ttagCtx = self.tagCtx,\n\t\t\t\t\tresult = \"\",\n\t\t\t\t\tdone = 0;\n\n\t\t\t\tif (!self.rendering.done) {\n\t\t\t\t\tvalue = finalElse ? tagCtx.view.data : val; // For the final else, defaults to current data without iteration.\n\t\t\t\t\tif (value !== undefined ) {\n\t\t\t\t\t\tresult += tagCtx.render(value, finalElse); // Iterates except on final else, if data is an array. (Use {{include}} to compose templates without array iteration)\n\t\t\t\t\t\tdone += $isArray(value) ? value.length : 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (self.rendering.done = done) {\n\t\t\t\t\t\tself.selected = tagCtx.index;\n\t\t\t\t\t}\n\t\t\t\t\t// If nothing was rendered we will look at the next {{else}}. Otherwise, we are done.\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\tflow: true\n\t\t},\n\t\tprops: {\n\t\t\tbaseTag: \"for\",\n\t\t\tdataMap: dataMap(getTargetProps),\n\t\t\tflow: true\n\t\t},\n\t\tinclude: {\n\t\t\tflow: true\n\t\t},\n\t\t\"*\": {\n\t\t\t// {{* code... }} - Ignored if template.allowCode and $.views.settings.allowCode are false. Otherwise include code in compiled template\n\t\t\trender: retVal,\n\t\t\tflow: true\n\t\t},\n\t\t\":*\": {\n\t\t\t// {{:* returnedExpression }} - Ignored if template.allowCode and $.views.settings.allowCode are false. Otherwise include code in compiled template\n\t\t\trender: retVal,\n\t\t\tflow: true\n\t\t},\n\t\tdbg: $helpers.dbg = $converters.dbg = dbgBreak // Register {{dbg/}}, {{dbg:...}} and ~dbg() to throw and catch, as breakpoints for debugging.\n\t});\n\n\t$converters({\n\t\thtml: htmlEncode,\n\t\tattr: htmlEncode, // Includes > encoding since rConvertMarkers in JsViews does not skip > characters in attribute strings\n\t\turl: function(text) {\n\t\t\t// URL encoding helper.\n\t\t\treturn text != undefined ? encodeURI(\"\" + text) : text === null ? text : \"\"; // null returns null, e.g. to remove attribute. undefined returns \"\"\n\t\t}\n\t});\n\n\t//========================== Define default delimiters ==========================\n\t$viewsDelimiters();\n}\n\nif (jsrToJq) { // Moving from jsrender namespace to jQuery namepace - copy over the stored items (templates, converters, helpers...)\n\tjsr.views.sub._jq($);\n}\n//<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< JsObservable >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n/* JsObservable:\n * See http://www.jsviews.com/#jsobservable and http://github.com/borismoore/jsviews\n * Copyright 2015, Boris Moore\n * Released under the MIT License.\n */\n\n//========================== Top-level vars ==========================\n\n$views = $.views;\n$sub = $views.sub;\n$isFunction = $.isFunction;\n$isArray = $.isArray;\nif (!$.observe) {\n\n\tvar $eventSpecial = $.event.special,\n\t\tslice = [].slice,\n\t\tsplice = [].splice,\n\t\tconcat = [].concat,\n\t\t$expando = $.expando,\n\t\tPARSEINT = parseInt,\n\t\trNotWhite = /\\S+/g,\n\t\tpropertyChangeStr = $sub.propChng = $sub.propChng || \"propertyChange\",// These two settings can be overridden on settings after loading\n\t\tarrayChangeStr = $sub.arrChng = $sub.arrChng || \"arrayChange\",        // jsRender, and prior to loading jquery.observable.js and/or JsViews\n\t\tcbBindingsStore = $sub._cbBnds = $sub._cbBnds || {},\n\t\tobserveStr = propertyChangeStr + \".observe\",\n\t\tobserveObjKey = 1,\n\t\tobserveCbKey = 1,\n\t\tobserveInnerCbKey = 1,\n\t\t$hasData = $.hasData,\n\t\t$data = $.data,\n\t\tremove = {}, // flag for removeProperty\n\n\t//========================== Top-level functions ==========================\n\n\tgetCbKey = function(cb) {\n\t\treturn cb._cId = cb._cId || (\".obs\" + observeCbKey++);\n\t},\n\n\tObjectObservable = function(data) {\n\t\tthis._data = data;\n\t\treturn this;\n\t},\n\n\tArrayObservable = function(data) {\n\t\tthis._data = data;\n\t\treturn this;\n\t},\n\n\twrapArray = function(data) {\n\t\treturn $isArray(data)\n\t\t\t? [data]\n\t\t\t: data;\n\t},\n\n\tresolvePathObjects = function(paths, root) {\n\t\tpaths = $isArray(paths) ? paths : [paths];\n\n\t\tvar i, path,\n\t\t\tobject = root,\n\t\t\tnextObj = object,\n\t\t\tl = paths.length,\n\t\t\tout = [];\n\n\t\tfor (i = 0; i < l; i++) {\n\t\t\tpath = paths[i];\n\t\t\tif ($isFunction(path)) {\n\t\t\t\tout = out.concat(resolvePathObjects(path.call(root, root), root));\n\t\t\t\tcontinue;\n\t\t\t} else if (\"\" + path !== path) {\n\t\t\t\troot = nextObj = path;\n\t\t\t\tif (nextObj !== object) {\n\t\t\t\t\tout.push(object = nextObj);\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (nextObj !== object) {\n\t\t\t\tout.push(object = nextObj);\n\t\t\t}\n\t\t\tout.push(path);\n\t\t}\n\t\treturn out;\n\t},\n\n\tremoveCbBindings = function(cbBindings, cbBindingsId) {\n\t\t// If the cbBindings collection is empty we will remove it from the cbBindingsStore\n\t\tfor (var cb in cbBindings) {\n\t\t\treturn;\n\t\t}\n\t\tcbBindingsStore[cbBindingsId] = undefined; // This binding collection is empty, so remove from store\n\t},\n\n\tonObservableChange = function(ev, eventArgs) {\n\t\tfunction isOb(val) {\n\t\t\treturn typeof val === OBJECT && (paths[0] || allowArray && $isArray(val));\n\t\t}\n\n\t\tif (!(ev.data && ev.data.off)) {\n\t\t\t// Skip if !!ev.data.off: - a handler that has already been removed (maybe was on handler collection at call time - then removed by another handler)\n\t\t\tvar allPath, filter, parentObs,\n\t\t\t\toldValue = eventArgs.oldValue,\n\t\t\t\tvalue = eventArgs.value,\n\t\t\t\tctx = ev.data,\n\t\t\t\tobserveAll = ctx.observeAll,\n\t\t\t\tallowArray = !ctx.cb.noArray,\n\t\t\t\tpaths = ctx.paths;\n\n\t\t\tif (ev.type === arrayChangeStr) {\n\t\t\t\t(ctx.cb.array || ctx.cb).call(ctx, ev, eventArgs); // If there is an arrayHandler expando on the regular handler, use it, otherwise use the regular handler for arrayChange events also - for example: $.observe(array, handler)\n\t\t\t\t// or observeAll() with an array in the graph. Note that on data-link bindings we ensure always to have an array handler - $.noop if none is specified e.g. on the data-linked tag.\n\t\t\t} else if (ctx.prop === eventArgs.path || ctx.prop === \"*\") {\n\t\t\t\tif (observeAll) {\n\t\t\t\t\tallPath = observeAll._path + \".\" + eventArgs.path;\n\t\t\t\t\tfilter = observeAll.filter;\n\t\t\t\t\tparentObs = [ev.target].concat(observeAll.parents());\n\n\t\t\t\t\tif (isOb(oldValue)) {\n\t\t\t\t\t\tobserve_apply(allowArray, observeAll.ns, [oldValue], paths, ctx.cb, true, filter, [parentObs], allPath); // unobserve\n\t\t\t\t\t}\n\t\t\t\t\tif (isOb(value)) {\n\t\t\t\t\t\tobserve_apply(allowArray, observeAll.ns, [value], paths, ctx.cb, undefined, filter, [parentObs], allPath);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (isOb(oldValue)) { // oldValue is an object, so unobserve\n\t\t\t\t\t\tobserve_apply(allowArray, [oldValue], paths, ctx.cb, true); // unobserve\n\t\t\t\t\t}\n\t\t\t\t\tif (isOb(value)) { // value is an object, so observe\n\t\t\t\t\t\tobserve_apply(allowArray, [value], paths, ctx.cb);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tctx.cb(ev, eventArgs);\n\t\t\t}\n\t\t}\n\t},\n\n\tobserve_apply = function() {\n\t\t// $.observe(), but allowing you to include arrays within the arguments - which you want flattened.\n\t\tvar args = concat.apply([], arguments); // Flatten the arguments\n\t\treturn $observe.apply(args.shift(), args);\n\t},\n\n\t$observeAll = function(namespace, cb, filter, unobserve) {\n\t\tif (namespace + \"\" !== namespace) {\n\t\t\tfilter = cb;\n\t\t\tcb = namespace;\n\t\t\tnamespace = \"\";\n\t\t}\n\t\tobserveAll(namespace, this._data, cb, filter, [], \"root\", unobserve);\n\t},\n\n\t$unobserveAll = function(namespace, cb, filter) {\n\t\t$observeAll.call(this, namespace, cb, filter, true);\n\t},\n\n\tobserveAll = function(namespace, object, cb, filter, parentObs, allPath, unobserve, objMap) {\n\t\tfunction observeArrayItems(arr, unobs) {\n\t\t\tl = arr.length;\n\t\t\tnewAllPath = allPath + \"[]\";\n\t\t\twhile (l--) {\n\t\t\t\tfilterAndObserveAll(arr, l, unobs, 1);\n\t\t\t}\n\t\t}\n\n\t\tfunction filterAndObserveAll(obj, prop, unobs, nestedArray) {\n\t\t\tvar newObject, newParentObs;\n\t\t\tif (prop !== $expando) {\n\t\t\t\tif (newObject = $observable._fltr(newAllPath, obj[prop], nextParentObs, filter)) {\n\t\t\t\t\tnewParentObs = nextParentObs.slice();\n\t\t\t\t\tif (nestedArray && updatedTgt) {\n\t\t\t\t\t\tnewParentObs.unshift(updatedTgt); // For array change events need to add updated array to parentObs\n\t\t\t\t\t}\n\t\t\t\t\tobserveAll(namespace, newObject, cb, filter || (nestedArray ? undefined : 0), newParentObs, newAllPath, unobs, objMap);\n\t\t\t\t\t// If nested array, need to observe the array too - so set filter to undefined\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction wrappedCb(ev, eventArgs) {\n\t\t\t// This object is changing.\n\t\t\tallPath = ev.data.observeAll._path;\n\t\t\tupdatedTgt = ev.target;\n\t\t\tswitch (eventArgs.change) { // observeAll/unobserveAll on added or removed objects\n\t\t\t\tcase \"insert\":\n\t\t\t\t\tobserveArrayItems(eventArgs.items);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"remove\":\n\t\t\t\t\tobserveArrayItems(eventArgs.items, true); // unobserveAll on removed items\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"refresh\":\n\t\t\t\t\tobserveArrayItems(eventArgs.oldItems, true); // unobserveAll on old items\n\t\t\t\t\tobserveArrayItems(ev.target); // observeAll on new items\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"set\":\n\t\t\t\t\tnewAllPath = allPath + \".\" + eventArgs.path;\n\t\t\t\t\tfilterAndObserveAll(eventArgs, \"oldValue\", true);\n\t\t\t\t\tfilterAndObserveAll(eventArgs, \"value\");\n\t\t\t}\n\t\t\tupdatedTgt = undefined;\n\t\t\tcb.apply(this, arguments); // Observe this object (invoke the callback)\n\t\t}\n\n\t\tvar l, isObject, newAllPath, nextParentObs, updatedTgt, obId,\n\t\t\tnotRemoving = !objMap || objMap.un || !unobserve; // true unless it is an observeAll call (not unobserveAll) and we are removing a listener (not adding one)\n\n\t\tif (object && typeof object === OBJECT) {\n\t\t\tnextParentObs = [object].concat(parentObs); // The parentObs chain for the next depth of observeAll\n\t\t\tisObject = $isArray(object) ? \"\" : \"*\";\n\t\t\tif (objMap && notRemoving && $hasData(object) && objMap[obId = $data(object).obId]) {\n\t\t\t\tobjMap[obId]++;\n\t\t\t\treturn; // This object has already being observed/unobserved by this observeAll/unobserveAll call (must be a cyclic object graph) so skip, to avoid\n\t\t\t\t// stack overflow/multiple instances of listener. See https://github.com/BorisMoore/jsviews/pull/305\n\t\t\t\t// NOTE - WE DO NOT support ObserveAll on data with cyclic graphs which include DUPLICATE REFERENCES TO ARRAY PROPERTIES - such as data.children = data.descendants = []\n\t\t\t}\n\t\t\tif (!objMap) {\n\t\t\t\tobjMap = {un: unobserve}; // Map object to register observed objects for this observeAll\n\t\t\t}\n\n\t\t\tif (cb) {\n\t\t\t\t// Observe this object or array - and also listen for changes to object graph, to add or remove observers from the modified object graph\n\t\t\t\tif (isObject || filter !== 0) {\n\t\t\t\t\t// If an object, observe the object. If an array, only add arrayChange binding if has filter or if filter is undefined (!== 0) - which\n\t\t\t\t\t// is the case for top-level calls or for nested array (array item of an array - e.g. member of 2-dimensional array).\n\t\t\t\t\t// For array properties lower in the tree, with no filter, filter is set to 0 in filterAndObserveAll, so no arrayChange binding here,\n\t\t\t\t\t// since they get arrayChange binding added during regular $.observe(array ...) binding.\n\t\t\t\t\twrappedCb._cId = getCbKey(cb); // Identify wrapped callback with unwrapped callback, so unobserveAll will\n\t\t\t\t\t\t\t\t\t\t\t\t\t// remove previous observeAll wrapped callback, if inner callback was the same;\n\t\t\t\t\tif (notRemoving) {\n\t\t\t\t\t\t$observe(namespace, object, isObject, wrappedCb, unobserve, filter, nextParentObs, allPath);\n\t\t\t\t\t\tobId = $data(object).obId;\n\t\t\t\t\t\tobjMap[obId] = (objMap[obId] || 0) + 1; // Register on map of objects observed/unobserved by this observeAll/unobserveAll call\n\t\t\t\t\t\t\t//- or remove from map if we are removing this object from observeAll call. (Avoid dups, for cyclic graphs)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (--objMap[$data(object).obId]) {\n\t\t\t\t\t\t\t// Register on map of objects observed/unobserved by this observeAll/unobserveAll call\n\t\t\t\t\t\t\t//- or remove from map if we are removing this object from observeAll call. (Avoid dups, for cyclic graphs)\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$observe(namespace, object, isObject, wrappedCb, unobserve, filter, nextParentObs, allPath);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// No callback. Just unobserve if unobserve === true.\n\t\t\t\tif (objMap) {\n\t\t\t\t\tobjMap[$data(object).obId] = 1; // Register on map of objects unobserved by this unobserveAll call. (Avoid dups, for cyclic graphs)\n\t\t\t\t}\n\t\t\t\t$observe(namespace, object, isObject, undefined, unobserve, filter, nextParentObs, allPath);\n\t\t\t}\n\n\t\t\tif (isObject) {\n\t\t\t\t// Continue stepping through object graph, observing object and arrays\n\t\t\t\t// To override filtering, pass in filter function, or replace $.observable._fltr\n\t\t\t\tfor (l in object) {\n\t\t\t\t\tnewAllPath = allPath + \".\" + l;\n\t\t\t\t\tfilterAndObserveAll(object, l, unobserve);\n\t\t\t\t}\n\t\t\t} else { // Observe items in Array\n\t\t\t\tobserveArrayItems(object, unobserve);\n\t\t\t}\n\t\t}\n\t},\n\n\tshallowFilter = function(allPath /*, object, parentObs*/) {\n\t\treturn allPath.indexOf(\".\") < 0 && allPath.indexOf(\"[\") < 0;\n\t},\n\n\t$unobserve = function() {\n\t\t[].push.call(arguments, true); // Add true as additional final argument\n\t\treturn $observe.apply(this, arguments);\n\t};\n\n\t$observe = function() {\n\t\t// $.observe([namespace, ]root, [1 or more objects, path or path Array params...], callback[, contextCallback][, unobserve])\n\n\t\tfunction innerObserve() {\n\n\t\t\tfunction observeOnOff(namespace, pathStr, isArrayBinding, off) {\n\t\t\t\tvar j, evData,\n\t\t\t\t\tobIdExpando = $hasData(object),\n\t\t\t\t\tboundObOrArr = wrapArray(object),\n\t\t\t\t\tprntObs = parentObs,\n\t\t\t\t\tallPth = allPath;\n\n\t\t\t\tnamespace = initialNs ? namespace + \".\" + initialNs : namespace;\n\n\t\t\t\tif (unobserve || off) {\n\t\t\t\t\tif (obIdExpando) {\n\t\t\t\t\t\t$(boundObOrArr).off(namespace, onObservableChange);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (events = obIdExpando && $._data(object)) {\n\t\t\t\t\t\tevents = events && events.events;\n\t\t\t\t\t\tevents = events && events[isArrayBinding ? arrayChangeStr : propertyChangeStr];\n\t\t\t\t\t\tel = events && events.length;\n\n\t\t\t\t\t\twhile (el--) {\n\t\t\t\t\t\t\tif ((data = events[el].data) && data.cb && data.cb._cId === callback._cId && data.ns === initialNs) {\n\t\t\t\t\t\t\t\tif (isArrayBinding) {\n\t\t\t\t\t\t\t\t\t// Duplicate exists, so skip. (This can happen e.g. with {^{for people ~foo=people}})\n\t\t\t\t\t\t\t\t\t// or for cases with cyclic objects - e.g. obj.children = obj.descendants = []\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t} else if (pathStr === \"*\" && data.prop !== pathStr) {\n\t\t\t\t\t\t\t\t\t$(object).off(namespace, onObservableChange);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tevData = isArrayBinding ? {}\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\tfullPath: path,\n\t\t\t\t\t\t\tpaths: pathStr ? [pathStr] : [],\n\t\t\t\t\t\t\tprop: prop\n\t\t\t\t\t\t};\n\t\t\t\t\tevData.ns = initialNs;\n\t\t\t\t\tevData.cb = callback;\n\n\t\t\t\t\tif (allPath) {\n\t\t\t\t\t\t// This is an observeAll call\n\t\t\t\t\t\tevData.observeAll = {\n\t\t\t\t\t\t\t_path: allPth,\n\t\t\t\t\t\t\tpath: function() { // Step through path and parentObs parent chain, replacing '[]' by '[n]' based on current index of objects in parent arrays.\n\t\t\t\t\t\t\t\tj = prntObs.length;\n\t\t\t\t\t\t\t\treturn allPth.replace(/[[.]/g, function(all) {\n\t\t\t\t\t\t\t\t\tj--;\n\t\t\t\t\t\t\t\t\treturn all === \"[\"\n\t\t\t\t\t\t\t\t\t\t? \"[\" + $.inArray(prntObs[j - 1], prntObs[j])\n\t\t\t\t\t\t\t\t\t\t: \".\";\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tparents: function() {\n\t\t\t\t\t\t\t\treturn prntObs; // The chain of parents between the modified object and the root object used in the observeAll() call\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfilter: filter,\n\t\t\t\t\t\t\tns: initialNs\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\t$(boundObOrArr).on(namespace, null, evData, onObservableChange);\n\t\t\t\t\tif (cbBindings) {\n\t\t\t\t\t\t// Add object to cbBindings, and add the counter to the jQuery data on the object\n\t\t\t\t\t\t(cbBindingsStore[callback._cId] = cbBindings) // In some scenarios cbBindings was empty and removed\n\t\t\t\t\t\t\t//from store - so defensively add back to store, to ensure correct disposal e.g. when views are removed\n\t\t\t\t\t\t\t[$data(object).obId || $data(object, \"obId\", observeObjKey++)] = object;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction getInnerCb(exprOb) {\n\t\t\t\t// Returns the innerCb used for updating a computed in a compiled expression (setting the new instance as exprOb.ob, unobserving the previous object,\n\t\t\t\t// and observing the new one), then calling the outerCB - i.e. the handler for the whole compiled expression.\n\t\t\t\t// Initialized exprOb.ob to the current object.\n\t\t\t\t// Uses the contextCb callback to execute the compiled exprOb template in the context of the view/data etc. to get the returned value, typically an object or array.\n\t\t\t\t// If it is an array, registers array binding\n\t\t\t\tvar origRt = root;\n\t\t\t\t// Note: For https://github.com/BorisMoore/jsviews/issues/292ctxCb will need var ctxCb = contextCb || function(exprOb, origRt) {return exprOb._jsv(origRt);};\n\n\t\t\t\texprOb.ob = contextCb(exprOb, origRt); // Initialize object\n\n\t\t\t\treturn exprOb.cb = function(ev, eventArgs) {\n\t\t\t\t\tvar obj = exprOb.ob, // The old object\n\t\t\t\t\t\tsub = exprOb.sb,\n\t\t\t\t\t\tnewObj = contextCb(exprOb, origRt);\n\n\t\t\t\t\tif (newObj !== obj) {\n\t\t\t\t\t\tif (typeof obj === OBJECT) {\n\t\t\t\t\t\t\tbindArray(obj, true);\n\t\t\t\t\t\t\tif (sub || allowArray && $isArray(obj)) {\n\t\t\t\t\t\t\t\tinnerObserve([obj], sub, callback, contextCb, true); // unobserve on the old object\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\texprOb.ob = newObj;\n\t\t\t\t\t\t// Put the updated object instance onto the exprOb in the paths array, so subsequent string paths are relative to this object\n\t\t\t\t\t\tif (typeof newObj === OBJECT) {\n\t\t\t\t\t\t\tbindArray(newObj);\n\t\t\t\t\t\t\tif (sub || allowArray && $isArray(newObj)) {\n\t\t\t\t\t\t\t\t// Register array binding\n\t\t\t\t\t\t\t\tinnerObserve([newObj], sub, callback, contextCb);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Call the outerCb - to execute the compiled expression that this computed is part of\n\t\t\t\t\tcallback(ev, eventArgs);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tfunction bindArray(arr, unbind, isArray, relPath) {\n\t\t\t\tif (allowArray) {\n\t\t\t\t\t// This is a call to observe that does not come from observeAndBind (tag binding), so we allow arrayChange binding\n\t\t\t\t\tvar prevObj = object,\n\t\t\t\t\t\tprevAllPath = allPath;\n\n\t\t\t\t\tobject = arr;\n\t\t\t\t\tif (relPath) {\n\t\t\t\t\t\tobject = arr[relPath];\n\t\t\t\t\t\tallPath += \".\" + relPath;\n\t\t\t\t\t}\n\t\t\t\t\tif (filter && object) {\n\t\t\t\t\t\tobject = $observable._fltr(allPath, object, relPath ? [arr].concat(parentObs) : parentObs, filter);\n\t\t\t\t\t}\n\t\t\t\t\tif (object && (isArray || $isArray(object))) {\n\t\t\t\t\t\tobserveOnOff(arrayChangeStr + \".observe\" + (callback ? (cbId = getCbKey(callback)) : \"\"), undefined, true, unbind);\n\t\t\t\t\t}\n\t\t\t\t\tobject = prevObj;\n\t\t\t\t\tallPath = prevAllPath;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar i, p, skip, parts, prop, path, dep, unobserve, callback, cbId, el, data, events, contextCb, items, cbBindings, depth, innerCb, parentObs,\n\t\t\t\tallPath, filter, initNsArr, initNsArrLen,\n\t\t\t\tns = observeStr,\n\t\t\t\tpaths = this != 1 // Using != for IE<10 bug- see https://github.com/BorisMoore/jsviews/issues/237\n\t\t\t\t\t? concat.apply([], arguments) // Flatten the arguments - this is a 'recursive call' with params using the 'wrapped array'\n\t\t\t\t\t\t\t\t\t\t\t\t\t// style - such as innerObserve([object], path.path, [origRoot], path.prm, innerCb, ...);\n\t\t\t\t\t: slice.call(arguments), // Don't flatten - this is the first 'top-level call, to innerObserve.apply(1, paths)\n\t\t\t\tlastArg = paths.pop() || false,\n\t\t\t\troot = paths.shift(),\n\t\t\t\tobject = root,\n\t\t\t\tl = paths.length;\n\n\t\t\tif (lastArg + \"\" === lastArg) { // If last arg is a string then this observe call is part of an observeAll call,\n\t\t\t\tallPath = lastArg;          // and the last three args are the parentObs array, the filter, and the allPath string.\n\t\t\t\tparentObs = paths.pop();\n\t\t\t\tfilter = paths.pop();\n\t\t\t\tlastArg = !!paths.pop(); // unobserve\n\t\t\t\tl -= 3;\n\t\t\t}\n\t\t\tif (lastArg === !!lastArg) {\n\t\t\t\tunobserve = lastArg;\n\t\t\t\tlastArg = paths[l-1];\n\t\t\t\tlastArg = l && lastArg + \"\" !== lastArg ? (l--, paths.pop()) : undefined;\n\t\t\t}\n\t\t\tcallback = lastArg;\n\t\t\tif (l && $isFunction(paths[l - 1])) {\n\t\t\t\tcontextCb = callback;\n\t\t\t\tcallback = paths.pop();\n\t\t\t\tl--;\n\t\t\t}\n\n\t\t\t// Use a unique namespace (e.g. obs7) associated with each observe() callback to allow unobserve to remove handlers\n\t\t\tns += unobserve\n\t\t\t\t? (callback ? callback._cId + (callback._inId || \"\"): \"\")\n\t\t\t\t: (cbId = getCbKey(callback)) + (callback._inId || \"\");\n\t\t\tif (!unobserve) {\n\t\t\t\tcbBindings = cbBindingsStore[cbId] = cbBindingsStore[cbId] || {};\n\t\t\t}\n\n\t\t\tinitNsArr = initialNs && initialNs.match(rNotWhite) || [\"\"];\n\t\t\tinitNsArrLen = initNsArr.length;\n\n\t\t\twhile (initNsArrLen--) {\n\t\t\t\tinitialNs = initNsArr[initNsArrLen];\n\n\t\t\t\tif ($isArray(root)) {\n\t\t\t\t\tbindArray(root, unobserve, true);\n\t\t\t\t} else {\n\t\t\t\t\t// remove onObservableChange handlers that wrap that callback\n\t\t\t\t\tif (unobserve && l === 0 && root) {\n\t\t\t\t\t\tobserveOnOff(ns, \"\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdepth = 0;\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tpath = paths[i];\n\t\t\t\t\tif (path === \"\" || path === undefined) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tobject = root;\n\t\t\t\t\tif (\"\" + path === path) {\n\t\t\t\t\t\t// Consider support for computed paths: https://github.com/BorisMoore/jsviews/issues/292\n\t\t\t\t\t\t//if (/[\\(\\[\\+]/.test(path)) {\n\t\t\t\t\t\t//\tvar b={links:{}}, t = $sub.tmplFn(\"{:\"+path+\"}\", b, true), items = t.paths[0];\n\t\t\t\t\t\t//\tl += items.length - 1;\n\t\t\t\t\t\t//\tsplice.apply(paths, [i--, 1].concat(items));\n\t\t\t\t\t\t//\tcontinue;\n\t\t\t\t\t\t//}\n\t\t\t\t\t\tparts = path.split(\"^\");\n\t\t\t\t\t\tif (parts[1]) {\n\t\t\t\t\t\t\t// We bind the leaf, plus additional nodes based on depth.\n\t\t\t\t\t\t\t// \"a.b.c^d.e\" is depth 2, so listens to changes of e, plus changes of d and of c\n\t\t\t\t\t\t\tdepth = parts[0].split(\".\").length;\n\t\t\t\t\t\t\tpath = parts.join(\".\");\n\t\t\t\t\t\t\tdepth = path.split(\".\").length - depth;\n\t\t\t\t\t\t\t// if more than one ^ in the path, the first one determines depth\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (contextCb && (items = contextCb(path, root))) {\n\t\t\t\t\t\t\t// If contextCb returns an array of objects and paths, we will insert them\n\t\t\t\t\t\t\t// into the sequence, replacing the current item (path)\n\t\t\t\t\t\t\tl += items.length - 1;\n\t\t\t\t\t\t\tsplice.apply(paths, [i--, 1].concat(items));\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparts = path.split(\".\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!$isFunction(path)) {\n\t\t\t\t\t\t\tif (path && path._jsv) {\n\t\t\t\t\t\t\t\t// This is a compiled function for binding to an object returned by a helper/data function.\n\t\t\t\t\t\t\t\t// Set current object on exprOb.ob, and get innerCb for updating the object\n\t\t\t\t\t\t\t\tinnerCb = unobserve ? path.cb : getInnerCb(path);\n\t\t\t\t\t\t\t\tinnerCb.noArray = !allowArray;\n\t\t\t\t\t\t\t\tinnerCb._cId = callback._cId;\n\t\t\t\t\t\t\t\t// Set the same cbBindingsStore key as for callback, so when callback is disposed, disposal of innerCb happens too.\n\t\t\t\t\t\t\t\tinnerCb._inId = innerCb._inId || \".obIn\" + observeInnerCbKey++;\n\t\t\t\t\t\t\t\tif (path.bnd || path.prm && path.prm.length || !path.sb) {\n\t\t\t\t\t\t\t\t\t// If the exprOb is bound e.g. foo()^sub.path, or has parameters e.g. foo(bar) or is a leaf object (so no sub path) e.g. foo()\n\t\t\t\t\t\t\t\t\t// then observe changes on the object, or its parameters and sub-path\n\t\t\t\t\t\t\t\t\tinnerObserve([object], path.path, [origRoot], path.prm, innerCb, contextCb, unobserve);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (path.sb) { // subPath\n\t\t\t\t\t\t\t\t\tinnerObserve([path.ob], path.sb, callback, contextCb, unobserve);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tpath = origRoot;\n\t\t\t\t\t\t\t\tobject = undefined;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tobject = path; // For top-level calls, objects in the paths array become the origRoot for subsequent paths.\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparts = [root = path];\n\t\t\t\t\t}\n\t\t\t\t\twhile (object && (prop = parts.shift()) !== undefined) {\n\t\t\t\t\t\tif (typeof object === OBJECT) {\n\t\t\t\t\t\t\tif (\"\" + prop === prop) {\n\t\t\t\t\t\t\t\tif (prop === \"\") {\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif ((parts.length < depth + 1) && !object.nodeType) {\n\t\t\t\t\t\t\t\t\t// Add observer for each token in path starting at depth, and on to the leaf\n\t\t\t\t\t\t\t\t\tif (!unobserve && (events = $hasData(object) && $._data(object))) {\n\t\t\t\t\t\t\t\t\t\tevents = events.events;\n\t\t\t\t\t\t\t\t\t\tevents = events && events[propertyChangeStr];\n\t\t\t\t\t\t\t\t\t\tel = events && events.length;\n\t\t\t\t\t\t\t\t\t\tskip = 0;\n\t\t\t\t\t\t\t\t\t\twhile (el--) { // Skip duplicates\n\t\t\t\t\t\t\t\t\t\t\tdata = events[el].data;\n\t\t\t\t\t\t\t\t\t\t\tif (data && data.cb === callback && data.ns === initialNs) {\n\t\t\t\t\t\t\t\t\t\t\t\tif (data.prop === prop || data.prop === \"*\") {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (p = parts.join(\".\")) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.paths.push(p); // We will skip this binding, but if it is not a leaf binding,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// need to keep bindings for rest of path, ready for if the object gets swapped.\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tskip++;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (skip) {\n\t\t\t\t\t\t\t\t\t\t\t// Duplicate binding(s) found, so move on\n\t\t\t\t\t\t\t\t\t\t\tobject = object[prop];\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (prop === \"*\") {\n\t\t\t\t\t\t\t\t\t\tif (!unobserve && events && events.length) {\n\t\t\t\t\t\t\t\t\t\t\t// Remove existing bindings, since they will be duplicates with \"*\"\n\t\t\t\t\t\t\t\t\t\t\tobserveOnOff(ns, \"\", false, true);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tobserveOnOff(ns, \"\"); // observe the object for any property change\n\t\t\t\t\t\t\t\t\t\tfor (p in object) {\n\t\t\t\t\t\t\t\t\t\t\t// observing \"*\": So (in addition to listening to prop change, above) listen to arraychange on props of type array\n\t\t\t\t\t\t\t\t\t\t\tif (p !== $expando) {\n\t\t\t\t\t\t\t\t\t\t\t\tbindArray(object, unobserve, undefined, p);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t} else if (prop) {\n\t\t\t\t\t\t\t\t\t\tobserveOnOff(ns + \".\" + prop, parts.join(\"^\")); // By using \"^\" rather than \".\" we ensure that deep binding will be used on newly inserted object graphs\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (allPath) {\n\t\t\t\t\t\t\t\t\tallPath += \".\" + prop;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tprop = object[prop];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ($isFunction(prop)) {\n\t\t\t\t\t\t\t\tif (dep = prop.depends) {\n\t\t\t\t\t\t\t\t\t// This is a computed observable. We will observe any declared dependencies\n\t\t\t\t\t\t\t\t\tinnerObserve([object], resolvePathObjects(dep, object), callback, contextCb, unobserve);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tobject = prop;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbindArray(object, unobserve);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (cbId) {\n\t\t\t\tremoveCbBindings(cbBindings, cbId);\n\t\t\t}\n\n\t\t\t// Return the cbBindings to the top-level caller, along with the cbId\n\t\t\treturn { cbId: cbId, bnd: cbBindings };\n\t\t}\n\n\t\tvar initialNs,\n\t\t\tallowArray = this != false, // If this === false, this is a call from observeAndBind - doing binding of datalink expressions. We don't bind\n\t\t\t// arrayChange events in this scenario. Instead, {^{for}} and similar do specific arrayChange binding to the tagCtx.args[0] value, in onAfterLink.\n\t\t\t// Note deliberately using this != false, rather than this !== false because of IE<10 bug- see https://github.com/BorisMoore/jsviews/issues/237\n\t\t\tpaths = slice.call(arguments),\n\t\t\torigRoot = paths[0];\n\n\t\tif (origRoot + \"\" === origRoot && allowArray) {\n\t\t\tinitialNs = origRoot; // The first arg is a namespace, since it is a string, and this call is not from observeAndBind\n\t\t\tpaths.shift();\n\t\t\torigRoot = paths[0];\n\t\t}\n\n\t\treturn innerObserve.apply(1, paths);\n\t};\n\n\t$observable = function(data) {\n\t\treturn $isArray(data)\n\t\t\t? new ArrayObservable(data)\n\t\t\t: new ObjectObservable(data);\n\t};\n\n\t//========================== Initialize ==========================\n\n\t$sub.getDeps = function() {\n\t\tvar args = arguments;\n\t\treturn function() {\n\t\t\tvar arg, dep,\n\t\t\t\tdeps = [],\n\t\t\t\tl = args.length;\n\t\t\twhile (l--) {\n\t\t\t\targ = args[l--];\n\t\t\t\tdep = args[l];\n\t\t\t\tif (dep) {\n\t\t\t\t\tdeps = deps.concat($isFunction(dep) ? dep(arg, arg) : dep);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn deps;\n\t\t};\n\t};\n\n\t$.observable = $observable;\n\t$observable._fltr = function(allPath, object, parentObs, filter) {\n\t\tif (filter && $isFunction(filter)\n\t\t\t? filter(allPath, object, parentObs)\n\t\t\t: true // TODO Consider supporting filter being a string or strings to do RegEx filtering based on key and/or allPath\n\t\t) {\n\t\t\tobject = $isFunction(object)\n\t\t\t\t? object.set && object.call(parentObs[0]) // It is a getter/setter\n\t\t\t\t: object;\n\t\t\treturn typeof object === OBJECT && object;\n\t\t}\n\t};\n\n\t$observable.Object = ObjectObservable;\n\t$observable.Array = ArrayObservable;\n\t$.observe = $observable.observe = $observe;\n\t$.unobserve = $observable.unobserve = $unobserve;\n\t$observable._apply = observe_apply;\n\n\tObjectObservable.prototype = {\n\t\t_data: null,\n\n\t\tobserveAll: $observeAll,\n\t\tunobserveAll: $unobserveAll,\n\n\t\tdata: function() {\n\t\t\treturn this._data;\n\t\t},\n\n\t\tsetProperty: function(path, value, nonStrict) {\n\t\t\tvar key, pair, parts,\n\t\t\t\tself = this,\n\t\t\t\tobject = self._data;\n\n\t\t\tpath = path || \"\";\n\t\t\tif (object) {\n\t\t\t\tif ($isArray(path)) {\n\t\t\t\t\t// This is the array format generated by serializeArray. However, this has the problem that it coerces types to string,\n\t\t\t\t\t// and does not provide simple support of convertTo and convertFrom functions.\n\t\t\t\t\tkey = path.length;\n\t\t\t\t\twhile (key--) {\n\t\t\t\t\t\tpair = path[key];\n\t\t\t\t\t\tself.setProperty(pair.name, pair.value, nonStrict === undefined || nonStrict); //If nonStrict not specified, default to true;\n\t\t\t\t\t}\n\t\t\t\t} else if (\"\" + path !== path) {\n\t\t\t\t\t// Object representation where property name is path and property value is value.\n\t\t\t\t\tfor (key in path) {\n\t\t\t\t\t\tself.setProperty(key, path[key], nonStrict);\n\t\t\t\t\t}\n\t\t\t\t} else if (path !== $expando) {\n\t\t\t\t\t// Simple single property case.\n\t\t\t\t\tparts = path.split(\".\");\n\t\t\t\t\twhile (object && parts.length > 1) {\n\t\t\t\t\t\tobject = object[parts.shift()];\n\t\t\t\t\t}\n\t\t\t\t\tif (object) {\n\t\t\t\t\t\tself._setProperty(object, parts[0], value, nonStrict);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn self;\n\t\t},\n\n\t\tremoveProperty: function(path) {\n\t\t\tthis.setProperty(path, remove);\n\t\t\treturn this;\n\t\t},\n\n\t\t_setProperty: function(leaf, path, value, nonStrict) {\n\t\t\tvar setter, getter, removeProp,\n\t\t\t\tproperty = path ? leaf[path] : leaf;\n\n\t\t\tif ($isFunction(property)) {\n\t\t\t\tif (property.set) {\n\t\t\t\t\t// Case of property setter/getter - with convention that property is getter and property.set is setter\n\t\t\t\t\tgetter = property;\n\t\t\t\t\tsetter = property.set === true ? property : property.set;\n\t\t\t\t\tproperty = property.call(leaf); // get - only treated as getter if also a setter. Otherwise it is simply a property of type function. See unit tests 'Can observe properties of type function'.\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (property !== value || nonStrict && property != value) { // Optional non-strict equality, since serializeArray, and form-based editors can map numbers to strings, etc.\n\t\t\t\t// Date objects don't support != comparison. Treat as special case.\n\t\t\t\tif (!(property instanceof Date) || property > value || property < value) {\n\t\t\t\t\tif (setter) {\n\t\t\t\t\t\tsetter.call(leaf, value);\t//set\n\t\t\t\t\t\tvalue = getter.call(leaf);\t//get updated value\n\t\t\t\t\t} else if (removeProp = value === remove) {\n\t\t\t\t\t\tdelete leaf[path];\n\t\t\t\t\t\tvalue = undefined;\n\t\t\t\t\t} else if (path) {\n\t\t\t\t\t\tleaf[path] = value;\n\t\t\t\t\t}\n\t\t\t\t\tthis._trigger(leaf, {change: \"set\", path: path, value: value, oldValue: property, remove: removeProp});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_trigger: function(target, eventArgs) {\n\t\t\t$(target).triggerHandler(propertyChangeStr, eventArgs);\n\t\t}\n\t};\n\n\tArrayObservable.prototype = {\n\t\t_data: null,\n\n\t\tobserveAll: $observeAll,\n\t\tunobserveAll: $unobserveAll,\n\n\t\tdata: function() {\n\t\t\treturn this._data;\n\t\t},\n\n\t\tinsert: function(index, data) {\n\t\t\tvar _data = this._data;\n\t\t\tif (arguments.length === 1) {\n\t\t\t\tdata = index;\n\t\t\t\tindex = _data.length;\n\t\t\t}\n\t\t\tindex = PARSEINT(index);\n\t\t\tif (index > -1 && index <= _data.length) {\n\t\t\t\tdata = $isArray(data) ? data : [data];\n\t\t\t\t// data can be a single item (including a null/undefined value) or an array of items.\n\t\t\t\t// Note the provided items are inserted without being cloned, as direct references to the provided objects\n\n\t\t\t\tif (data.length) {\n\t\t\t\t\tthis._insert(index, data);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\t_insert: function(index, data) {\n\t\t\tvar _data = this._data,\n\t\t\t\toldLength = _data.length;\n\t\t\tsplice.apply(_data, [index, 0].concat(data));\n\t\t\tthis._trigger({change: \"insert\", index: index, items: data}, oldLength);\n\t\t},\n\n\t\tremove: function(index, numToRemove) {\n\t\t\tvar items,\n\t\t\t\t_data = this._data;\n\n\t\t\tif (index === undefined) {\n\t\t\t\tindex = _data.length - 1;\n\t\t\t}\n\n\t\t\tindex = PARSEINT(index);\n\t\t\tnumToRemove = numToRemove ? PARSEINT(numToRemove) : numToRemove === 0 ? 0 : 1; // if null or undefined: remove 1\n\t\t\tif (numToRemove > -1 && index > -1) {\n\t\t\t\titems = _data.slice(index, index + numToRemove);\n\t\t\t\tnumToRemove = items.length;\n\t\t\t\tif (numToRemove) {\n\t\t\t\t\tthis._remove(index, numToRemove, items);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\t_remove: function(index, numToRemove, items) {\n\t\t\tvar _data = this._data,\n\t\t\t\toldLength = _data.length;\n\n\t\t\t_data.splice(index, numToRemove);\n\t\t\tthis._trigger({change: \"remove\", index: index, items: items}, oldLength);\n\t\t},\n\n\t\tmove: function(oldIndex, newIndex, numToMove) {\n\t\t\tnumToMove = numToMove ? PARSEINT(numToMove) : numToMove === 0 ? 0 : 1; // if null or undefined: move 1\n\t\t\toldIndex = PARSEINT(oldIndex);\n\t\t\tnewIndex = PARSEINT(newIndex);\n\n\t\t\tif (numToMove > 0 && oldIndex > -1 && newIndex > -1 && oldIndex !== newIndex) {\n\t\t\t\tvar items = this._data.slice(oldIndex, oldIndex + numToMove);\n\t\t\t\tnumToMove = items.length;\n\t\t\t\tif (numToMove) {\n\t\t\t\t\tthis._move(oldIndex, newIndex, numToMove, items);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\t_move: function(oldIndex, newIndex, numToMove, items) {\n\t\t\tvar _data = this._data,\n\t\t\t\toldLength = _data.length;\n\t\t\t_data.splice(oldIndex, numToMove);\n\t\t\tsplice.apply(_data, [newIndex, 0].concat(items));\n\t\t\tthis._trigger({change: \"move\", oldIndex: oldIndex, index: newIndex, items: items}, oldLength);\n\t\t},\n\n\t\trefresh: function(newItems) {\n\t\t\tvar oldItems = this._data.slice();\n\t\t\tthis._refresh(oldItems, newItems);\n\t\t\treturn this;\n\t\t},\n\n\t\t_refresh: function(oldItems, newItems) {\n\t\t\tvar _data = this._data,\n\t\t\t\toldLength = _data.length;\n\n\t\t\tsplice.apply(_data, [0, _data.length].concat(newItems));\n\t\t\tthis._trigger({change: \"refresh\", oldItems: oldItems}, oldLength);\n\t\t},\n\n\t\t_trigger: function(eventArgs, oldLength) {\n\t\t\tvar _data = this._data,\n\t\t\t\tlength = _data.length,\n\t\t\t\t$_data = $([_data]);\n\n\t\t\tif (length !== oldLength) {\n\t\t\t\t$_data.triggerHandler(propertyChangeStr, {change: \"set\", path: \"length\", value: length, oldValue: oldLength});\n\t\t\t}\n\t\t\t$_data.triggerHandler(arrayChangeStr, eventArgs);\n\t\t}\n\t};\n\n\t$eventSpecial[propertyChangeStr] = $eventSpecial[arrayChangeStr] = {\n\t\t// Register a jQuery special 'remove' event, to access the data associated with handlers being removed by jQuery.off().\n\t\t// We get data.cb._cId from the event handleObj and get the corresponding cbBindings hash from the cbBindingsStore,\n\t\t// then remove this object from that bindings hash - if the object does not have any other handlers associated with the same callback.\n\t\tremove: function (handleObj) {\n\t\t\tvar cbBindings, found, events, l, data,\n\t\t\t\tevData = handleObj.data;\n\t\t\tif ((evData) && (evData.off = true, evData = evData.cb)) { //Set off = true as marker for disposed event\n\t\t\t\t// Get the cb._cId from handleObj.data.cb._cId\n\t\t\t\tif (cbBindings = cbBindingsStore[evData._cId]) {\n\t\t\t\t\t// There were bindings for this callback. If this was the last one, we'll remove it.\n\t\t\t\t\tevents = $._data(this).events[handleObj.type];\n\t\t\t\t\tl = events.length;\n\t\t\t\t\twhile (l-- && !found) {\n\t\t\t\t\t\tfound = (data = events[l].data) && data.cb && data.cb._cId === evData._cId;\n\t\t\t\t\t\t// Found another one with same callback (though may be a different innerCallback)\n\t\t\t\t\t}\n\t\t\t\t\tif (!found) {\n\t\t\t\t\t\t// This was the last handler for this callback and object, so remove the binding entry\n\t\t\t\t\t\tdelete cbBindings[$data(this).obId];\n\t\t\t\t\t\tremoveCbBindings(cbBindings, evData._cId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t$views.map = function(mapDef) {\n\t\tfunction Map(source, options, target, unbound) {\n\t\t\tvar changing,\n\t\t\t\tmap = this;\n\t\t\tif (this.src) {\n\t\t\t\tthis.unmap(); // We are re-mapping a new source\n\t\t\t}\n\t\t\tif (typeof source === OBJECT) {\n\t\t\t\tmap.src = source;\n\t\t\t\tmap.tgt = target || map.tgt || [];\n\t\t\t\tmap.options = options || map.options;\n\t\t\t\tmap.update();\n\t\t\t\tif (!unbound) {\n\t\t\t\t\tif (mapDef.obsSrc) {\n\t\t\t\t\t\t$observable(map.src).observeAll(map.obs = function(ev, eventArgs) {\n\t\t\t\t\t\t\tif (!changing) {\n\t\t\t\t\t\t\t\tchanging = true;\n\t\t\t\t\t\t\t\tmapDef.obsSrc(map, ev, eventArgs);\n\t\t\t\t\t\t\t\tchanging = undefined;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, map.srcFlt);\n\t\t\t\t\t}\n\t\t\t\t\tif (mapDef.obsTgt ) {\n\t\t\t\t\t\t$observable(map.tgt).observeAll(map.obt = function(ev, eventArgs) {\n\t\t\t\t\t\tif (!changing) {\n\t\t\t\t\t\t\tchanging = true;\n\t\t\t\t\t\t\tmapDef.obsTgt(map, ev, eventArgs);\n\t\t\t\t\t\t\tchanging = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t}, map.tgtFlt);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ($isFunction(mapDef)) {\n\t\t\t// Simple map declared as function\n\t\t\tmapDef = {\n\t\t\t\tgetTgt: mapDef\n\t\t\t};\n\t\t}\n\n\t\tif (mapDef.baseMap) {\n\t\t\tmapDef = $.extend({}, mapDef.baseMap, mapDef);\n\t\t}\n\n\t\tmapDef.map = function(source, options, target, unbound) {\n\t\t\treturn new Map(source, options, target, unbound);\n\t\t};\n\n\t\t(Map.prototype = {\n\t\t\tsrcFlt: mapDef.srcFlt || shallowFilter, // default to shallowFilter\n\t\t\ttgtFlt: mapDef.tgtFlt || shallowFilter,\n\t\t\tupdate: function(options) {\n\t\t\t\tvar map = this;\n\t\t\t\t$observable(map.tgt).refresh(mapDef.getTgt(map.src, map.options = options || map.options));\n\t\t\t},\n\t\t\tunmap: function() {\n\t\t\t\tvar map = this;\n\t\t\t\tif (map.src) {\n\t\t\t\t\tif (map.obs) {\n\t\t\t\t\t\t$observable(map.src).unobserveAll(map.obs, map.srcFlt);\n\t\t\t\t\t}\n\t\t\t\t\tif (map.obt) {\n\t\t\t\t\t\t$observable(map.tgt).unobserveAll(map.obt, map.tgtFlt);\n\t\t\t\t\t}\n\t\t\t\t\tmap.src = undefined;\n\t\t\t\t}\n\t\t\t},\n\t\t\tmap: Map,\n\t\t\t_def: mapDef\n\t\t}).constructor = Map;\n\n\t\treturn mapDef;\n\t};\n}\n\n\n//<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< JsViews >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n/* JsViews:\n * Interactive data-driven views using templates and data-linking.\n * See http://www.jsviews.com/#jsviews and http://github.com/BorisMoore/jsviews\n * Copyright 2015, Boris Moore\n * Released under the MIT License.\n */\n\n//========================== Top-level vars ==========================\n\n$viewsSettings = $views.settings;\n$converters = $views.converters;\n$tags = $views.tags;\nrFirstElem = /<(?!script)(\\w+)(?:[^>]*(on\\w+)\\s*=)?[^>]*>/;\n\nif ($.link) { return $; } // JsViews is already loaded\n\nvar activeBody, rTagDatalink, $view, $viewsLinkAttr, linkMethods, linkViewsSel, wrapMap, viewStore, noDomLevel0,\n\n\tjsvAttrStr = \"data-jsv\",\n\telementChangeStr = \"change.jsv\",\n\tonBeforeChangeStr = \"onBeforeChange\",\n\tonAfterChangeStr = \"onAfterChange\",\n\tonAfterCreateStr = \"onAfterCreate\",\n\tCHECKED = \"checked\",\n\tCHECKBOX = \"checkbox\",\n\tRADIO = \"radio\",\n\tNONE = \"none\",\n\tSCRIPT = \"SCRIPT\",\n\tTRUE = \"true\",\n\tcloseScript = '\"></script>',\n\topenScript = '<script type=\"jsv',\n\tdeferAttr = jsvAttrStr + \"-df\",\n\tbindElsSel = \"script,[\" + jsvAttrStr + \"]\",\n\tfnSetters = {\n\t\tvalue: \"val\",\n\t\tinput: \"val\",\n\t\thtml: HTML,\n\t\ttext: \"text\"\n\t},\n\tvalueBinding = {from: \"value\", to: \"value\"},\n\tisCleanCall = 0,\n\toldCleanData = $.cleanData,\n\toldJsvDelimiters = $viewsSettings.delimiters,\n\tsafeFragment = document.createDocumentFragment(),\n\tqsa = document.querySelector,\n\n\t// elContent maps tagNames which have only element content, so may not support script nodes.\n\telContent = {ol: 1, ul: 1, table: 1, tbody: 1, thead: 1, tfoot: 1, tr: 1, colgroup: 1, dl: 1, select: 1, optgroup: 1, svg: 1, svg_ns: 1},\n\tbadParent = {tr: \"table\"},\n\t// wrapMap provide appropriate wrappers for inserting innerHTML, used in insertBefore\n\t// We have to close these tags to support XHTML (#13200)\n\t// TODO investigate whether more recent jQuery implementation using wrapMap in domManip/$().html() etc. is better optimized now...\n\tvoidElems = {br: 1, img: 1, input: 1, hr: 1, area: 1, base: 1, col: 1, link: 1, meta: 1,\n\t\tcommand: 1, embed: 1, keygen: 1, param: 1, source: 1, track: 1, wbr: 1},\n\tdisplayStyles = {},\n\tbindingStore = {},\n\tbindingKey = 1,\n\trViewPath = /^#(view\\.?)?/,\n\trConvertMarkers = /((\\/>)|<\\/(\\w+)>|)(\\s*)([#\\/]\\d+(?:_|(\\^)))`(\\s*)(<\\w+(?=[\\s\\/>]))?|\\s*(?:(<\\w+(?=[\\s\\/>]))|<\\/(\\w+)>(\\s*)|(\\/>)\\s*|(>)|$)/g,\n\trOpenViewMarkers = /(#)()(\\d+)(_)/g,\n\trOpenMarkers = /(#)()(\\d+)([_^])/g,\n\trViewMarkers = /(?:(#)|(\\/))(\\d+)(_)/g,\n\trOpenTagMarkers = /(#)()(\\d+)(\\^)/g,\n\trMarkerTokens = /(?:(#)|(\\/))(\\d+)([_^])([-+@\\d]+)?/g,\n\trSplitBindings = /&(\\d+)\\+?/g,\n\tgetComputedStyle = global.getComputedStyle;\n\n$observable = $.observable;\n\nif (!$observable) {\n\t// JsObservable is not loaded.\n\tthrow requiresStr + \"JsObservable\"; // jquery.observable.js must be loaded before JsViews\n}\n\n$observe = $observable.observe;\n\n//========================== Top-level functions ==========================\n\n//===============\n// Event handlers\n//===============\n\nfunction elemChangeHandler(ev, params, sourceValue) {\n\tvar setter, cancel, fromAttr, linkCtx, cvtBack, cnvtName, target, $source, view, binding, oldLinkCtx, onBeforeChange, onAfterChange, tag, to, eventArgs, exprOb,\n\t\tsource = ev.target,\n\t\tbindings = source._jsvBnd;\n\n\t// _jsvBnd is a string with the syntax: \"&bindingId1&bindingId2\"\n\tif (bindings) {\n\t\twhile (binding = rSplitBindings.exec(bindings)) {\n\t\t\tif (binding = bindingStore[binding[1]]) {\n\t\t\t\tif (to = binding.to) {\n\t\t\t\t\t// The binding has a 'to' field, which is of the form [[targetObject, toPath], cvtBack]\n\t\t\t\t\tlinkCtx = binding.linkCtx;\n\t\t\t\t\tview = linkCtx.view;\n\t\t\t\t\ttag = linkCtx.tag;\n\t\t\t\t\t$source = $(source);\n\t\t\t\t\tonBeforeChange = view.hlp(onBeforeChangeStr); // TODO Can we optimize this and other instances of same?\n\t\t\t\t\tonAfterChange = view.hlp(onAfterChangeStr); // TODO Can we optimize this and other instances of same\n\t\t\t\t\tfromAttr = defaultAttr(source);\n\t\t\t\t\tsetter = fnSetters[fromAttr];\n\t\t\t\t\tif (sourceValue === undefined) {\n\t\t\t\t\t\tsourceValue = $isFunction(fromAttr)\n\t\t\t\t\t\t\t? fromAttr(source)\n\t\t\t\t\t\t\t: setter\n\t\t\t\t\t\t\t\t? $source[setter]()\n\t\t\t\t\t\t\t\t: $source.attr(fromAttr);\n\t\t\t\t\t}\n\t\t\t\t\tcnvtName = to[1];\n\t\t\t\t\tto = to[0]; // [object, path]\n\t\t\t\t\tto = to + \"\" === to ? [linkCtx.data, to] : to;\n\t\t\t\t\tif (cnvtName) {\n\t\t\t\t\t\tif ($isFunction(cnvtName)) {\n\t\t\t\t\t\t\tcvtBack = cnvtName;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcvtBack = view.getRsc(\"converters\", cnvtName);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (cvtBack) {\n\t\t\t\t\t\tsourceValue = cvtBack.call(tag, sourceValue);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Set linkCtx on view, dynamically, just during this handler call\n\t\t\t\t\toldLinkCtx = view.linkCtx;\n\t\t\t\t\tview.linkCtx = linkCtx;\n\t\t\t\t\teventArgs = {\n\t\t\t\t\t\tchange: \"change\",\n\t\t\t\t\t\toldValue: linkCtx._val,\n\t\t\t\t\t\tvalue: sourceValue\n\t\t\t\t\t};\n\t\t\t\t\tif ((!onBeforeChange || !(cancel = onBeforeChange.call(linkCtx, ev, eventArgs) === false)) &&\n\t\t\t\t\t\t\t(!tag || !tag.onBeforeChange || !(cancel = tag.onBeforeChange(ev, eventArgs) === false)) &&\n\t\t\t\t\t\t\tsourceValue !== undefined) {\n\t\t\t\t\t\ttarget = to[0]; // [object, path]\n\t\t\t\t\t\tif (sourceValue !== undefined && target) {\n\t\t\t\t\t\t\tif (target._jsv) {\n\t\t\t\t\t\t\t\texprOb = target;\n\t\t\t\t\t\t\t\ttarget = linkCtx.data;\n\t\t\t\t\t\t\t\twhile (exprOb && exprOb.sb) {\n\t\t\t\t\t\t\t\t\ttarget = linkCtx._ctxCb(exprOb, target);\n\t\t\t\t\t\t\t\t\texprOb = exprOb.sb;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (tag) {\n\t\t\t\t\t\t\t\ttag._.chging = true; // marker to prevent tag change event triggering its own refresh\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t$observable(target).setProperty(to[2] || to[1], sourceValue);\n\t\t\t\t\t\t\tif (onAfterChange) {\n\t\t\t\t\t\t\t\tonAfterChange.call(linkCtx, ev, eventArgs);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (tag) {\n\t\t\t\t\t\t\t\tif (tag.onAfterChange) {\n\t\t\t\t\t\t\t\t\ttag.onAfterChange(ev, eventArgs);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttag._.chging = undefined; // clear the marker\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlinkCtx._val = sourceValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tview.linkCtx = oldLinkCtx;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction propertyChangeHandler(ev, eventArgs, linkFn) {\n\tvar attr, sourceValue, noUpdate, forceUpdate, hasError, onError,\n\t\tlinkCtx = this,\n\t\ttag = linkCtx.tag,\n\t\tsource = linkCtx.data,\n\t\ttarget = linkCtx.elem,\n\t\tcvt = linkCtx.convert,\n\t\tparentElem = target.parentNode,\n\t\tview = linkCtx.view,\n\t\toldLinkCtx = view.linkCtx,\n\t\tonEvent = view.hlp(onBeforeChangeStr);\n\n\t// Set linkCtx on view, dynamically, just during this handler call\n\tview.linkCtx = linkCtx;\n\n\tif (parentElem && (!onEvent || !(eventArgs && onEvent.call(linkCtx, ev, eventArgs) === false))\n\t\t\t// If data changed, the ev.data is set to be the path. Use that to filter the handler action...\n\t\t\t&& !(eventArgs && ev.data.prop !== \"*\" && ev.data.prop !== eventArgs.path)) {\n\n\t\tif (eventArgs) {\n\t\t\tlinkCtx.eventArgs = eventArgs;\n\t\t}\n\t\tif (eventArgs || linkCtx._toLk) {\n\t\t\t// If eventArgs are defined, this is a data update\n\t\t\t// Otherwise this is the initial data-link rendering call. Bind on this the first time it get called\n\t\t\tlinkCtx._toLk = 0; // Remove flag to skip unneccessary rebinding next time\n\t\t\tif (linkFn._er) {\n\t\t\t\t// data-link=\"exprUsingTagOrCvt with onerror=...\" - e.g. {tag ... {cvt:... {:... convert='cvt'\n\t\t\t\ttry {\n\t\t\t\t\tsourceValue = linkFn(source, view);\n\t\t\t\t} catch (e) {\n\t\t\t\t\thasError = linkFn._er;\n\t\t\t\t\tonError = error(e,view,(new Function(\"data,view\", \"return \" + hasError + \";\"))(source, view));\n\t\t\t\t\tsourceValue = [{props: {}, args: [onError]}];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsourceValue = linkFn(source, view, $views);\n\t\t\t}\n\t\t\t// Compiled link expression for linkTag: return value for data-link=\"{:xxx}\" with no cvt or cvtBk, otherwise tagCtx or tagCtxs\n\n\t\t\tattr = getTargetVal(sourceValue, linkCtx, tag = linkCtx.tag,\n\t\t\t\t\tlinkCtx.attr || defaultAttr(target, true, cvt !== undefined)\n\t\t\t\t);\n\n\t\t\tif (tag) {\n\t\t\t\t// Existing tag instance\n\t\t\t\tforceUpdate = hasError || tag._er;\n\t\t\t\t// If the new tagCtxs hasError or the previous tagCtxs had error, then force update\n\t\t\t\tsourceValue = sourceValue[0] ? sourceValue : [sourceValue];\n\t\t\t\tnoUpdate = !forceUpdate && eventArgs && tag.onUpdate && tag.onUpdate(ev, eventArgs, sourceValue) === false;\n\n\t\t\t\tmergeCtxs(tag, sourceValue, forceUpdate);\n\n\t\t\t\tif (noUpdate || attr === NONE) {\n\t\t\t\t\t// onUpdate returned false, or attr === \"none\", or this is an update coming from the tag's own change event\n\t\t\t\t\t// - so don't refresh the tag: we just use the new tagCtxs merged from the sourceValue,\n\t\t\t\t\t// (which may optionally have been modifed in onUpdate()...) and then bind, and we are done\n\t\t\t\t\tif (attr === HTML && tag.onBeforeLink) {\n\t\t\t\t\t\ttag.onBeforeLink();\n\t\t\t\t\t}\n\t\t\t\t\tcallAfterLink(tag);\n\t\t\t\t\tobserveAndBind(linkCtx, source, target);\n\t\t\t\t\tview.linkCtx = oldLinkCtx;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (tag._.chging) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tsourceValue = tag.tagName === \":\" // Call convertVal if it is a {{cvt:...}} - otherwise call renderTag\n\t\t\t\t\t? $views._cnvt(tag.cvt, view, sourceValue[0])\n\t\t\t\t\t: $views._tag(tag, view, view.tmpl, sourceValue, true, onError);\n\t\t\t} else if (linkFn._tag) {\n\t\t\t\t// For {{: ...}} without a convert or convertBack, we already have the sourceValue, and we are done\n\t\t\t\t// For {{: ...}} with either cvt or cvtBack we call convertVal to get the sourceValue and instantiate the tag\n\t\t\t\t// If cvt is undefined then this is a tag, and we call renderTag to get the rendered content and instantiate the tag\n\t\t\t\tcvt = cvt === \"\" ? TRUE : cvt; // If there is a cvtBack but no cvt, set cvt to \"true\"\n\t\t\t\tsourceValue = cvt // Call convertVal if it is a {{cvt:...}} - otherwise call renderTag\n\t\t\t\t\t? $views._cnvt(cvt, view, sourceValue[0] || sourceValue) // convertVal\n\t\t\t\t\t: $views._tag(linkFn._tag, view, view.tmpl, sourceValue, true, onError); // renderTag\n\n\t\t\t\ttag = linkCtx.tag; // In both convertVal and renderTag we have instantiated a tag\n\t\t\t\tattr = linkCtx.attr || attr; // linkCtx.attr may have been set to tag.attr during tag instantiation in renderTag\n\t\t\t}\n\n\t\t\tif (updateContent(sourceValue, linkCtx, attr, tag)\n\t\t\t\t\t&& eventArgs\n\t\t\t\t\t&& (onEvent = view.hlp(onAfterChangeStr))) {\n\t\t\t\tonEvent.call(linkCtx, ev, eventArgs);\n\t\t\t}\n\t\t\tlinkCtx._noUpd = 0; // For data-link=\"^{...}\" remove _noUpd flag so updates on subsequent calls\n\n\t\t\tif (tag) {\n\t\t\t\ttag._er = hasError;\n\t\t\t\tcallAfterLink(tag, eventArgs);\n\t\t\t}\n\t\t}\n\n\t\tobserveAndBind(linkCtx, source, target);\n\n\t\t// Remove dynamically added linkCtx from view\n\t\tview.linkCtx = oldLinkCtx;\n\t}\n}\n\nfunction getTargetVal(sourceValue, linkCtx, tag, attr) {\n\tvar currentValue, setter, css, $target,\n\t\ttarget = tag && tag.parentElem || linkCtx.elem;\n\n\tif (sourceValue !== undefined) {\n\t\t$target = $(target);\n\t\tattr = tag && tag.attr || attr;\n\t\tif ($isFunction(sourceValue)) {\n\t\t\terror(linkCtx.expr + \": missing parens\");\n\t\t}\n\n\t\tif (css = /^css-/.test(attr) && attr.slice(4)) {\n\t\t\tcurrentValue = $.style(target, css);\n\t\t\tif (+sourceValue === sourceValue) {\n\t\t\t\t// Optimization for perf on integer values - e.g. css-width{:width+'px'}\n\t\t\t\tcurrentValue = parseInt(currentValue);\n\t\t\t}\n\t\t} else if (attr !== \"link\") { // attr === \"link\" is for tag controls which do data binding but have no rendered output or target\n\t\t\tif (attr === \"value\") {\n\t\t\t\tif (target.type === CHECKBOX) {\n\t\t\t\t\tcurrentValue = $target.prop(attr = CHECKED);\n\t\t\t\t}\n\t\t\t} else if (attr === RADIO) {\n\t\t\t\tif (target.value === (\"\" + sourceValue)) {\n\t\t\t\t\tcurrentValue = $target.prop(CHECKED);\n\t\t\t\t} else {\n\t\t\t\t\treturn attr;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (currentValue === undefined) {\n\t\t\t\tsetter = fnSetters[attr];\n\t\t\t\tcurrentValue = setter ? $target[setter]() : $target.attr(attr);\n\t\t\t}\n\t\t}\n\t\tlinkCtx._val = currentValue;\n\t}\n\treturn attr;\n}\n\nfunction setDefer(elem, value) {\n\telem._df = value; // Use both an expando and an attribute to track defered tokens. Attribute is needed for querySelectorAll for getViewInfos (childTags)\n\telem[(value ? \"set\" : \"remove\") + \"Attribute\"](deferAttr, \"\");\n}\n\nfunction updateContent(sourceValue, linkCtx, attr, tag) {\n\t// When called for a tag, either in tag.refresh() or propertyChangeHandler(), returns a promise (and supports async)\n\t// When called (in propertyChangeHandler) for target HTML returns true\n\t// When called (in propertyChangeHandler) for other targets returns boolean for \"changed\"\n\tvar setter, prevNode, nextNode, promise, nodesToRemove, useProp, tokens, id, openIndex, closeIndex, testElem, nodeName, cStyle,\n\t\trenders = attr !== NONE && sourceValue !== undefined && !linkCtx._noUpd, // For data-link=\"^{...}\", don't update the first time (no initial render) - e.g. to leave server rendered values.\n\t\tsource = linkCtx.data,\n\t\ttarget = tag && tag.parentElem || linkCtx.elem,\n\t\t$target = $(target),\n\t\tview = linkCtx.view,\n\t\ttargetVal = linkCtx._val,\n\t\toldLinkCtx = view.linkCtx,\n\t\t// If not a tag and not targeting HTML, we can use the ._val obtained from getTargetVal()\n\t\t// and only update when the new value (sourceValue) has changed from the previous one\n\t\tchange = tag || attr === HTML;\n\n\tif (tag) {\n\t\t// Initialize the tag with element references\n\t\ttag.parentElem = tag.parentElem || (linkCtx.expr || tag._elCnt) ? target : target.parentNode;\n\t\tprevNode = tag._prv;\n\t\tnextNode = tag._nxt;\n\t}\n\tif (!renders) {\n\t\tif (attr === HTML && tag && tag.onBeforeLink) {\n\t\t\ttag.onBeforeLink();\n\t\t}\n\t\treturn;\n\t}\n\n\tif (attr === \"visible\") {\n\t\tattr = \"css-display\";\n\t}\n\tif (/^css-/.test(attr)) {\n\t\tif (linkCtx.attr === \"visible\") {\n\t\t\t// Get the current display style\n\t\t\tcStyle = (target.currentStyle || getComputedStyle.call(global, target, \"\")).display;\n\n\t\t\tif (sourceValue) {\n\t\t\t\t// We are showing the element.\n\t\t\t\t// Get the cached 'visible' display value from the -jsvd expando\n\t\t\t\tsourceValue = target._jsvd\n\t\t\t\t\t// Or, if not yet cached, get the current display value\n\t\t\t\t\t|| cStyle;\n\t\t\t\tif (sourceValue === NONE && !(sourceValue = displayStyles[nodeName = target.nodeName])) {\n\t\t\t\t\t// Currently display value is 'none', and the 'visible' style has not been cached.\n\t\t\t\t\t// We create an element to find the correct 'visible' display style for this nodeName\n\t\t\t\t\ttestElem = document.createElement(nodeName);\n\t\t\t\t\tdocument.body.appendChild(testElem);\n\n\t\t\t\t\t// Get the default style for this HTML tag to use as 'visible' style\n\t\t\t\t\tsourceValue\n\t\t\t\t\t\t// and cache it as a hash against nodeName\n\t\t\t\t\t\t= displayStyles[nodeName]\n\t\t\t\t\t\t= (testElem.currentStyle || getComputedStyle.call(global, testElem, \"\")).display;\n\t\t\t\t\tdocument.body.removeChild(testElem);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We are hiding the element.\n\t\t\t\t// Cache the current display value as 'visible' style, on _jsvd expando, for when we show the element again\n\t\t\t\ttarget._jsvd = cStyle;\n\t\t\t\tsourceValue = NONE; // Hide the element\n\t\t\t}\n\t\t}\n\t\tif (change = change || targetVal !== sourceValue) {\n\t\t\t$.style(target, attr.slice(4), sourceValue);\n\t\t}\n\t} else if (attr !== \"link\") { // attr === \"link\" is for tag controls which do data binding but have no rendered output or target\n\t\tif (/^data-/.test(attr)) {\n\t\t\t$.data(target, attr.slice(5), sourceValue); // Support for binding to data attributes: data-foo{:expr}: data-foo attribute will be\n\t\t\t// expr.toString(), but $.data(element, \"foo\") and $(element).data(\"foo\") will actually return value of expr, even if of type object\n\t\t}\n\t\tif (attr === CHECKED) {\n\t\t\tuseProp = true;\n\t\t\tsourceValue = sourceValue && sourceValue !== \"false\";\n\t\t\t// The string value \"false\" can occur with data-link=\"checked{attr:expr}\" - as a result of attr, and hence using convertVal()\n\t\t\t// We will set the \"checked\" property\n\t\t\t// We will compare this with the current value\n\t\t} else if (attr === RADIO) {\n\t\t\t// This is a special binding attribute for radio buttons, which corresponds to the default 'to' binding.\n\t\t\t// This allows binding both to value (for each input) and to the default checked radio button (for each input in named group,\n\t\t\t// e.g. binding to parent data).\n\t\t\t// Place value binding first: <input type=\"radio\" data-link=\"value{:name} {:#get('data').data.currency:} \" .../>\n\t\t\t// or (allowing any order for the binding expressions):\n\t\t\t// <input type=\"radio\" value=\"{{:name}}\" data-link=\"{:#get('data').data.currency:} value^{:name}\" .../>\n\n\t\t\tif (target.value === (\"\" + sourceValue)) {\n\t\t\t\t// If the data value corresponds to the value attribute of this radio button input, set the checked property to true\n\t\t\t\tsourceValue = useProp = true;\n\t\t\t\tattr = CHECKED;\n\t\t\t} else {\n\t\t\t\t// Otherwise, go straight to observeAndBind, without updating.\n\t\t\t\t// (The browser will remove the 'checked' attribute, when another radio button in the group is checked).\n\t\t\t\tobserveAndBind(linkCtx, source, target);\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (attr === \"selected\" || attr === \"disabled\" || attr === \"multiple\" || attr === \"readonly\") {\n\t\t\tsourceValue = (sourceValue && sourceValue !== \"false\") ? attr : null;\n\t\t\t// Use attr, not prop, so when the options (for example) are changed dynamically, but include the previously selected value,\n\t\t\t// they will still be selected after the change\n\t\t}\n\n\t\tif (setter = fnSetters[attr]) {\n\t\t\tif (attr === HTML) {\n\t\t\t\t// Set linkCtx on view, dynamically, just during this handler call\n\t\t\t\tview.linkCtx = linkCtx;\n\t\t\t\tif (tag && tag._.inline) {\n\t\t\t\t\tnodesToRemove = tag.nodes(true);\n\t\t\t\t\tif (tag._elCnt) {\n\t\t\t\t\t\tif (prevNode && prevNode !== nextNode) {\n\t\t\t\t\t\t\t// This prevNode will be removed from the DOM, so transfer the view tokens on prevNode to nextNode of this 'viewToRefresh'\n\t\t\t\t\t\t\ttransferViewTokens(prevNode, nextNode, target, tag._tgId, \"^\", true);\n\t\t\t\t\t\t} else if (tokens = target._df) { // This occurs when there is no nextNode, and so the target._df may include tokens referencing\n\t\t\t\t\t\t\t// view and tag bindings contained within the open and close tokens of the updated tag control. They need to be processed (disposed)\n\t\t\t\t\t\t\tid = tag._tgId + \"^\";\n\t\t\t\t\t\t\topenIndex = tokens.indexOf(\"#\" + id) + 1;\n\t\t\t\t\t\t\tcloseIndex = tokens.indexOf(\"/\" + id);\n\n\t\t\t\t\t\t\tif (openIndex && closeIndex > 0) {\n\t\t\t\t\t\t\t\topenIndex += id.length;\n\t\t\t\t\t\t\t\tif (closeIndex > openIndex) {\n\t\t\t\t\t\t\t\t\tsetDefer(target, tokens.slice(0, openIndex) + tokens.slice(closeIndex));\n\t\t\t\t\t\t\t\t\tdisposeTokens(tokens.slice(openIndex, closeIndex));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprevNode = prevNode\n\t\t\t\t\t\t\t? prevNode.previousSibling\n\t\t\t\t\t\t\t: nextNode\n\t\t\t\t\t\t\t\t? nextNode.previousSibling\n\t\t\t\t\t\t\t\t: target.lastChild;\n\t\t\t\t\t}\n\t\t\t\t\t// Remove HTML nodes\n\t\t\t\t\t$(nodesToRemove).remove(); // Note if !tag._elCnt removing the nodesToRemove will process and dispose view and tag bindings contained within the updated tag control\n\n\t\t\t\t\tif (tag && tag.onBeforeLink) {\n\t\t\t\t\t\ttag.onBeforeLink();\n\t\t\t\t\t}\n\t\t\t\t\t// Insert and link new content\n\t\t\t\t\tpromise = view.link(view.data, target, prevNode, nextNode, sourceValue, tag && {tag: tag._tgId, lazyLink: tag.tagCtx.props.lazyLink});\n\t\t\t\t} else {\n\t\t\t\t\t// data-linked value targeting innerHTML: data-link=\"html{:expr}\"\n\t\t\t\t\tif (renders) {\n\t\t\t\t\t\t$target.empty();\n\t\t\t\t\t}\n\t\t\t\t\tif (tag && tag.onBeforeLink) {\n\t\t\t\t\t\ttag.onBeforeLink();\n\t\t\t\t\t}\n\t\t\t\t\tif (renders) {\n\t\t\t\t\t\tpromise = view.link(source, target, prevNode, nextNode, sourceValue, tag && {tag: tag._tgId});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Remove dynamically added linkCtx and ctx from view\n\t\t\t\tview.linkCtx = oldLinkCtx;\n\t\t\t} else if (change = change || targetVal !== sourceValue) {\n\t\t\t\tif (attr === \"text\" && target.children && !target.children[0]) {\n\t\t\t\t\t// This code is faster then $target.text()\n\t\t\t\t\tif (target.textContent !== undefined) {\n\t\t\t\t\t\ttarget.textContent = sourceValue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget.innerText = sourceValue === null ? \"\" : sourceValue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$target[setter](sourceValue);\n\t\t\t\t}\n// Removing this for now, to avoid side-effects when you programmatically set the value, and want the focus to stay on the text box\n//\t\t\t\t\t\t\tif (target.nodeName.toLowerCase() === \"input\") {\n//\t\t\t\t\t\t\t\t$target.blur(); // Issue with IE. This ensures HTML rendering is updated.\n//\t\t\t\t\t\t\t}\n\t\t\t\t\t\t// Data link the new contents of the target node\n\t\t\t}\n\t\t} else if (change = change || targetVal !== sourceValue) {\n\t\t\t// Setting an attribute to undefined should remove the attribute\n\t\t\t$target[useProp ? \"prop\" : \"attr\"](attr, sourceValue === undefined && !useProp ? null : sourceValue);\n\t\t}\n\t\tlinkCtx._val = sourceValue;\n\t}\n\treturn promise || change;\n}\n\nfunction arrayChangeHandler(ev, eventArgs) {\n\tvar self = this,\n\t\tonBeforeChange = self.hlp(onBeforeChangeStr),\n\t\tonAfterChange = self.hlp(onAfterChangeStr);\n\tif (!onBeforeChange || onBeforeChange.call(this, ev, eventArgs) !== false) {\n\t\tif (eventArgs) {\n\t\t\t// This is an observable action (not a trigger/handler call from pushValues, or similar, for which eventArgs will be null)\n\t\t\tvar action = eventArgs.change,\n\t\t\t\tindex = eventArgs.index,\n\t\t\t\titems = eventArgs.items;\n\n\t\t\tswitch (action) {\n\t\t\t\tcase \"insert\":\n\t\t\t\t\tself.addViews(index, items);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"remove\":\n\t\t\t\t\tself.removeViews(index, items.length);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"move\":\n\t\t\t\t\tself.refresh(); // Could optimize this\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"refresh\":\n\t\t\t\t\tself.refresh();\n\t\t\t\t\tbreak;\n\t\t\t\t\t// Other cases: (e.g.undefined, for setProperty on observable object) etc. do nothing\n\t\t\t}\n\t\t}\n\t\tif (onAfterChange) {\n\t\t\tonAfterChange.call(this, ev, eventArgs);\n\t\t}\n\t}\n}\n\n//=============================\n// Utilities for event handlers\n//=============================\n\nfunction setArrayChangeLink(view) {\n\t// Add/remove arrayChange handler on view\n\tvar handler, arrayBinding,\n\t\ttype = view.type, // undefined if view is being removed\n\t\tdata = view.data,\n\t\tbound = view._.bnd; // true for top-level link() or data-link=\"{for}\", or the for tag instance for {^{for}} (or for any custom tag that has an onArrayChange handler)\n\n\tif (!view._.useKey && bound) {\n\t\t// This is an array view. (view._.useKey not defined => data is array), and is data-bound to collection change events\n\n\t\tif (arrayBinding = view._.bndArr) {\n\t\t\t// First remove the current handler if there is one\n\t\t\t$([arrayBinding[1]]).off(arrayChangeStr, arrayBinding[0]);\n\t\t\tview._.bndArr = undefined;\n\t\t}\n\t\tif (bound !== !!bound) {\n\t\t\t// bound is not a boolean, so it is the data-linked tag that 'owns' this array binding - e.g. {^{for...}}\n\t\t\tif (type) {\n\t\t\t\tbound._.arrVws[view._.id] = view;\n\t\t\t} else {\n\t\t\t\tdelete bound._.arrVws[view._.id]; // if view.type is undefined, view is being removed\n\t\t\t}\n\t\t} else if (type && data) {\n\t\t\t// If this view is not being removed, but the data array has been replaced, then bind to the new data array\n\t\t\thandler = function(ev) {\n\t\t\t\tif (!(ev.data && ev.data.off)) {\n\t\t\t\t\t// Skip if !!ev.data.off: - a handler that has already been removed (maybe was on handler collection at call time - then removed by another handler)\n\t\t\t\t\t// If view.type is undefined, do nothing. (Corresponds to case where there is another handler on the same data whose\n\t\t\t\t\t// effect was to remove this view, and which happened to precede this event in the trigger sequence. So although this\n\t\t\t\t\t// event has been removed now, it is still called since already on the trigger sequence)\n\t\t\t\t\tarrayChangeHandler.apply(view, arguments);\n\t\t\t\t}\n\t\t\t};\n\t\t\t$([data]).on(arrayChangeStr, handler);\n\t\t\tview._.bndArr = [handler, data];\n\t\t}\n\t}\n}\n\nfunction defaultAttr(elem, to, linkGetVal) {\n\t// to: true - default attribute for setting data value on HTML element; false: default attribute for getting value from HTML element\n\t// Merge in the default attribute bindings for this target element\n\tvar nodeName = elem.nodeName.toLowerCase(),\n\t\tattr =\n\t\t\t$viewsSettings.merge[nodeName] // get attr settings for input textarea select or optgroup\n\t\t\t|| elem.contentEditable === TRUE && {to: HTML, from: HTML}; // Or if contentEditable set to \"true\" set attr to \"html\"\n\treturn attr\n\t\t? (to\n\t\t\t? ((nodeName === \"input\" && elem.type === RADIO) // For radio buttons, bind from value, but bind to 'radio' - special value.\n\t\t\t\t? RADIO\n\t\t\t\t: attr.to)\n\t\t\t: attr.from)\n\t\t: to\n\t\t\t? linkGetVal ? \"text\" : HTML // Default innerText for data-link=\"a.b.c\" or data-link=\"{:a.b.c}\" (with or without converters)- otherwise innerHTML\n\t\t\t: \"\"; // Default is not to bind from\n}\n\n//==============================\n// Rendering and DOM insertion\n//==============================\n\nfunction renderAndLink(view, index, tmpl, views, data, context, refresh) {\n\tvar html, linkToNode, prevView, nodesToRemove, bindId,\n\t\tparentNode = view.parentElem,\n\t\tprevNode = view._prv,\n\t\tnextNode = view._nxt,\n\t\telCnt = view._elCnt;\n\n\tif (prevNode && prevNode.parentNode !== parentNode) {\n\t\terror(\"Missing parentNode\");\n\t\t// Abandon, since node has already been removed, or wrapper element has been inserted between prevNode and parentNode\n\t}\n\n\tif (refresh) {\n\t\tnodesToRemove = view.nodes();\n\t\tif (elCnt && prevNode && prevNode !== nextNode) {\n\t\t\t// This prevNode will be removed from the DOM, so transfer the view tokens on prevNode to nextNode of this 'viewToRefresh'\n\t\t\ttransferViewTokens(prevNode, nextNode, parentNode, view._.id, \"_\", true);\n\t\t}\n\t\t// Remove child views\n\t\tview.removeViews(undefined, undefined, true);\n\t\tlinkToNode = nextNode;\n\n\t\tif (elCnt) {\n\t\t\tprevNode = prevNode\n\t\t\t\t? prevNode.previousSibling\n\t\t\t\t: nextNode\n\t\t\t\t\t? nextNode.previousSibling\n\t\t\t\t\t: parentNode.lastChild;\n\t\t}\n\n\t\t// Remove HTML nodes\n\t\t$(nodesToRemove).remove();\n\n\t\tfor (bindId in view._.bnds) {\n\t\t\t// The view bindings may have already been removed above in: $(nodesToRemove).remove();\n\t\t\t// If not, remove them here:\n\t\t\tremoveViewBinding(bindId);\n\t\t}\n\t} else {\n\t\t// addViews. Only called if view is of type \"array\"\n\t\tif (index) {\n\t\t\t// index is a number, so indexed view in view array\n\t\t\tprevView = views[index - 1];\n\t\t\tif (!prevView) {\n\t\t\t\treturn false; // If subview for provided index does not exist, do nothing\n\t\t\t}\n\t\t\tprevNode = prevView._nxt;\n\t\t}\n\t\tif (elCnt) {\n\t\t\tlinkToNode = prevNode;\n\t\t\tprevNode = linkToNode\n\t\t\t\t? linkToNode.previousSibling         // There is a linkToNode, so insert after previousSibling, or at the beginning\n\t\t\t\t: parentNode.lastChild;              // If no prevView and no prevNode, index is 0 and the container is empty,\n\t\t\t\t// so prevNode = linkToNode = null. But if prevView._nxt is null then we set prevNode to parentNode.lastChild\n\t\t\t\t// (which must be before the prevView) so we insert after that node - and only link the inserted nodes\n\t\t} else {\n\t\t\tlinkToNode = prevNode.nextSibling;\n\t\t}\n\t}\n\thtml = tmpl.render(data, context, view._.useKey && refresh, view, refresh || index, true);\n\t// Pass in view._.useKey as test for noIteration (which corresponds to when self._.useKey > 0 and self.data is an array)\n\n\t// Link the new HTML nodes to the data\n\tview.link(data, parentNode, prevNode, linkToNode, html, prevView);\n//}, 0);\n}\n\n//=====================\n// addBindingMarkers\n//=====================\n\nfunction addBindingMarkers(value, view, tmplBindingKey) {\n\t// Insert binding markers into the rendered template output, which will get converted to appropriate\n\t// data-jsv attributes (element-only content) or script marker nodes (phrasing or flow content), in convertMarkers,\n\t// within view.link, prior to inserting into the DOM. Linking will then bind based on these markers in the DOM.\n\t// Added view markers: #m_...VIEW.../m_\n\t// Added tag markers: #m^...TAG..../m^\n\tvar id, tag, end;\n\tif (tmplBindingKey) {\n\t\t// This is a binding marker for a data-linked tag {^{...}}\n\t\tend = \"^`\";\n\t\ttag = view._.tag; // This is {^{>...}} or {^{tag ...}}, {{cvt:...} or {^{:...}}, and tag was defined in convertVal or renderTag\n\t\tid = tag._tgId;\n\t\tif (!id) {\n\t\t\tbindingStore[id = bindingKey++] = tag; // Store the tag temporarily, ready for databinding.\n\t\t\t// During linking, in addDataBinding, the tag will be attached to the linkCtx,\n\t\t\t// and then in observeAndBind, bindingStore[bindId] will be replaced by binding info.\n\t\t\ttag._tgId = \"\" + id;\n\t\t}\n\t} else {\n\t\t// This is a binding marker for a view\n\t\t// Add the view to the store of current linked views\n\t\tend = \"_`\";\n\t\tviewStore[id = view._.id] = view;\n\t}\n\t// Example: \"#23^TheValue/23^\"\n\treturn \"#\" + id + end\n\t\t+ (value != undefined ? value : \"\") // For {^{:name}} this gives the equivalent semantics to compiled\n\t\t\t\t\t\t\t\t\t\t\t// (v=data.name)!=null?v:\"\"; used in {{:name}} or data-link=\"name\"\n\t\t+ \"/\" + id + end;\n}\n\n//==============================\n// Data-linking and data binding\n//==============================\n\n//---------------\n// observeAndBind\n//---------------\n\nfunction observeAndBind(linkCtx, source, target) { //TODO? linkFnArgs) {;\n\tvar binding, l, linkedElem, exprFnDeps, exprOb,\n\t\ttag = linkCtx.tag,\n\t\tcvtBk = linkCtx.convertBack,\n\t\tdepends = [],\n\t\tbindId = linkCtx._bndId || \"\" + bindingKey++,\n\t\thandler = linkCtx._hdl;\n\n\tlinkCtx._bndId = undefined;\n\n\tif (tag) {\n\t\t// Use the 'depends' paths set on linkCtx.tag - which may have been set on declaration\n\t\t// or in events: init, render, onBeforeLink, onAfterLink etc.\n\t\tdepends = tag.depends || depends;\n\t\tdepends = $isFunction(depends) ? tag.depends(tag) : depends;\n\t\tlinkedElem = tag.linkedElem;\n\t}\n\tif (!linkCtx._depends || (\"\" + linkCtx._depends !== \"\" + depends)) {\n\t\t// Only bind the first time, or if the new depends (toString) has changed from when last bound\n\t\tif (linkCtx._depends) {\n\t\t\t// Unobserve previous binding\n\t\t\t$observable._apply(false, [source], linkCtx._depends, handler, true);\n\t\t}\n\n\t\texprFnDeps = linkCtx.fn.deps.slice(); // Make a copy of the dependency paths for the compiled linkCtx expression - to pass to observe(). In getInnerCb(),\n\t\t// (and whenever the object is updated, in innerCb), we will set exprOb.ob to the current object returned by that computed expression, for this view.\n\t\tl = exprFnDeps.length;\n\t\twhile (l--) {\n\t\t\texprOb = exprFnDeps[l];\n\t\t\tif (exprOb._jsv) {\n\t\t\t\t// This path is an 'exprOb', corresponding to a computed, returning an object. We replace the exprOb by\n\t\t\t\t// a view-binding-specific exprOb instance. The current object will be stored as exprOb.ob.\n\t\t\t\texprFnDeps[l] = $extend({}, exprOb);\n\t\t\t}\n\t\t}\n\n\t\tbinding = $observable._apply(\n\t\t\tfalse,\n\t\t\t[source],\n\t\t\texprFnDeps, // flatten the paths - to gather all the dependencies across args and bound params\n\t\t\tdepends,\n\t\t\thandler,\n\t\t\tlinkCtx._ctxCb);\n\t\t// The binding returned by $observe has a bnd array with the source objects of the individual bindings.\n\n\t\tbinding.elem = target; // The target of all the individual bindings\n\t\tbinding.linkCtx = linkCtx;\n\t\tbinding._tgId = bindId;\n\n\t\t// Add to the _jsvBnd on the target the view id and binding id - for unbinding when the target element is removed\n\t\ttarget._jsvBnd = target._jsvBnd || \"\";\n\t\ttarget._jsvBnd += \"&\" + bindId;\n\t\tlinkCtx._depends = depends;\n\t\t// Store the binding key on the view, for disposal when the view is removed\n\t\tlinkCtx.view._.bnds[bindId] = bindId;\n\t\t// Store the binding.\n\t\tbindingStore[bindId] = binding; // Note: If this corresponds to a data-linked tag, we are replacing the\n\t\t// temporarily stored tag by the stored binding. The tag will now be at binding.linkCtx.tag\n\n\t\tif (linkedElem) {\n\t\t\tbinding.to = [[], cvtBk];\n\t\t}\n\t\tif (linkedElem || cvtBk !== undefined) {\n\t\t\tbindTo(binding, tag && tag.convertBack || cvtBk);\n\t\t}\n\t\tif (tag) {\n\t\t\tif (tag.onAfterBind) {\n\t\t\t\ttag.onAfterBind(binding);\n\t\t\t}\n\t\t\tif (!tag.flow && !tag._.inline) {\n\t\t\t\ttarget.setAttribute(jsvAttrStr, (target.getAttribute(jsvAttrStr)||\"\") + \"#\" + bindId + \"^/\" + bindId + \"^\");\n\t\t\t\ttag._tgId = \"\" + bindId;\n\t\t\t}\n\t\t}\n\t}\n\tif (linkedElem && linkedElem[0]) {\n\t\tif (tag._.radio) {\n\t\t\tlinkedElem = linkedElem.children(\"input[type=radio]\");\n\t\t}\n\n\t\tl = linkedElem.length;\n\t\twhile (l--) {\n\t\t\tlinkedElem[l]._jsvBnd = linkedElem[l]._jsvBnd || (target._jsvBnd + \"+\");\n\t\t\t// Add a \"+\" for cloned binding - so removing elems with cloned bindings will not remove the 'parent' binding from the bindingStore.\n\t\t\tlinkedElem[l]._jsvLkEl = tag;\n\t\t}\n\t}\n}\n\n//-------\n// $.link\n//-------\n\nfunction tmplLink(to, from, context, noIteration, parentView, prevNode, nextNode) {\n\treturn $link(this, to, from, context, noIteration, parentView, prevNode, nextNode);\n}\n\nfunction $link(tmplOrLinkTag, to, from, context, noIteration, parentView, prevNode, nextNode) {\n\t// When linking from a template, prevNode and nextNode parameters are ignored\n\n\t// Consider supporting this: $.link(true, data) - (top-level activation) target defaults to body.\n\t// But with templates, defaulting to body makes less sense, so not support for now...\n\t\t//if (to + \"\" !== to) {\n\t\t// nextNode = prevNode;\n\t\t// prevNode = parentView;\n\t\t// parentView = context;\n\t\t// context = from;\n\t\t// from = to;\n\t\t// to = \"body\";\n\t\t//}\n\tif (context === true) {\n\t\tnoIteration = context; // passing boolean as third param - noIteration\n\t\tcontext = undefined;\n\t} else if (typeof context !== \"object\") {\n\t\tcontext = undefined; // context must be a boolean (noIteration) or a plain object\n\t} else {\n\t\tcontext = $extend({}, context);\n\t}\n\tif (tmplOrLinkTag && to) {\n\t\tto = to.jquery ? to : $(to); // to is a jquery object or an element or selector\n\n\t\tif (!activeBody) {\n\t\t\tactiveBody = document.body;\n\t\t\t$(activeBody)\n\t\t\t\t.on(elementChangeStr, elemChangeHandler)\n\t\t\t\t.on('blur', '[contenteditable]', elemChangeHandler);\n\t\t}\n\n\t\tvar i, k, html, vwInfos, view, placeholderParent, targetEl, refresh, topLevelCall,\n\t\t\tonRender = addBindingMarkers,\n\t\t\treplaceMode = context && context.target === \"replace\",\n\t\t\tl = to.length;\n\n\t\twhile (l--) {\n\t\t\ttargetEl = to[l];\n\n\t\t\tparentView = parentView || $view(targetEl);\n\n\t\t\tif (topLevelCall = parentView === topView) {\n\t\t\t\ttopView.data = (topView.ctx = context || {}).root = from;\n\t\t\t}\n\t\t\tif (\"\" + tmplOrLinkTag === tmplOrLinkTag) {\n\t\t\t\t// tmplOrLinkTag is a string: treat as data-link expression.\n\t\t\t\taddDataBinding(tmplOrLinkTag, targetEl, parentView, undefined, true, from, context);\n\t\t\t} else {\n\t\t\t\tif (tmplOrLinkTag.markup !== undefined) {\n\t\t\t\t\t// This is a call to template.link()\n\t\t\t\t\tif (parentView.link === false) {\n\t\t\t\t\t\tcontext = context || {};\n\t\t\t\t\t\tcontext.link = onRender = false; // If link=false, don't allow nested context to switch on linking\n\t\t\t\t\t}\n\t\t\t\t\t// Set link=false, explicitly, to disable linking within a template nested within a linked template\n\t\t\t\t\tif (replaceMode) {\n\t\t\t\t\t\tplaceholderParent = targetEl.parentNode;\n\t\t\t\t\t}\n\n\t\t\t\t\thtml = tmplOrLinkTag.render(from, context, noIteration, parentView, undefined, onRender);\n\t\t\t\t\t// TODO Consider finding a way to bind data (link) within template without html being different for each view, the HTML can\n\t\t\t\t\t// be evaluated once outside the while (l--), and pushed into a document fragment, then cloned and inserted at each target.\n\n\t\t\t\t\tif (placeholderParent) {\n\t\t\t\t\t\t// This is target=\"replace\" mode\n\t\t\t\t\t\tprevNode = targetEl.previousSibling;\n\t\t\t\t\t\tnextNode = targetEl.nextSibling;\n\t\t\t\t\t\t$.cleanData([targetEl], true);\n\t\t\t\t\t\tplaceholderParent.removeChild(targetEl);\n\n\t\t\t\t\t\ttargetEl = placeholderParent;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tprevNode = nextNode = undefined; // When linking from a template, prevNode and nextNode parameters are ignored\n\t\t\t\t\t\t$(targetEl).empty();\n\t\t\t\t\t}\n\t\t\t\t} else if (tmplOrLinkTag === true && parentView === topView) {\n\t\t\t\t\t// $.link(true, selector, data, ctx) - where selector points to elem in top-level content. (If not top-level content, no-op)\n\t\t\t\t\trefresh = {lnk: 1};\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n// TODO Consider deferred linking API feature on per-template basis - {@{ instead of {^{ which allows the user to see the rendered content\n// before that content is linked, with better perceived perf. Have view.link return a deferred, and pass that to onAfterLink...\n// or something along those lines.\n// setTimeout(function() {\n\n\t\t\t\tif (targetEl._df && !nextNode) {\n\t\t\t\t\t// We are inserting new content and the target element has some deferred binding annotations,and there is no nextNode.\n\t\t\t\t\t// Those views may be stale views (that will be recreated in this new linking action) so we will first remove them\n\t\t\t\t\t// (if not already removed).\n\t\t\t\t\tvwInfos = viewInfos(targetEl._df, true, rOpenViewMarkers);\n\n\t\t\t\t\tfor (i = 0, k = vwInfos.length; i < k; i++) {\n\t\t\t\t\t\tview = vwInfos[i];\n\t\t\t\t\t\tif ((view = viewStore[view.id]) && view.data !== undefined) {\n\t\t\t\t\t\t\t// If this is the _prv (prevNode) for a view, remove the view\n\t\t\t\t\t\t\t// - unless view.data is undefined, in which case it is already being removed\n\t\t\t\t\t\t\tview.parent.removeViews(view._.key, undefined, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tsetDefer(targetEl); // remove defer tokens\n\t\t\t\t}\n\n\t\t\t\t// Link the content of the element, since this is a call to template.link(), or to $(el).link(true, ...),\n\t\t\t\tparentView.link(from, targetEl, prevNode, nextNode, html, refresh, context);\n//}, 0);\n\t\t\t}\n\t\t\tif (topLevelCall) {\n\t\t\t\ttopView.data = topView.ctx = undefined;\n\t\t\t}\n\t\t}\n\t}\n\treturn to; // Allow chaining, to attach event handlers, etc.\n}\n\n//----------\n// view.link\n//----------\n\nfunction viewLink(outerData, parentNode, prevNode, nextNode, html, refresh, context, validateOnly) {\n\t// Optionally insert HTML into DOM using documentFragments (and wrapping HTML appropriately).\n\t// Data-link existing contents of parentNode, or the inserted HTML, if provided\n\n\t// Depending on the content model for the HTML elements, the standard data-linking markers inserted in the HTML by addBindingMarkers during\n\t// template rendering will be converted either to script marker nodes or, for element-only content sections, to data-jsv element annotations.\n\n\t// Data-linking will then add _prv and _nxt to views, where:\n\t//     _prv: References the previous node (script element of type \"jsv123\"), or (for elCnt=true), the first element node in the view (or if none, set _prv = _nxt)\n\t//     _nxt: References the last node (script element of type \"jsv/123\"), or (for elCnt=true), the next element node after the view.\n\n\t//==== nested functions ====\n\tfunction convertMarkers(all, preceding, selfClose, closeTag, spaceBefore, id, boundId, spaceAfter, tag1, tag2, closeTag2, spaceAfterClose, selfClose2, endOpenTag) {\n\t\t// rConvertMarkers = /(^|(\\/>)|<\\/(\\w+)>|)(\\s*)([#\\/]\\d+(?:_|(\\^)))`(\\s*)(<\\w+(?=[\\s\\/>]))?|\\s*(?:(<\\w+(?=[\\s\\/>]))|<\\/(\\w+)>(\\s*)|(\\/>)\\s*|(>))/g,\n\t\t//                 prec, slfCl, clsTag,  spBefore, id,      bndId  spAfter,tag1,                   tag2,               clTag2,sac  slfCl2, endOpenTag\n\t\t// Convert the markers that were included by addBindingMarkers in template output, to appropriate DOM annotations:\n\t\t// data-jsv attributes (for element-only content) or script marker nodes (within phrasing or flow content).\n\n// TODO consider detecting 'quoted' contexts (attribute strings) so that attribute encoding does not need to encode >\n// Currently rAttrEncode = /[><\"'&]/g includes '>' encoding in order to avoid erroneous parsing of <span title=\"&lt;a/>\"></span>\">\n\t\tvar errorMsg, bndId,\n\t\t\tendOfElCnt = \"\";\n\t\tif (endOpenTag) {\n\t\t\tinTag = 0;\n\t\t\treturn all;\n\t\t}\n\t\ttag = tag1 || tag2 || \"\";\n\t\tcloseTag = closeTag || closeTag2;\n\t\tselfClose = selfClose || selfClose2;\n\t\tif (isVoid && !selfClose && ( !all || closeTag || tag || id && !inTag)) { // !all = end of string\n\t\t\tisVoid = undefined;\n\t\t\tparentTag = tagStack.shift(); // preceding tag was a void element, with no closing slash, such as <br>.\n\t\t}\n\t\tcloseTag = closeTag || selfClose;\n\t\tif (closeTag) {\n\t\t\tinTag = 0;\n\t\t\tisVoid = undefined;\n\t\t\t// TODO: smart insertion of <tbody> - to be completed for robust insertion of deferred bindings etc.\n\t\t\t//if (closeTag === \"table\" && parentTag === \"tbody\") {\n\t\t\t//\tpreceding = \"</tbody>\" + preceding;\n\t\t\t//\tparentTag = \"table\";\n\t\t\t//\ttagStack.shift();\n\t\t\t//}\n\t\t\tif (validate) {\n\t\t\t\tif (selfClose || selfClose2) {\n\t\t\t\t\tif (!voidElems[parentTag] && !/;svg;|;math;/.test(\";\" + tagStack.join(\";\") + \";\")) {\n\t\t\t\t\t\t// Only self-closing elements must be legitimate void elements, such as <br/>, per HTML schema,\n\t\t\t\t\t\t// or under svg or math foreign namespace elements.\n\t\t\t\t\t\terrorMsg = \"'<\" + parentTag + \".../\";\n\t\t\t\t\t}\n\t\t\t\t} else if (voidElems[closeTag]) {\n\t\t\t\t\terrorMsg = \"'</\" + closeTag; // closing tag such as </input>\n\t\t\t\t} else if (!tagStack.length || closeTag !== parentTag) {\n\t\t\t\t\terrorMsg = \"Mismatch: '</\" + closeTag;\n\t\t\t\t}\n\t\t\t\tif (errorMsg) {\n\t\t\t\t\tsyntaxError(errorMsg + \">' in:\\n\" + html);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevElCnt = elCnt;\n\t\t\tparentTag = tagStack.shift();\n\t\t\telCnt = elContent[parentTag];\n\t\t\tcloseTag2 = closeTag2 ? (\"</\" + closeTag2 + \">\") : \"\";\n\t\t\tif (prevElCnt) {\n\t\t\t\t// If there are ids (markers since the last tag), move them to the defer string\n\t\t\t\tdefer += ids;\n\t\t\t\tids = \"\";\n\t\t\t\tif (!elCnt) {\n\t\t\t\t\tendOfElCnt = closeTag2 + openScript + \"@\" + defer + closeScript + (spaceAfterClose || \"\");\n\t\t\t\t\tdefer = deferStack.shift();\n\t\t\t\t} else {\n\t\t\t\t\tdefer += \"-\"; // Will be used for stepping back through deferred tokens\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (elCnt) {\n\t\t\t// elContent maps tagNames which have only element content, so may not support script nodes.\n\t\t\t// We are in element-only content, can remove white space, and use data-jsv attributes on elements as markers\n\t\t\t// Example: <tr data-jsv=\"/2_#6_\"> - close marker for view 2 and open marker for view 6\n\n\t\t\tif (id) {\n\t\t\t\t// append marker for this id, to ids string\n\t\t\t\tids += id;\n\t\t\t} else {\n\t\t\t\tpreceding = (closeTag2 || selfClose2 || \"\");\n\t\t\t}\n\t\t\tif (tag) {\n\t\t\t\t// TODO: smart insertion of <tbody> - to be completed for robust insertion of deferred bindings etc.\n\t\t\t\t//if (tag === \"<tr\" && parentTag === \"table\") {\n\t\t\t\t//\ttagStack.unshift(parentTag);\n\t\t\t\t//\tparentTag = \"tbody\";\n\t\t\t\t//\tpreceding += \"<\" + parentTag + \">\";\n\t\t\t\t//\tif (defer) {\n\t\t\t\t//\t\tdefer += \"+\"; // Will be used for stepping back through deferred tokens\n\t\t\t\t//\t}\n\t\t\t\t//\t// TODO: move this to design-time validation check\n\t\t\t\t//\t//\terror('\"' + parentTag + '\" has incorrect parent tag');\n\t\t\t\t//}\n\t\t\t\tpreceding += tag;\n\t\t\t\tif (ids) {\n\t\t\t\t\tpreceding += ' ' + jsvAttrStr + '=\"' + ids + '\"';\n\t\t\t\t\tids = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// We are in phrasing or flow content, so use script marker nodes\n\t\t\t// Example: <script type=\"jsv3/\"></script> - data-linked tag, close marker\n\t\t\t// TODO add validation to track whether we are in attribute context (not yet hit preceding ending with a >) or element content of current 'parentTag'\n\t\t\t// and accordingly disallow inserting script markers in attribute context. Similar for elCnt too, so no \"<table {{if ...}}...{{/if}}... >\" or \"<table {{if ...}}...> ...{{/if}}...\"\n\t\t\tpreceding = id\n\t\t\t\t? (preceding + endOfElCnt + spaceBefore + (inTag ? \"\" : openScript + id + closeScript)+ spaceAfter + tag)\n\t\t\t\t: endOfElCnt || all;\n\t\t}\n\n\t\tif (validate && boundId) {\n\t\t\tif (inTag) {\n\t\t\t\t// JsViews data-linking tags are not allowed within element markup.\n\t\t\t\t// See https://github.com/BorisMoore/jsviews/issues/303\n\t\t\t\tsyntaxError('{^{ within elem markup (' + inTag + ' ). Use data-link=\"...\"');\n\t\t\t}\n\t\t\tif (id.charAt(0) === \"#\") {\n\t\t\t\ttagStack.unshift(id.slice(1));\n\t\t\t} else if (id.slice(1) !== (bndId = tagStack.shift())) {\n\t\t\t\t// See https://github.com/BorisMoore/jsviews/issues/213\n\t\t\t\tsyntaxError('Closing tag for {^{...}} under different elem: <' + bndId + '>');\n\t\t\t}\n\t\t}\n\t\tif (tag) {\n\t\t\tinTag = tag;\n\t\t\t// If there are ids (markers since the last tag), move them to the defer string\n\t\t\ttagStack.unshift(parentTag);\n\t\t\tparentTag = tag.slice(1);\n\t\t\tif (validate && tagStack[0] && tagStack[0] === badParent[parentTag]) {\n\t\t\t\t// Missing <tbody>\n\t\t\t\t// TODO: replace this by smart insertion of <tbody> tags\n\t\t\t\terror('Parent of <tr> must be <tbody>');\n\t\t\t}\n\t\t\tisVoid = voidElems[parentTag];\n\t\t\tif ((elCnt = elContent[parentTag]) && !prevElCnt) {\n\t\t\t\tdeferStack.unshift(defer);\n\t\t\t\tdefer = \"\";\n\t\t\t}\n\t\t\tprevElCnt = elCnt;\n//TODO Consider providing validation which throws if you place <span> as child of <tr>, etc. - since if not caught,\n//this can cause errors subsequently which are difficult to debug.\n//\t\t\t\tif (elContent[tagStack[0]]>2 && !elCnt) {\n//\t\t\t\t\terror(parentTag + \" in \" + tagStack[0]);\n//\t\t\t\t}\n\t\t\tif (defer && elCnt) {\n\t\t\t\tdefer += \"+\"; // Will be used for stepping back through deferred tokens\n\t\t\t}\n\t\t}\n\t\treturn preceding;\n\t}\n\n\tfunction processViewInfos(vwInfos, targetParent) {\n\t\t// If targetParent, we are processing viewInfos (which may include navigation through '+-' paths) and hooking up to the right parentElem etc.\n\t\t// (and elem may also be defined - the next node)\n\t\t// If no targetParent, then we are processing viewInfos on newly inserted content\n\t\tvar deferPath, deferChar, bindChar, parentElem, id, onAftCr, deep,\n\t\t\taddedBindEls = [];\n\n\t\t// In elCnt context (element-only content model), prevNode is the first node after the open, nextNode is the first node after the close.\n\t\t// If both are null/undefined, then open and close are at end of parent content, so the view is empty, and its placeholder is the\n\t\t// 'lastChild' of the parentNode. If there is a prevNode, then it is either the first node in the view, or the view is empty and\n\t\t// its placeholder is the 'previousSibling' of the prevNode, which is also the nextNode.\n\t\tif (vwInfos) {\n\t\t\tif (vwInfos._tkns.charAt(0) === \"@\") {\n\t\t\t\t// We are processing newly inserted content. This is a special script element that was created in convertMarkers() to process deferred bindings,\n\t\t\t\t// and inserted following the target parent element - because no element tags (outside elCnt) were encountered to carry those binding tokens.\n\t\t\t\t// We will step back from the preceding sibling of this element, looking at targetParent elements until we find the one that the current binding\n\t\t\t\t// token belongs to. Set elem to null (the special script element), and remove it from the DOM.\n\t\t\t\ttargetParent = elem.previousSibling;\n\t\t\t\telem.parentNode.removeChild(elem);\n\t\t\t\telem = undefined;\n\t\t\t}\n\t\t\tlen = vwInfos.length;\n\t\t\twhile (len--) {\n\t\t\t\tvwInfo = vwInfos[len];\n//if (prevIds.indexOf(vwInfo.token) < 0) { // This token is a newly created view or tag binding\n\t\t\t\tbindChar = vwInfo.ch;\n\t\t\t\tif (deferPath = vwInfo.path) {\n\t\t\t\t\t// We have a 'deferred path'\n\t\t\t\t\tj = deferPath.length - 1;\n\t\t\t\t\twhile (deferChar = deferPath.charAt(j--)) {\n\t\t\t\t\t\t// Use the \"+\" and\"-\" characters to navigate the path back to the original parent node where the deferred bindings ocurred\n\t\t\t\t\t\tif (deferChar === \"+\") {\n\t\t\t\t\t\t\tif (deferPath.charAt(j) === \"-\") {\n\t\t\t\t\t\t\t\tj--;\n\t\t\t\t\t\t\t\ttargetParent = targetParent.previousSibling;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttargetParent = targetParent.parentNode;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttargetParent = targetParent.lastChild;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Note: Can use previousSibling and lastChild, not previousElementSibling and lastElementChild,\n\t\t\t\t\t\t// since we have removed white space within elCnt. Hence support IE < 9\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (bindChar === \"^\") {\n\t\t\t\t\tif (tag = bindingStore[id = vwInfo.id]) {\n\t\t\t\t\t\t// The binding may have been deleted, for example in a different handler to an array collectionChange event\n\t\t\t\t\t\t// This is a tag binding\n\t\t\t\t\t\tdeep = targetParent && (!elem || elem.parentNode !== targetParent); // We are stepping back looking for the right targetParent,\n\t\t\t\t\t\t// or we are linking existing content and this element is in elCnt, not an immediate child of the targetParent.\n\t\t\t\t\t\tif (!elem || deep) {\n\t\t\t\t\t\t\ttag.parentElem = targetParent;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (vwInfo.elCnt && deep) {\n\t\t\t\t\t\t\t// With element only content, if there is no following element, or if the binding is deeper than the following element\n\t\t\t\t\t\t\t// then we need to set the open or close token as a deferred binding annotation on the parent\n\t\t\t\t\t\t\tsetDefer(targetParent, (vwInfo.open ? \"#\" : \"/\") + id + bindChar + (targetParent._df || \"\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// This is an open or close marker for a data-linked tag {^{...}}. Add it to bindEls.\n\t\t\t\t\t\taddedBindEls.push([deep ? null : elem, vwInfo]);\n\t\t\t\t\t}\n\t\t\t\t} else if (view = viewStore[id = vwInfo.id]) {\n\t\t\t\t\t// The view may have been deleted, for example in a different handler to an array collectionChange event\n\t\t\t\t\tif (!view.parentElem) {\n\t\t\t\t\t\t// If view is not already extended for JsViews, extend and initialize the view object created in JsRender, as a JsViews view\n\t\t\t\t\t\tview.parentElem = targetParent || elem && elem.parentNode || parentNode;\n\t\t\t\t\t\tview._.onRender = addBindingMarkers;\n\t\t\t\t\t\tview._.onArrayChange = arrayChangeHandler;\n\t\t\t\t\t\tsetArrayChangeLink(view);\n\t\t\t\t\t}\n\t\t\t\t\tparentElem = view.parentElem;\n\t\t\t\t\tif (vwInfo.open) {\n\t\t\t\t\t\t// This is an 'open view' node (preceding script marker node,\n\t\t\t\t\t\t// or if elCnt, the first element in the view, with a data-jsv annotation) for binding\n\t\t\t\t\t\tview._elCnt = vwInfo.elCnt;\n\t\t\t\t\t\tif (targetParent && !elem) {\n\t\t\t\t\t\t\tsetDefer(targetParent, \"#\" + id + bindChar + (targetParent._df || \"\"));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// No targetParent, so there is a ._nxt elem (and this is processing tokens on the elem)\n\t\t\t\t\t\t\tif (!view._prv) {\n\t\t\t\t\t\t\t\tsetDefer(parentElem, removeSubStr(parentElem._df, \"#\" + id + bindChar));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tview._prv = elem;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// This is a 'close view' marker node for binding\n\t\t\t\t\t\tif (targetParent && (!elem || elem.parentNode !== targetParent)) {\n\t\t\t\t\t\t\t// There is no ._nxt so add token to _df. It is deferred.\n\t\t\t\t\t\t\tsetDefer(targetParent, \"/\" + id + bindChar + (targetParent._df || \"\"));\n\t\t\t\t\t\t\tview._nxt = undefined;\n\t\t\t\t\t\t} else if (elem) {\n\t\t\t\t\t\t\t// This view did not have a ._nxt, but has one now, so token may be in _df, and must be removed. (No longer deferred)\n\t\t\t\t\t\t\tif (!view._nxt) {\n\t\t\t\t\t\t\t\tsetDefer(parentElem, removeSubStr(parentElem._df, \"/\" + id + bindChar));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tview._nxt = elem;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlinkCtx = view.linkCtx;\n\t\t\t\t\t\tif (onAftCr = view.ctx && view.ctx.onAfterCreate || onAfterCreate) {\n\t\t\t\t\t\t\tonAftCr.call(linkCtx, view);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n//}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlen = addedBindEls.length;\n\t\t\twhile (len--) {\n\t\t\t\t// These were added in reverse order to addedBindEls. We push them in BindEls in the correct order.\n\t\t\t\tbindEls.push(addedBindEls[len]);\n\t\t\t}\n\t\t}\n\t\treturn !vwInfos || vwInfos.elCnt;\n\t}\n\n\tfunction getViewInfos(vwInfos) {\n\t\t// Used by view.childTags() and tag.childTags()\n\t\t// Similar to processViewInfos in how it steps through bindings to find tags. Only finds data-linked tags.\n\t\tvar level, parentTag, named;\n\n\t\tif (vwInfos) {\n\t\t\tlen = vwInfos.length;\n\t\t\tfor (j = 0; j < len; j++) {\n\t\t\t\tvwInfo = vwInfos[j];\n\t\t\t\t// This is an open marker for a data-linked tag {^{...}}, within the content of the tag whose id is get.id. Add it to bindEls.\n\t\t\t\t// Note - if bindingStore[vwInfo.id]._is === \"tag\" then getViewInfos is being called too soon - during first linking pass\n\t\t\t\tparentTag = tag = bindingStore[vwInfo.id].linkCtx.tag;\n\t\t\t\tnamed = tag.tagName === tagName;\n\t\t\t\tif (!tag.flow || named) {\n\t\t\t\t\tif (!deep) {\n\t\t\t\t\t\tlevel = 1;\n\t\t\t\t\t\twhile (parentTag = parentTag.parent) {\n\t\t\t\t\t\t\tlevel++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttagDepth = tagDepth || level; // The level of the first tag encountered.\n\t\t\t\t\t}\n\t\t\t\t\tif ((deep || level === tagDepth) && (!tagName || named)) {\n\t\t\t\t\t\t// Filter on top-level or tagName as appropriate\n\t\t\t\t\t\ttags.push(tag);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction dataLink() {\n\t\t//================ Data-link and fixup of data-jsv annotations ================\n\t\tvar j, index,\n\t\t\ttokens = \"\",\n\t\t\twrap = {},\n\t\t\tselector = linkViewsSel + (get ? \",[\" + deferAttr + \"]\" : \"\");\n\t\t\t// If a childTags() call, get = \",[\" + deferAttr + \"]\" - since we need to include elements that have a ._df expando for deferred tokens\n\n\t\telems = qsa ? parentNode.querySelectorAll(selector) : $(selector, parentNode).get();\n\t\tl = elems.length;\n\n\t\t// The prevNode will be in the returned query, since we called markPrevOrNextNode() on it.\n\t\t// But it may have contained nodes that satisfy the selector also.\n\t\tif (prevNode && prevNode.innerHTML) {\n\t\t\t// Find the last contained node of prevNode, to use as the prevNode - so we only link subsequent elems in the query\n\t\t\tprevNodes = qsa ? prevNode.querySelectorAll(selector) : $(selector, prevNode).get();\n\t\t\tprevNode = prevNodes.length ? prevNodes[prevNodes.length - 1] : prevNode;\n\t\t}\n\n\t\ttagDepth = 0;\n\t\tfor (i = 0; i < l; i++) {\n\t\t\telem = elems[i];\n\t\t\tif (prevNode && !found) {\n\t\t\t\t// If prevNode is set, not false, skip linking. If this element is the prevNode, set to false so subsequent elements will link.\n\t\t\t\tfound = (elem === prevNode);\n\t\t\t} else if (nextNode && elem === nextNode) {\n\t\t\t\t// If nextNode is set then break when we get to nextNode\n\t\t\t\tif (get) {\n\t\t\t\t\ttokens += markerNodeInfo(elem);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t} else if (elem.parentNode) {\n\t\t\t\t// elem has not been removed from DOM\n\t\t\t\tif (get) {\n\t\t\t\t\ttokens += markerNodeInfo(elem);\n\t\t\t\t\tif (elem._df) {\n\t\t\t\t\t\tj = i + 1;\n\t\t\t\t\t\twhile (j < l && elem.contains(elems[j])) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Add defered tokens after any tokens on descendant elements of this one\n\t\t\t\t\t\twrap[j-1] = elem._df;\n\t\t\t\t\t}\n\t\t\t\t\tif (wrap[i]) {\n\t\t\t\t\t\ttokens += wrap[i] || \"\";\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (isLink && (vwInfo = viewInfos(elem, undefined, rViewMarkers)) && (vwInfo = vwInfo[0])) {\n\t\t\t\t\t\t// If this is a link(trueOrString ...) call we will avoid re-binding to elems that are within template-rendered views\n\t\t\t\t\t\tskip = skip ? (vwInfo.id !== skip && skip) : vwInfo.open && vwInfo.id;\n\t\t\t\t\t}\n\t\t\t\t\tif (!skip && processInfos(viewInfos(elem))\n\t\t\t\t\t\t// If a link() call, processViewInfos() adds bindings to bindEls, and returns true for non-script nodes, for adding data-link bindings\n\t\t\t\t\t\t// If a childTags() call, getViewInfos returns array of tag bindings.\n\t\t\t\t\t\t\t&& elem.getAttribute($viewsLinkAttr)) {\n\t\t\t\t\t\tbindEls.push([elem]); // A data-linked element so add to bindEls too\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (get) {\n\t\t\ttokens += parentNode._df || \"\";\n\t\t\tif (index = tokens.indexOf(\"#\" + get.id) + 1) {\n\t\t\t\t// We are looking for view.childTags() or tag.childTags() - so start after the open token of the parent view or tag.\n\t\t\t\ttokens = tokens.slice(index + get.id.length);\n\t\t\t}\n\t\t\tindex = tokens.indexOf(\"/\" + get.id);\n\t\t\tif (index + 1) {\n\t\t\t\t// We are looking for view.childTags() or tag.childTags() - so don't look beyond the close token of the parent view or tag.\n\t\t\t\ttokens = tokens.slice(0, index);\n\t\t\t}\n\t\t\t// Call getViewInfos to add the found childTags to the tags array\n\t\t\tgetViewInfos(viewInfos(tokens, undefined, rOpenTagMarkers));\n\t\t}\n\n\t\tif (html === undefined && parentNode.getAttribute($viewsLinkAttr)) {\n\t\t\tbindEls.push([parentNode]); // Support data-linking top-level element directly (not within a data-linked container)\n\t\t}\n\n\t\t// Remove temporary marker script nodes they were added by markPrevOrNextNode\n\t\tunmarkPrevOrNextNode(prevNode, elCnt);\n\t\tunmarkPrevOrNextNode(nextNode, elCnt);\n\n\t\tif (get) {\n\t\t\tif (lazyLink) {\n\t\t\t\tlazyLink.resolve();\n\t\t\t}\n\t\t\treturn; // We have added childTags to the tags array, so we are done\n\t\t}\n\n\t\tif (elCnt && defer + ids) {\n\t\t\t// There are some views with elCnt, for which the open or close did not precede any HTML tag - so they have not been processed yet\n\t\t\telem = nextNode;\n\t\t\tif (defer) {\n\t\t\t\tif (nextNode) {\n\t\t\t\t\tprocessViewInfos(viewInfos(defer + \"+\", true), nextNode);\n\t\t\t\t} else {\n\t\t\t\t\tprocessViewInfos(viewInfos(defer, true), parentNode);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprocessViewInfos(viewInfos(ids, true), parentNode);\n\t\t\t// If there were any tokens on nextNode which have now been associated with inserted HTML tags, remove them from nextNode\n\t\t\tif (nextNode) {\n\t\t\t\ttokens = nextNode.getAttribute(jsvAttrStr);\n\t\t\t\tif (l = tokens.indexOf(prevIds) + 1) {\n\t\t\t\t\ttokens = tokens.slice(l + prevIds.length - 1);\n\t\t\t\t}\n\t\t\t\tnextNode.setAttribute(jsvAttrStr, ids + tokens);\n\t\t\t}\n\t\t}\n\n\t\t//================ Bind the data-linked elements and tags ================\n\t\tl = bindEls.length;\n\t\tfor (i = 0; i < l; i++) {\n\t\t\telem = bindEls[i];\n\t\t\tlinkInfo = elem[1];\n\t\t\telem = elem[0];\n\t\t\tif (linkInfo) {\n\t\t\t\tif (tag = bindingStore[linkInfo.id]) {\n\t\t\t\t\tif (linkCtx = tag.linkCtx) {\n\t\t\t\t\t\t// The tag may have been stored temporarily on the bindingStore - or may have already been replaced by the actual binding\n\t\t\t\t\t\ttag = linkCtx.tag;\n\t\t\t\t\t\ttag.linkCtx = linkCtx;\n\t\t\t\t\t}\n\t\t\t\t\tif (linkInfo.open) {\n\t\t\t\t\t\t// This is an 'open linked tag' binding annotation for a data-linked tag {^{...}}\n\t\t\t\t\t\tif (elem) {\n\t\t\t\t\t\t\ttag.parentElem = elem.parentNode;\n\t\t\t\t\t\t\ttag._prv = elem;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttag._elCnt = linkInfo.elCnt;\n\t\t\t\t\t\tif (tag.onBeforeLink) {\n\t\t\t\t\t\t\ttag.onBeforeLink();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// We data-link depth-last (\"on the way in\"), which is better for perf - and allows setting parent tags etc.\n\t\t\t\t\t\tview = tag.tagCtx.view;\n\t\t\t\t\t\taddDataBinding(undefined, tag._prv, view, linkInfo.id);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttag._nxt = elem;\n\t\t\t\t\t\tif (tag._.unlinked) {\n\t\t\t\t\t\t\t// This is a 'close linked tag' binding annotation\n\t\t\t\t\t\t\t// Add data binding\n\t\t\t\t\t\t\ttagCtx = tag.tagCtx;\n\t\t\t\t\t\t\tview = tagCtx.view;\n\t\t\t\t\t\t\tcallAfterLink(tag);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Add data binding for a data-linked element (with data-link attribute)\n\t\t\t\taddDataBinding(elem.getAttribute($viewsLinkAttr), elem, $view(elem), undefined, isLink, outerData, context);\n\t\t\t}\n\t\t}\n\t\tif (lazyLink) {\n\t\t\tlazyLink.resolve();\n\t\t}\n\t}\n\t//==== /end of nested functions ====\n\n\tvar inTag, linkCtx, tag, i, l, j, len, elems, elem, view, vwInfo, linkInfo, prevNodes, token, prevView, nextView,\n\t\tnode, tags, deep, tagName, tagCtx, validate, tagDepth, depth, fragment, copiedNode, firstTag, parentTag,\n\t\tisVoid, wrapper, div, tokens, elCnt, prevElCnt, htmlTag, ids, prevIds, found, skip, lazyLink, isLink, get,\n\t\tself = this,\n\t\tthisId = self._.id + \"_\",\n\t\tdefer = \"\",\n\t\t// The marker ids for which no tag was encountered (empty views or final closing markers) which we carry over to container tag\n\t\tbindEls = [],\n\t\ttagStack = [],\n\t\tdeferStack = [],\n\t\tonAfterCreate = self.hlp(onAfterCreateStr),\n\t\tprocessInfos = processViewInfos;\n\n\tif (refresh) {\n\t\tlazyLink = refresh.lazyLink && $.Deferred();\n\t\tif (refresh.tmpl) {\n\t\t\t// refresh is the prevView, passed in from addViews()\n\t\t\tprevView = \"/\" + refresh._.id + \"_\";\n\t\t} else {\n\t\t\tisLink = refresh.lnk; // Top-level linking\n\t\t\tif (refresh.tag) {\n\t\t\t\tthisId = refresh.tag + \"^\";\n\t\t\t\trefresh = true;\n\t\t\t}\n\t\t\tif (get = refresh.get) {\n\t\t\t\tprocessInfos = getViewInfos;\n\t\t\t\ttags = get.tags;\n\t\t\t\tdeep = get.deep;\n\t\t\t\ttagName = get.name;\n\t\t\t}\n\t\t}\n\t\trefresh = refresh === true;\n\t}\n\n\tparentNode = parentNode\n\t\t? (\"\" + parentNode === parentNode\n\t\t\t? $(parentNode)[0]  // It is a string, so treat as selector\n\t\t\t: parentNode.jquery\n\t\t\t\t? parentNode[0] // A jQuery object - take first element.\n\t\t\t\t: parentNode)\n\t\t: (self.parentElem      // view.link()\n\t\t\t|| document.body);  // link(null, data) to link the whole document\n\n\tvalidate = !$viewsSettings.noValidate && parentNode.contentEditable !== TRUE;\n\tparentTag = parentNode.tagName.toLowerCase();\n\telCnt = !!elContent[parentTag];\n\n\tprevNode = prevNode && markPrevOrNextNode(prevNode, elCnt);\n\tnextNode = nextNode && markPrevOrNextNode(nextNode, elCnt) || null;\n\n\tif (html != undefined) {\n\t\t//================ Insert html into DOM using documentFragments (and wrapping HTML appropriately). ================\n\t\t// Also convert markers to DOM annotations, based on content model.\n\t\t// Corresponds to nextNode ? $(nextNode).before(html) : $(parentNode).html(html);\n\t\t// but allows insertion to wrap correctly even with inserted script nodes. jQuery version will fail e.g. under tbody or select.\n\t\t// This version should also be slightly faster\n\t\tdiv = document.createElement(\"div\");\n\t\twrapper = div;\n\t\tprevIds = ids = \"\";\n\t\thtmlTag = parentNode.namespaceURI === \"http://www.w3.org/2000/svg\" ? \"svg_ns\" : (firstTag = rFirstElem.exec(html)) && firstTag[1] || \"\";\n\t\tif (noDomLevel0 && firstTag && firstTag[2]) {\n\t\t\terror(\"Unsupported: \" + firstTag[2]); // For security reasons, don't allow insertion of elements with onFoo attributes.\n\t\t}\n\t\tif (elCnt) {\n\t\t\t// Now look for following view, and find its tokens, or if not found, get the parentNode._df tokens\n\t\t\tnode = nextNode;\n\t\t\twhile (node && !(nextView = viewInfos(node))) {\n\t\t\t\tnode = node.nextSibling;\n\t\t\t}\n\t\t\tif (tokens = nextView ? nextView._tkns : parentNode._df) {\n\t\t\t\ttoken = prevView || \"\";\n\t\t\t\tif (refresh || !prevView) {\n\t\t\t\t\ttoken += \"#\" + thisId;\n\t\t\t\t}\n\t\t\t\tj = tokens.indexOf(token);\n\t\t\t\tif (j + 1) {\n\t\t\t\t\tj += token.length;\n\t\t\t\t\t// Transfer the initial tokens to inserted nodes, by setting them as the ids variable, picked up in convertMarkers\n\t\t\t\t\tprevIds = ids = tokens.slice(0, j);\n\t\t\t\t\ttokens = tokens.slice(j);\n\t\t\t\t\tif (nextView) {\n\t\t\t\t\t\tnode.setAttribute(jsvAttrStr, tokens);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetDefer(parentNode, tokens);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//================ Convert the markers to DOM annotations, based on content model. ================\n//\t\t\toldElCnt = elCnt;\n\t\tisVoid = undefined;\n\t\thtml = (\"\" + html).replace(rConvertMarkers, convertMarkers);\n//\t\t\tif (!!oldElCnt !== !!elCnt) {\n//\t\t\t\terror(\"Parse: \" + html); // Parse error. Content not well-formed?\n//\t\t\t}\n\t\tif (validate && tagStack.length) {\n\t\t\tsyntaxError(\"Mismatched '<\" + parentTag + \"...>' in:\\n\" + html); // Unmatched tag\n\t\t}\n\t\tif (validateOnly) {\n\t\t\treturn;\n\t\t}\n\t\t// Append wrapper element to doc fragment\n\t\tsafeFragment.appendChild(div);\n\n\t\t// Go to html and back, then peel off extra wrappers\n\t\t// Corresponds to jQuery $(nextNode).before(html) or $(parentNode).html(html);\n\t\t// but supports svg elements, and other features missing from jQuery version (and this version should also be slightly faster)\n\t\thtmlTag = wrapMap[htmlTag] || wrapMap.div;\n\t\tdepth = htmlTag[0];\n\t\twrapper.innerHTML = htmlTag[1] + html + htmlTag[2];\n\t\twhile (depth--) {\n\t\t\twrapper = wrapper.lastChild;\n\t\t}\n\t\tsafeFragment.removeChild(div);\n\t\tfragment = document.createDocumentFragment();\n\t\twhile (copiedNode = wrapper.firstChild) {\n\t\t\tfragment.appendChild(copiedNode);\n\t\t}\n\t\t// Insert into the DOM\n\t\tparentNode.insertBefore(fragment, nextNode);\n\t}\n\n\tif (lazyLink) {\n\t\tsetTimeout(dataLink, 0);\n\t} else {\n\t\tdataLink();\n\t}\n\n\treturn lazyLink && lazyLink.promise();\n}\n\nfunction addDataBinding(linkMarkup, node, currentView, boundTagId, isLink, data, context) {\n\t// Add data binding for data-linked elements or {^{...}} data-linked tags\n\tvar tmpl, tokens, attr, convertBack, params, trimLen, tagExpr, linkFn, linkCtx, tag, rTagIndex, hasElse,\n\t\tlinkExpressions = [];\n\n\tif (boundTagId) {\n\t\t// boundTagId is a string for {^{...}} data-linked tag. So only one linkTag in linkMarkup\n\t\t// data and context parameters are undefined\n\t\ttag = bindingStore[boundTagId];\n\t\ttag = tag.linkCtx ? tag.linkCtx.tag : tag;\n\n\t\tlinkCtx = tag.linkCtx || {\n\t\t\tdata: currentView.data,                   // source\n\t\t\telem: tag._elCnt ? tag.parentElem : node, // target\n\t\t\tview: currentView,\n\t\t\tctx: currentView.ctx,\n\t\t\tattr: HTML, // Script marker nodes are associated with {^{ and always target HTML.\n\t\t\tfn: tag._.bnd,\n\t\t\ttag: tag,\n\t\t\t// Pass the boundTagId in the linkCtx, so that it can be picked up in observeAndBind\n\t\t\t_bndId: boundTagId\n\t\t};\n\t\tbindDataLinkTarget(linkCtx, linkCtx.fn);\n\t} else if (linkMarkup && node) {\n\t\t// If isLink then this is a top-level linking: .link(expression, target, data, ....) or\n\t\t// .link(true, target, data, ....) scenario - and data and context are passed in separately from the view\n\t\tdata = isLink ? data : currentView.data;\n\n\t\t// Compiled linkFn expressions could be stored in the tmpl.links array of the template\n\t\t// TODO - consider also caching globally so that if {{:foo}} or data-link=\"foo\" occurs in different places,\n\t\t// the compiled template for this is cached and only compiled once...\n\t\t//links = currentView.links || currentView.tmpl.links;\n\n\t\ttmpl = currentView.tmpl;\n\n//\t\t\tif (!(linkTags = links[linkMarkup])) {\n\t\t// This is the first time this view template has been linked, so we compile the data-link expressions, and store them on the template.\n\n\t\tlinkMarkup = normalizeLinkTag(linkMarkup, defaultAttr(node));\n\t\trTagDatalink.lastIndex = 0;\n\n\t\twhile (tokens = rTagDatalink.exec(linkMarkup)) { // TODO require } to be followed by whitespace or $, and remove the \\}(!\\}) option.\n\t\t\tlinkExpressions.push(tokens);\n\t\t}\n\t\twhile (tokens = linkExpressions.shift()) {\n\t\t\t// Iterate over the data-link expressions, for different target attrs,\n\t\t\t// e.g. <input data-link=\"{:firstName:} title{>~description(firstName, lastName)}\"\n\t\t\t// tokens: [all, attr, bindOnly, tagExpr, tagName, converter, colon, html, comment, code, params]\n\t\t\trTagIndex = rTagDatalink.lastIndex;\n\t\t\tattr = tokens[1];\n\t\t\ttagExpr = tokens[3];\n\t\t\twhile (linkExpressions[0] && linkExpressions[0][4] === \"else\") { // If this is {someTag...} and is followed by an {else...} add to tagExpr\n\t\t\t\ttagExpr += \"}{\" + linkExpressions.shift()[3];\n\t\t\t\thasElse = true;\n\t\t\t}\n\t\t\tif (hasElse) { // If an {else} has been added, need also to add closing {{/someTag}}\n\t\t\t\ttagExpr += \"}{{/\" + tokens[4] + \"}\";\n\t\t\t}\n\t\t\tparams = tokens[10];\n\t\t\tconvertBack = undefined;\n\n\t\t\tlinkCtx = {\n\t\t\t\tdata: data, // source\n\t\t\t\telem: node, // target\n\t\t\t\tview: currentView,\n\t\t\t\tctx: context,\n\t\t\t\tattr: attr,\n\t\t\t\tisLk: isLink, // top-level linking?\n\t\t\t\t_toLk : 1, // Flag to data-link on initial data-link call rendering call\n\t\t\t\t_noUpd : tokens[2] // Flag for data-link=\"^{...}\" so on initial data-link call will bind, but not render)\n\t\t\t};\n\n\t\t\tif (tokens[6]) {\n\t\t\t\t// TODO include this in the original rTagDatalink regex\n\t\t\t\t// Only for {:} link\"\n\n\t\t\t\tif (!attr && (convertBack = /:([\\w$]*)$/.exec(params))) {\n\t\t\t\t\t// two-way binding\n\t\t\t\t\tconvertBack = convertBack[1];\n\t\t\t\t\tif (convertBack !== undefined) {\n\t\t\t\t\t\t// There is a convertBack function\n\t\t\t\t\t\ttrimLen = - convertBack.length - 1;\n\t\t\t\t\t\ttagExpr = tagExpr.slice(0, trimLen - 1) + delimCloseChar0; // Remove the convertBack string from expression.\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (convertBack === null) {\n\t\t\t\t\tconvertBack = undefined;\n\t\t\t\t}\n\t\t\t\tlinkCtx.convert = tokens[5] || \"\";\n\t\t\t}\n\t\t\t// Compile the linkFn expression which evaluates and binds a data-link expression\n\t\t\t// TODO - optimize for the case of simple data path with no conversion, helpers, etc.:\n\t\t\t//     i.e. data-link=\"a.b.c\". Avoid creating new instances of Function every time. Can use a default function for all of these...\n\n\t\t\tlinkCtx.expr = attr + tagExpr;\n\t\t\tlinkFn = tmpl.links[tagExpr];\n\t\t\tif (!linkFn) {\n\t\t\t\ttmpl.links[tagExpr] = linkFn = $sub.tmplFn(tagExpr, tmpl, true, convertBack, hasElse);\n\t\t\t}\n\t\t\tlinkCtx.fn = linkFn;\n\t\t\tif (!attr && convertBack !== undefined) {\n\t\t\t\t// Default target, so allow 2 way binding\n\t\t\t\tlinkCtx.convertBack = convertBack;\n\t\t\t}\n\t\t\tbindDataLinkTarget(linkCtx, linkFn);\n\t\t\t// We store rTagIndex in local scope, since this addDataBinding method can sometimes be called recursively,\n\t\t\t// and each is using the same rTagDatalink instance.\n\t\t\trTagDatalink.lastIndex = rTagIndex;\n\t\t}\n//\t\t}\n\t}\n}\n\nfunction bindDataLinkTarget(linkCtx, linkFn) {\n\t// Add data link bindings for a link expression in data-link attribute markup\n\tfunction handler(ev, eventArgs) {\n\t\tpropertyChangeHandler.call(linkCtx, ev, eventArgs, linkFn);\n\t\t// If the link expression uses a custom tag, the propertyChangeHandler call will call renderTag, which will set tagCtx on linkCtx\n\t}\n\thandler.noArray = true;\n\tif (linkCtx.isLk) {\n\t\t// Top-level linking: .link(expressionOrTrue, data, context) - so we need to create a view for the linking, with the data and ctx\n\t\t// which may be different than the current context of the target. Note that this view is not a standard data-linked view, so it will\n\t\t// be disposed only when its parent view is disposed.\n\t\tlinkCtx.view = new $sub.View(\n\t\t\t$sub.extendCtx(linkCtx.ctx, linkCtx.view.ctx),\n\t\t\t\"link\", linkCtx.view, linkCtx.data, linkCtx.expr, undefined, undefined, addBindingMarkers);\n\t}\n\tlinkCtx._ctxCb = getContextCb(linkCtx.view); // _ctxCb is for filtering/appending to dependency paths: function(path, object) { return [(object|path)*]}\n\tlinkCtx._hdl = handler;\n\thandler(true);\n}\n\n//=====================\n// Data-linking helpers\n//=====================\n\nfunction removeSubStr(str, substr) {\n\tvar k;\n\treturn str\n\t\t? (k = str.indexOf(substr),\n\t\t\t(k + 1\n\t\t\t\t? str.slice(0, k) + str.slice(k + substr.length)\n\t\t\t\t: str))\n\t\t: \"\";\n}\n\nfunction markerNodeInfo(node) {\n\treturn node &&\n\t\t(\"\" + node === node\n\t\t\t? node\n\t\t\t: node.tagName === SCRIPT\n\t\t\t\t? node.type.slice(3)\n\t\t\t\t: node.nodeType === 1 && node.getAttribute(jsvAttrStr) || \"\");\n}\n\nfunction viewInfos(node, isVal, rBinding) {\n\t// Test whether node is a script marker node, and if so, return metadata\n\tfunction getInfos(all, open, close, id, ch, elPath) {\n\t\tinfos.push({\n\t\t\telCnt: elCnt,\n\t\t\tid: id,\n\t\t\tch: ch,\n\t\t\topen: open,\n\t\t\tclose: close,\n\t\t\tpath: elPath,\n\t\t\ttoken: all\n\t\t});\n\t}\n\tvar elCnt, tokens,\n\t\tinfos = [];\n\tif (tokens = isVal ? node : markerNodeInfo(node)) {\n\t\telCnt = infos.elCnt = node.tagName !== SCRIPT;\n\t\telCnt = tokens.charAt(0) === \"@\" || elCnt;\n\t\tinfos._tkns = tokens;\n\t\t// rMarkerTokens = /(?:(#)|(\\/))(\\d+)([_^])([-+@\\d]+)?/g;\n\t\ttokens.replace(rBinding || rMarkerTokens, getInfos);\n\t\treturn infos;\n\t}\n}\n\nfunction unmarkPrevOrNextNode(node, elCnt) {\n\tif (node) {\n\t\tif (node.type === \"jsv\") {\n\t\t\tnode.parentNode.removeChild(node);\n\t\t} else if (elCnt && node.getAttribute($viewsLinkAttr) === \"\") {\n\t\t\tnode.removeAttribute($viewsLinkAttr);\n\t\t}\n\t}\n}\n\nfunction markPrevOrNextNode(node, elCnt) {\n\tvar marker = node;\n\twhile (elCnt && marker && marker.nodeType !== 1) {\n\t\tmarker = marker.previousSibling;\n\t}\n\tif (marker) {\n\t\tif (marker.nodeType !== 1) {\n\t\t\t// For text nodes, we will add a script node before\n\t\t\tmarker = document.createElement(SCRIPT);\n\t\t\tmarker.type = \"jsv\";\n\t\t\tnode.parentNode.insertBefore(marker, node);\n\t\t} else if (!markerNodeInfo(marker) && !marker.getAttribute($viewsLinkAttr)) {\n\t\t\t// For element nodes, we will add a data-link attribute (unless there is already one)\n\t\t\t// so that this node gets included in the node linking process.\n\t\t\tmarker.setAttribute($viewsLinkAttr, \"\");\n\t\t}\n\t}\n\treturn marker;\n}\n\nfunction normalizeLinkTag(linkMarkup, twoway) {\n\tlinkMarkup = $.trim(linkMarkup).replace(rEscapeQuotes, \"\\\\$&\");\n\treturn linkMarkup.slice(-1) !== delimCloseChar0\n\t// If simplified syntax is used: data-link=\"expression\", convert to data-link=\"{:expression}\",\n\t// or for inputs, data-link=\"{:expression:}\" for (default) two-way binding\n\t\t? linkMarkup = delimOpenChar1 + \":\" + linkMarkup + (twoway ? \":\" : \"\") + delimCloseChar0\n\t\t: linkMarkup;\n}\n\n//===========================\n// Methods for views and tags\n//===========================\n\nlinkMethods = {\n\tcontents: function(deep, select) {\n\t\t// For a view or a tag, return jQuery object with the content nodes,\n\t\tif (deep !== !!deep) {\n\t\t\t// deep not boolean, so this is getContents(selector)\n\t\t\tselect = deep;\n\t\t\tdeep = undefined;\n\t\t}\n\t\tvar filtered,\n\t\t\tnodes = $(this.nodes());\n\t\tif (nodes[0]) {\n\t\t\tfiltered = select ? nodes.filter(select) : nodes;\n\t\t\tnodes = deep && select ? filtered.add(nodes.find(select)) : filtered;\n\t\t}\n\t\treturn nodes;\n\t},\n\n\tnodes: function(withMarkers, prevNode, nextNode) {\n\t\t// For a view or a tag, return top-level nodes\n\t\t// Do not return any script marker nodes, unless withMarkers is true\n\t\t// Optionally limit range, by passing in prevNode or nextNode parameters\n\n\t\tvar node,\n\t\t\tself = this,\n\t\t\telCnt = self._elCnt,\n\t\t\tprevIsFirstNode = !prevNode && elCnt,\n\t\t\tnodes = [];\n\n\t\tprevNode = prevNode || self._prv;\n\t\tnextNode = nextNode || self._nxt;\n\n\t\tnode = prevIsFirstNode\n\t\t\t? (prevNode === self._nxt\n\t\t\t\t? self.parentElem.lastSibling\n\t\t\t\t: prevNode)\n\t\t\t: (self._.inline === false\n\t\t\t\t? prevNode || self.linkCtx.elem.firstChild\n\t\t\t\t: prevNode && prevNode.nextSibling);\n\n\t\twhile (node && (!nextNode || node !== nextNode)) {\n\t\t\tif (withMarkers || elCnt || node.tagName !== SCRIPT) {\n\t\t\t\t// All the top-level nodes in the view\n\t\t\t\t// (except script marker nodes, unless withMarkers = true)\n\t\t\t\t// (Note: If a script marker node, viewInfo.elCnt undefined)\n\t\t\t\tnodes.push(node);\n\t\t\t}\n\t\t\tnode = node.nextSibling;\n\t\t}\n\t\treturn nodes;\n\t},\n\n\tchildTags: function(deep, tagName) {\n\t\t// For a view or a tag, return child tags - at any depth, or as immediate children only.\n\t\tif (deep !== !!deep) {\n\t\t\t// deep not boolean, so this is childTags(tagName) - which looks for top-level tags of given tagName\n\t\t\ttagName = deep;\n\t\t\tdeep = undefined;\n\t\t}\n\n\t\tvar self = this,\n\t\t\tview = self.link ? self : self.tagCtx.view, // this may be a view or a tag. If a tag, get the view from tag.view.tagCtx\n\t\t\tprevNode = self._prv,\n\t\t\telCnt = self._elCnt,\n\t\t\ttags = [];\n\n\t\tview.link(\n\t\t\tundefined,\n\t\t\tself.parentElem,\n\t\t\telCnt ? prevNode && prevNode.previousSibling : prevNode,\n\t\t\tself._nxt,\n\t\t\tundefined,\n\t\t\t{get:{\n\t\t\t\ttags: tags,\n\t\t\t\tdeep: deep,\n\t\t\t\tname: tagName,\n\t\t\t\tid: self.link ? self._.id + \"_\" : self._tgId + \"^\"\n\t\t\t}}\n\t\t);\n\t\treturn tags;\n\t},\n\n\trefresh: function(sourceValue) {\n\t\tvar promise, attr,\n\t\t\ttag = this,\n\t\t\tlinkCtx = tag.linkCtx,\n\t\t\tview = tag.tagCtx.view;\n\n\t\tif (tag.disposed) { error(\"Removed tag\"); }\n\t\tif (sourceValue === undefined) {\n\t\t\tsourceValue = $views._tag(tag, view, view.tmpl, mergeCtxs(tag), true); // Get rendered HTML for tag, based on refreshed tagCtxs\n\t\t}\n\t\tif (sourceValue + \"\" === sourceValue) {\n\t\t\t// If no rendered content, sourceValue will not be a string (can be 0 or undefined)\n\t\t\tattr = tag._.inline ? HTML : (linkCtx.attr || defaultAttr(tag.parentElem, true));\n\t\t\tpromise = updateContent(sourceValue, linkCtx, attr, tag);\n\t\t}\n\n\t\tcallAfterLink(tag);\n\t\treturn promise || tag;\n\t},\n\n\tupdate: function(value) {\n\t\tvar linkedElem = this.linkedElem;\n\t\tif (linkedElem) {\n\t\t\telemChangeHandler({\n\t\t\t\ttarget: linkedElem[0]\n\t\t\t}, undefined, value);\n\t\t}\n\t}\n};\n\nfunction callAfterLink(tag, eventArgs) {\n\tvar $linkedElem, linkedElem, radioButtons, val, l, linkedTag, oldTrig, newTrig,\n\t\ttagCtx = tag.tagCtx,\n\t\tview = tagCtx.view,\n\t\tprops = tagCtx.props,\n\t\tlinkCtx = tag.linkCtx = tag.linkCtx || {\n\t\t\ttag: tag,\n\t\t\tdata: view.data,\n\t\t\tview: view,\n\t\t\tctx: view.ctx\n\t\t};\n\n\tif (tag.onAfterLink) {\n\t\ttag.onAfterLink(tagCtx, linkCtx, eventArgs);\n\t}\n\ttag._.unlinked = undefined;\n\t$linkedElem = tag.targetTag ? tag.targetTag.linkedElem : tag.linkedElem;\n\tif (!tag.noVal && (linkedElem = $linkedElem && $linkedElem[0])) {\n\t\tif (radioButtons = tag._.radio) {\n\t\t\t$linkedElem = $linkedElem.children(\"input[type=radio]\");\n\t\t}\n\t\tif (radioButtons || !tag._.chging) {\n\t\t\tval = tag.cvtArgs()[0];\n\n\t\t\tif (radioButtons || linkedElem !== linkCtx.elem) {\n\t\t\t\tl = $linkedElem.length;\n\t\t\t\twhile (l--) {\n\t\t\t\t\tlinkedElem = $linkedElem[l];\n\t\t\t\t\tlinkedTag = linkedElem._jsvLkEl;\n\t\t\t\t\tif (tag._.inline && (!linkedTag || linkedTag !== tag && linkedTag.targetTag !== tag)) {\n\t\t\t\t\t\t// For data-linked tags, identify the linkedElem with the tag, for \"to\" binding\n\t\t\t\t\t\t// (For data-linked elements, if not yet bound, we identify later when the linkCtx.elem is bound)\n\t\t\t\t\t\tlinkedElem._jsvLkEl = tag;\n\t\t\t\t\t\tbindTo(bindingStore[tag._tgId], tag.convertBack);\n\t\t\t\t\t\tlinkedElem._jsvBnd = \"&\" + tag._tgId + \"+\"; // Add a \"+\" for cloned binding - so removing\n\t\t\t\t\t\t// elems with cloned bindings will not remove the 'parent' binding from the bindingStore.\n\t\t\t\t\t}\n\t\t\t\t\tif (radioButtons) {\n\t\t\t\t\t\t// For radio button, set to if val === value. For others set val() to val, below\n\t\t\t\t\t\tlinkedElem[CHECKED] = val === linkedElem.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlinkCtx._val = val;\n\t\t\t}\n\t\t\tif (val !== undefined) {\n\t\t\t\tif (!radioButtons && linkedElem.value !== undefined) {\n\t\t\t\t\tif (linkedElem.type === CHECKBOX) {\n\t\t\t\t\t\tlinkedElem[CHECKED] = val && val !== \"false\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$linkedElem.val(val);\n\t\t\t\t\t}\n\t\t\t\t} else if (linkedElem.contentEditable === TRUE) {\n\t\t\t\t\tlinkedElem.innerHTML = val;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (tag.setSize) {\n\t\t\tif (props.height) {\n\t\t\t\t$linkedElem.height(props.height);\n\t\t\t}\n\t\t\tif (props.width) {\n\t\t\t\t$linkedElem.width(props.width);\n\t\t\t}\n\t\t}\n\t\tif (props[\"class\"]) {\n\t\t\t$linkedElem.addClass(props[\"class\"]);\n\t\t}\n\t\tif (props.id) {\n\t\t\t$linkedElem[0].id = props.id;\n\t\t}\n\t\tif (props.name) {\n\t\t\t$linkedElem.attr(\"name\", props.name);\n\t\t}\n\t}\n\tif (linkedElem = linkedElem || tag.tagName === \":\" && linkCtx.elem) {\n\t\toldTrig = linkedElem._jsvTr;\n\t\tnewTrig = props.trigger;\n\t\tif (oldTrig !== newTrig) {\n\t\t\tlinkedElem._jsvTr = newTrig;\n\t\t\t$linkedElem = $linkedElem || $(linkedElem);\n\t\t\tbindElChange($linkedElem, oldTrig, \"off\");\n\t\t\tbindElChange($linkedElem, newTrig, \"on\");\n\t\t}\n\t}\n}\n\nfunction asyncElemChangeHandler(ev) {\n\tsetTimeout(function() {\n\t\telemChangeHandler(ev);\n\t}, 0);\n}\n\nfunction bindElChange($elem, trig, onoff) {\n\tif (trig) {\n\t\t$elem[onoff](trig === true ? \"keydown\" : trig, trig === true ? asyncElemChangeHandler : elemChangeHandler);\n\t}\n}\n\nfunction bindTo(binding, cvtBk) {\n\t// Two-way binding.\n\t// We set the binding.to[1] to be the cvtBack, and binding.to[0] to be either the path to the target, or [object, path] where the target is the path on the provided object.\n\t// So for a computed path with an object call: a.b.getObject().d.e, then we set to[0] to be [exprOb, \"d.e\"], and we bind to the path on the returned object, exprOb.ob, as target\n\t// Otherwise our target is the first path, paths[0], which we will convert with contextCb() for paths like ~a.b.c or #x.y.z\n\n\tvar bindto, pathIndex, path, lastPath, bindtoOb,\n\t\tlinkCtx = binding.linkCtx,\n\t\tsource = linkCtx.data,\n\t\tpaths = linkCtx.fn.paths;\n\tif (binding && paths) {\n\t\tpaths = (bindto = paths._jsvto) || paths[0];\n\t\tpathIndex = paths && paths.length;\n\t\tif (pathIndex && (!linkCtx.tag || linkCtx.tag.tagCtx.args.length)) {\n\t\t\tlastPath = paths[pathIndex - 1];\n\t\t\tif (lastPath._jsv) {\n\t\t\t\tbindtoOb = lastPath;\n\t\t\t\twhile (lastPath.sb && lastPath.sb._jsv) {\n\t\t\t\t\tpath = lastPath = lastPath.sb;\n\t\t\t\t}\n\t\t\t\tpath = lastPath.sb || path && path.path;\n\t\t\t\tlastPath = path ? path.slice(1) : bindtoOb.path;\n\t\t\t}\n\t\t\tbinding.to = path\n\t\t\t\t? [ // \"...someexpr().lastpath...\" - so need to get the bindtoOb 'exprOb' object for this view-binding\n\t\t\t\t\t[\n\t\t\t\t\t\tbindtoOb, // 'exprOb' for this expression and view-binding. So bindtoOb.ob is current object returned by expression.\n\t\t\t\t\t\tlastPath\n\t\t\t\t\t],\n\t\t\t\t\tcvtBk\n\t\t\t\t]\n\t\t\t\t: [\n\t\t\t\t\tlinkCtx._ctxCb(path = lastPath.split(\"^\").join(\".\")) || [source, path],\n\t\t\t\t\tcvtBk\n\t\t\t\t];\n\t\t} else {\n\t\t\tbinding.to = [[], cvtBk];\n\t\t}\n\t}\n}\n\nfunction mergeCtxs(tag, newCtxs, replace) { // Merge updated tagCtxs into tag.tagCtxs\n\tvar tagCtx, newTagCtx,\n\t\tview = tag.tagCtx.view,\n\t\ttagCtxs = tag.tagCtxs || [tag.tagCtx],\n\t\tl = tagCtxs.length,\n\t\trefresh = !newCtxs;\n\n\tnewCtxs = newCtxs || tag._.bnd.call(view.tmpl, (tag.linkCtx || view).data, view, $views);\n\n\tif (replace) {\n\t\t// Replace previous tagCtxs by new ones, rather than merging\n\t\ttagCtxs = tag.tagCtxs = newCtxs;\n\t\ttag.tagCtx = tagCtxs[0];\n\t} else {\n\t\twhile (l--) {\n\t\t\ttagCtx = tagCtxs[l];\n\t\t\tnewTagCtx = newCtxs[l];\n\t\t\t$observable(tagCtx.props).setProperty(newTagCtx.props);\n\t\t\t$extend(tagCtx.ctx, newTagCtx.ctx); // We don't support propagating ctx variables, ~foo, observably, to nested views. So extend, not setProperty...\n\t\t\ttagCtx.args = newTagCtx.args;\n\t\t\tif (refresh) {\n\t\t\t\ttagCtx.tmpl = newTagCtx.tmpl;\n\t\t\t}\n\t\t}\n\t}\n\t$sub._ths(tag, tagCtxs[0]); // tagHandlersFromProps\n\treturn tagCtxs;\n}\n\n//=========\n// Disposal\n//=========\n\nfunction clean(elems) {\n\t// Remove data-link bindings, or contained views\n\tvar l, elem, bindings,\n\t\telemArray = [],\n\t\tlen = elems.length,\n\t\ti = len;\n\twhile (i--) {\n\t\t// Copy into an array, so that deletion of nodes from DOM will not cause our 'i' counter to get shifted\n\t\t// (Note: This seems as fast or faster than elemArray = [].slice.call(elems); ...)\n\t\telemArray.push(elems[i]);\n\t}\n\ti = len;\n\twhile (i--) {\n\t\telem = elemArray[i];\n\t\tif (elem.parentNode) {\n\t\t\t// Has not already been removed from the DOM\n\t\t\tif (bindings = elem._jsvBnd) {\n\t\t\t\t// Get propertyChange bindings for this element\n\t\t\t\t// This may be an element with data-link, or the opening script marker node for a data-linked tag {^{...}}\n\t\t\t\t// bindings is a string with the syntax: \"(&bindingId)*\"\n\t\t\t\tbindings = bindings.slice(1).split(\"&\");\n\t\t\t\telem._jsvBnd = \"\";\n\t\t\t\tl = bindings.length;\n\t\t\t\twhile (l--) {\n\t\t\t\t\t// Remove associated bindings\n\t\t\t\t\tremoveViewBinding(bindings[l], elem._jsvLkEl, elem); // unbind bindings with this bindingId on this view\n\t\t\t\t}\n\t\t\t}\n\t\t\tdisposeTokens(markerNodeInfo(elem) + (elem._df || \"\"));\n\t\t}\n\t}\n}\n\n//function clean(elems) {\n//\t// Remove data-link bindings, or contained views\n//\tvar elem, bindings, binding,\n//\t\telemArray = [],\n//\t\tlen = elems.length,\n//\t\ti = len;\n//\twhile (i--) {\n//\t\t// Copy into an array, so that deletion of nodes from DOM will not cause our 'i' counter to get shifted\n//\t\t// (Note: This seems as fast or faster than elemArray = [].slice.call(elems); ...)\n//\t\telemArray.push(elems[i]);\n//\t}\n//\ti = len;\n//\twhile (i--) {\n//\t\telem = elemArray[i];\n//\t\tif (elem.parentNode) {\n//\t\t\t// Has not already been removed from the DOM\n//\t\t\tif (bindings = elem._jsvBnd) {\n//\t\t\t\t// Get propertyChange bindings for this element\n//\t\t\t\t// This may be an element with data-link, or the opening script marker node for a data-linked tag {^{...}}\n//\t\t\t\t// bindings is a string with the syntax: \"(&bindingId)*\"\n////\t\t\t\tbindings = bindings.slice(1).split(\"&\");\n//\t\t\t\telem._jsvBnd = \"\";\n//\t//\t\t\tl = bindings.length;\n////\t\t\t\twhile (l--) {\n//\t\t\t\twhile (binding = rSplitBindings.exec(bindings)) {\n//\t\t\t\t\t\t\t// Remove associated bindings\n//\t\t\t\t\tremoveViewBinding(binding, elem._jsvLkEl, elem); // unbind bindings with this bindingId on this view\n//\t\t\t\t}\n//\t\t\t}\n//\t\t\tdisposeTokens(markerNodeInfo(elem) + (elem._df || \"\"));\n//\t\t}\n//\t}\n//}\n\nfunction removeViewBinding(bindId, linkedElemTag, elem) {\n\t// Unbind\n\tvar objId, linkCtx, tag, object, obsId, tagCtxs, l, map, $linkedElem, linkedElem, trigger, view,\n\t\tbinding = bindingStore[bindId];\n\n\tif (linkedElemTag) {\n\t\tif (elem === linkedElemTag.linkedElem[0]) {\n\t\t\telem._jsvLkEl = undefined;\n\t\t\tlinkedElemTag.linkedElem = undefined;\n\t\t}\n\t} else if (binding) {\n\t\tdelete bindingStore[bindId]; // Delete already, so call to onDispose handler below cannot trigger recursive deletion (through recursive call to jQuery cleanData)\n\t\tfor (objId in binding.bnd) {\n\t\t\tobject = binding.bnd[objId];\n\t\t\tobsId = binding.cbId;\n\t\t\tif ($.isArray(object)) {\n\t\t\t\t$([object]).off(arrayChangeStr + obsId).off(propertyChangeStr + obsId); // There may be either or both of arrayChange and propertyChange\n\t\t\t} else {\n\t\t\t\t$(object).off(propertyChangeStr + obsId);\n\t\t\t}\n\t\t\tdelete binding.bnd[objId];\n\t\t}\n\n\t\tif (linkCtx = binding.linkCtx) {\n\t\t\tif (tag = linkCtx.tag) {\n\t\t\t\tif (tagCtxs = tag.tagCtxs) {\n\t\t\t\t\tl = tagCtxs.length;\n\t\t\t\t\twhile (l--) {\n\t\t\t\t\t\tif (map = tagCtxs[l].map) {\n\t\t\t\t\t\t\tmap.unmap(); //unobserve\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$linkedElem = tag.linkedElem;\n\t\t\t\tlinkedElem = $linkedElem && $linkedElem[0] || linkCtx.elem;\n\n\t\t\t\tif (trigger = linkedElem && linkedElem._jsvTr) {\n\t\t\t\t\tbindElChange($linkedElem || $(linkedElem), trigger, \"off\");\n\t\t\t\t\tlinkedElem._jsvTr = undefined;\n\t\t\t\t}\n\n\t\t\t\tif (tag.onDispose) {\n\t\t\t\t\ttag.onDispose();\n\t\t\t\t}\n\n\t\t\t\tif (!tag._elCnt) {\n\t\t\t\t\tif (tag._prv) {\n\t\t\t\t\t\ttag._prv.parentNode.removeChild(tag._prv);\n\t\t\t\t\t}\n\t\t\t\t\tif (tag._nxt) {\n\t\t\t\t\t\ttag._nxt.parentNode.removeChild(tag._nxt);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tview = linkCtx.view;\n\t\t\tif (view.type === \"link\") {\n\t\t\t\tview.parent.removeViews(view._.key, undefined, true); // A \"link\" view is associated with the binding, so should be disposed with binding.\n\t\t\t} else {\n\t\t\t\tdelete view._.bnds[bindId];\n\t\t\t}\n\t\t}\n\t\t$sub._cbBnds[binding.cbId] = undefined;\n\t}\n}\n\nfunction $unlink(tmplOrLinkTag, to) {\n\tif (to === undefined) {\n\t\tto = tmplOrLinkTag;\n\t\ttmplOrLinkTag = undefined;\n\t}\n\tif (to) { // to is a jquery object or an element or selector\n\t\tto = to.jquery ? to : $(to);\n\t\tif (tmplOrLinkTag === undefined) {\n\t\t\tclean(to);\n\t\t} else if (tmplOrLinkTag === true) {\n\t\t\tto.each(function() {\n\t\t\t\tvar innerView;\n\t\t\t\t//TODO fix this for better perf. Rather that calling inner view multiple times which does querySelectorAll each time, consider a single querySelectorAll\n\t\t\t\t// or simply call view.removeViews() on the top-level views under the target 'to' node, then clean(...)\n\t\t\t\twhile ((innerView = $view(this, true)) && innerView.parent) {\n\t\t\t\t\tinnerView.parent.removeViews(innerView._.key, undefined, true);\n\t\t\t\t}\n\t\t\t\tclean(this.getElementsByTagName(\"*\"));\n\t\t\t});\n\t\t\tclean(to);\n\t\t}\n\t} else if (tmplOrLinkTag === undefined) {\n\t\t// Call to $.unlink() is equivalent to $.unlink(true, \"body\")\n\t\tif (activeBody) {\n\t\t\t$(activeBody)\n\t\t\t\t.off(elementChangeStr, elemChangeHandler)\n\t\t\t\t.off('blur', '[contenteditable]', elemChangeHandler);\n\t\t\tactiveBody = undefined;\n\t\t}\n\t\ttopView.removeViews();\n\t\tclean(document.body.getElementsByTagName(\"*\"));\n\t}\n}\n\n// Note that call to $(el).unlink(tmplOrLinkTag ...) not supported - currently no-op.\n\nfunction tmplUnlink(to, from) {\n\treturn $unlink(this, to, from);\n}\n\n//========\n// Helpers\n//========\n\nfunction getContextCb(view) {\n\t// TODO Consider exposing or allowing override, as public API\n\treturn function(path, object) {\n\t\t// TODO consider only calling the contextCb on the initial token in path '~a.b.c' and not calling again on\n\t\t// the individual tokens, 'a', 'b', 'c'... Currently it is called multiple times\n\t\tvar tokens, tag,\n\t\t\titems = [object];\n\t\tif (view && path) {\n\t\t\tif (path._jsv) {\n\t\t\t\treturn path._jsv.call(view.tmpl, object, view, $views);\n\t\t\t}\n\t\t\tif (path.charAt(0) === \"~\") {\n\t\t\t\t// We return new items to insert into the sequence, replacing the \"~a.b.c\" string:\n\t\t\t\t// [helperObject 'a', \"a.b.c\" currentDataItem] so currentDataItem becomes the object for subsequent paths.\n\t\t\t\tif (path.slice(0, 4) === \"~tag\") {\n\t\t\t\t\ttag = view.ctx;\n\t\t\t\t\tif (path.charAt(4) === \".\") {\n\t\t\t\t\t\t// \"~tag.xxx\"\n\t\t\t\t\t\ttokens = path.slice(5).split(\".\");\n\t\t\t\t\t\ttag = tag.tag;\n\t\t\t\t\t}\n\t\t\t\t\tif (tokens) {\n\t\t\t\t\t\treturn tag ? [tag, tokens.join(\".\"), object] : [];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpath = path.slice(1).split(\".\");\n\t\t\t\tif (object = view.hlp(path.shift())) {\n\t\t\t\t\tif (path.length) {\n\t\t\t\t\t\titems.unshift(path.join(\".\"));\n\t\t\t\t\t}\n\t\t\t\t\titems.unshift(object);\n\t\t\t\t}\n\t\t\t\treturn object ? items : [];\n\t\t\t}\n\t\t\tif (path.charAt(0) === \"#\") {\n\t\t\t\t// We return new items to insert into the sequence, replacing the \"#a.b.c\" string: [view, \"a.b.c\" currentDataItem]\n\t\t\t\t// so currentDataItem becomes the object for subsequent paths. The 'true' flag makes the paths bind only to leaf changes.\n\t\t\t\treturn path === \"#data\" ? [] : [view, path.replace(rViewPath, \"\"), object];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction inputAttrib(elem) {\n\treturn elem.type === CHECKBOX ? elem[CHECKED] : elem.value;\n}\n\n//========================== Initialize ==========================\n\n//=====================\n// JsRender integration\n//=====================\n\n$sub.onStore.template = function(name, item) {\n\titem.link = tmplLink;\n\titem.unlink = tmplUnlink;\n\tif (name) {\n\t\t$.link[name] = function() {\n\t\t\treturn tmplLink.apply(item, arguments);\n\t\t};\n\t\t$.unlink[name] = function() {\n\t\t\treturn tmplUnlink.apply(item, arguments);\n\t\t};\n\t}\n};\n\n$extend($extend($sub._tg.prototype, linkMethods), { // Add linkMethods to tagDef prototype\n\tdomChange: function() { // domChange notification support\n\t\tvar elem = this.parentElem,\n\t\t\thasListener = $.hasData(elem) && $._data(elem).events,\n\t\t\tdomChangeNotification = \"jsv-domchange\";\n\n\t\tif (hasListener && hasListener[domChangeNotification]) {\n\t\t\t// Only trigger handler if there is a handler listening for this event. (Note using triggerHandler - so no event bubbling.)\n\t\t\t$(elem).triggerHandler(domChangeNotification, arguments);\n\t\t}\n\t}\n});\n\n$sub.viewInfos = viewInfos; // Expose viewInfos() as public helper method\n\n// Initialize default delimiters\n($viewsSettings.delimiters = function() {\n\tvar delimChars = oldJsvDelimiters.apply(0, arguments);\n\tdelimOpenChar0 = delimChars[0];\n\tdelimOpenChar1 = delimChars[1];\n\tdelimCloseChar0 = delimChars[2];\n\tdelimCloseChar1 = delimChars[3];\n\tlinkChar = delimChars[4];\n\trTagDatalink = new RegExp(\"(?:^|\\\\s*)([\\\\w-]*)(\\\\\" + linkChar + \")?(\\\\\" + delimOpenChar1 + $sub.rTag + \"\\\\\" + delimCloseChar0 + \")\", \"g\");\n\n\t// Default rTag:      attr  bind tagExpr   tag         converter colon html     comment            code      params\n\t//          (?:^|\\s*)([\\w-]*)(\\^)?({(?:(?:(\\w+(?=[\\/\\s}]))|(?:(\\w+)?(:)|(>)|!--((?:[^-]|-(?!-))*)--|(\\*)))\\s*((?:[^}]|}(?!}))*?))})\n\treturn this;\n})(); // jshint ignore:line\n\n//====================================\n// Additional members for linked views\n//====================================\n\nfunction transferViewTokens(prevNode, nextNode, parentElem, id, viewOrTagChar, refresh) {\n\t// Transfer tokens on prevNode of viewToRemove/viewToRefresh to nextNode or parentElem._df\n\tvar i, l, vwInfos, vwInfo, viewOrTag, viewId, tokens,\n\t\tprecedingLength = 0,\n\t\temptyView = prevNode === nextNode;\n\n\tif (prevNode) {\n\t\t// prevNode is either the first node in the viewOrTag, or has been replaced by the vwInfos tokens string\n\t\tvwInfos = viewInfos(prevNode) || [];\n\t\tfor (i = 0, l = vwInfos.length; i < l; i++) {\n\t\t\t// Step through views or tags on the prevNode\n\t\t\tvwInfo = vwInfos[i];\n\t\t\tviewId = vwInfo.id;\n\t\t\tif (viewId === id && vwInfo.ch === viewOrTagChar) {\n\t\t\t\tif (refresh) {\n\t\t\t\t\t// This is viewOrTagToRefresh, this is the last viewOrTag to process...\n\t\t\t\t\tl = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// This is viewOrTagToRemove, so we are done...\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!emptyView) {\n\t\t\t\tviewOrTag = vwInfo.ch === \"_\"\n\t\t\t\t\t? viewStore[viewId]\n\t\t\t\t\t: bindingStore[viewId].linkCtx.tag;\n\t\t\t\tif (vwInfo.open) {\n\t\t\t\t\t// A \"#m\" token\n\t\t\t\t\tviewOrTag._prv = nextNode;\n\t\t\t\t} else if (vwInfo.close) {\n\t\t\t\t\t// A \"/m\" token\n\t\t\t\t\tviewOrTag._nxt = nextNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\tprecedingLength += viewId.length + 2;\n\t\t}\n\n\t\tif (precedingLength) {\n\t\t\tprevNode.setAttribute(jsvAttrStr, prevNode.getAttribute(jsvAttrStr).slice(precedingLength));\n\t\t}\n\t\ttokens = nextNode ? nextNode.getAttribute(jsvAttrStr) : parentElem._df;\n\t\tif (l = tokens.indexOf(\"/\" + id + viewOrTagChar) + 1) {\n\t\t\ttokens = vwInfos._tkns.slice(0, precedingLength) + tokens.slice(l + (refresh ? -1 : id.length + 1));\n\t\t}\n\t\tif (tokens) {\n\t\t\tif (nextNode) {\n\t\t\t\t// If viewOrTagToRemove was an empty viewOrTag, we will remove both #n and /n\n\t\t\t\t// (and any intervening tokens) from the nextNode (=== prevNode)\n\t\t\t\t// If viewOrTagToRemove was not empty, we will take tokens preceding #n from prevNode,\n\t\t\t\t// and concatenate with tokens following /n on nextNode\n\t\t\t\tnextNode.setAttribute(jsvAttrStr, tokens);\n\t\t\t} else {\n\t\t\t\tsetDefer(parentElem, tokens);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// !prevNode, so there may be a deferred nodes token on the parentElem. Remove it.\n\t\tsetDefer(parentElem, removeSubStr(parentElem._df, \"#\" + id + viewOrTagChar));\n\t\tif (!refresh && !nextNode) {\n\t\t\t// If this viewOrTag is being removed, and there was no .nxt, remove closing token from deferred tokens\n\t\t\tsetDefer(parentElem, removeSubStr(parentElem._df, \"/\" + id + viewOrTagChar));\n\t\t}\n\t}\n}\n\nfunction disposeTokens(tokens) {\n\tvar i, l, vwItem, vwInfos;\n\tif (vwInfos = viewInfos(tokens, true, rOpenMarkers)) {\n\t\tfor (i = 0, l = vwInfos.length; i < l; i++) {\n\t\t\tvwItem = vwInfos[i];\n\t\t\tif (vwItem.ch === \"_\") {\n\t\t\t\tif ((vwItem = viewStore[vwItem.id]) && vwItem.type) {\n\t\t\t\t\t// If this is the _prv (prevNode) for a view, remove the view\n\t\t\t\t\t// - unless view.type is undefined, in which case it is already being removed\n\t\t\t\t\tvwItem.parent.removeViews(vwItem._.key, undefined, true);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tremoveViewBinding(vwItem.id); // unbind bindings with this bindingId on this view\n\t\t\t}\n\t\t}\n\t}\n}\n\n//====================================\n// Add linked view methods to view prototype\n//====================================\n\n$extend(\n\t$extend($sub.View.prototype, linkMethods), {\n\t\t// Note: a linked view will also, after linking have nodes[], _prv (prevNode), _nxt (nextNode) ...\n\t\taddViews: function(index, dataItems, tmpl) {\n\t\t\t// if view is not an array view, do nothing\n\t\t\tvar i, viewsCount,\n\t\t\t\tself = this,\n\t\t\t\titemsCount = dataItems.length,\n\t\t\t\tviews = self.views;\n\n\t\t\tif (!self._.useKey && itemsCount && (tmpl = self.tmpl)) {\n\t\t\t\t// view is of type \"array\"\n\t\t\t\t// Use passed-in template if provided, since self added view may use a different template than the original one used to render the array.\n\t\t\t\tviewsCount = views.length + itemsCount;\n\n\t\t\t\tif (viewsCount === self.data.length // If views not already synced to array (e.g. triggered by array.length propertyChange - jsviews/issues/301)\n\t\t\t\t\t\t&& renderAndLink(self, index, tmpl, views, dataItems, self.ctx) !== false) {\n\t\t\t\t\tfor (i = index + itemsCount; i < viewsCount; i++) {\n\t\t\t\t\t\t$observable(views[i]).setProperty(\"index\", i);\n\t\t\t\t\t\t// This is fixing up index, but not key, and not index on child views. From child views, use view.getIndex()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn self;\n\t\t},\n\n\t\tremoveViews: function(index, itemsCount, keepNodes) {\n\t\t\t// view.removeViews() removes all the child views\n\t\t\t// view.removeViews(index) removes the child view with specified index or key\n\t\t\t// view.removeViews(index, count) removes the specified nummber of child views, starting with the specified index\n\t\t\tfunction removeView(index) {\n\t\t\t\tvar id, bindId, parentElem, prevNode, nextNode, nodesToRemove,\n\t\t\t\t\tviewToRemove = views[index];\n\n\t\t\t\tif (viewToRemove && viewToRemove.link) {\n\t\t\t\t\tid = viewToRemove._.id;\n\t\t\t\t\tif (!keepNodes) {\n\t\t\t\t\t\t// Remove the HTML nodes from the DOM, unless they have already been removed, including nodes of child views\n\t\t\t\t\t\tnodesToRemove = viewToRemove.nodes();\n\t\t\t\t\t}\n\n\t\t\t\t\t// Remove child views, without removing nodes\n\t\t\t\t\tviewToRemove.removeViews(undefined, undefined, true);\n\n\t\t\t\t\tviewToRemove.type = undefined; // Set type to undefined: used as a flag that this view is being removed\n\t\t\t\t\tprevNode = viewToRemove._prv;\n\t\t\t\t\tnextNode = viewToRemove._nxt;\n\t\t\t\t\tparentElem = viewToRemove.parentElem;\n\t\t\t\t\t// If prevNode and nextNode are the same, the view is empty\n\t\t\t\t\tif (!keepNodes) {\n\t\t\t\t\t\t// Remove the HTML nodes from the DOM, unless they have already been removed, including nodes of child views\n\t\t\t\t\t\tif (viewToRemove._elCnt) {\n\t\t\t\t\t\t\t// if keepNodes is false (and transferring of tokens has not already been done at a higher level)\n\t\t\t\t\t\t\t// then transfer tokens from prevNode which is being removed, to nextNode.\n\t\t\t\t\t\t\ttransferViewTokens(prevNode, nextNode, parentElem, id, \"_\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$(nodesToRemove).remove();\n\t\t\t\t\t}\n\t\t\t\t\tif (!viewToRemove._elCnt) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tprevNode.parentNode.removeChild(prevNode); // (prevNode.parentNode is parentElem, except if jQuery Mobile or similar has inserted an intermediate wrapper\n\t\t\t\t\t\t\tnextNode.parentNode.removeChild(nextNode);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\t\t\t\t\tsetArrayChangeLink(viewToRemove);\n\t\t\t\t\tfor (bindId in viewToRemove._.bnds) {\n\t\t\t\t\t\tremoveViewBinding(bindId);\n\t\t\t\t\t}\n\t\t\t\t\tdelete viewStore[id];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar current, view, viewsCount,\n\t\t\t\tself = this,\n\t\t\t\tisArray = !self._.useKey,\n\t\t\t\tviews = self.views;\n\n\t\t\tif (isArray) {\n\t\t\t\tviewsCount = views.length;\n\t\t\t}\n\t\t\tif (index === undefined) {\n\t\t\t\t// Remove all child views\n\t\t\t\tif (isArray) {\n\t\t\t\t\t// views and data are arrays\n\t\t\t\t\tcurrent = viewsCount;\n\t\t\t\t\twhile (current--) {\n\t\t\t\t\t\tremoveView(current);\n\t\t\t\t\t}\n\t\t\t\t\tself.views = [];\n\t\t\t\t} else {\n\t\t\t\t\t// views and data are objects\n\t\t\t\t\tfor (view in views) {\n\t\t\t\t\t\t// Remove by key\n\t\t\t\t\t\tremoveView(view);\n\t\t\t\t\t}\n\t\t\t\t\tself.views = {};\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (itemsCount === undefined) {\n\t\t\t\t\tif (isArray) {\n\t\t\t\t\t\t// The parentView is data array view.\n\t\t\t\t\t\t// Set itemsCount to 1, to remove this item\n\t\t\t\t\t\titemsCount = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Remove child view with key 'index'\n\t\t\t\t\t\tremoveView(index);\n\t\t\t\t\t\tdelete views[index];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (isArray && itemsCount\n\t\t\t\t\t&& viewsCount - itemsCount === self.data.length) { // If views not already synced to array (e.g. triggered by array.length propertyChange - jsviews/issues/301)\n\t\t\t\t\tcurrent = index + itemsCount;\n\t\t\t\t\t// Remove indexed items (parentView is data array view);\n\t\t\t\t\twhile (current-- > index) {\n\t\t\t\t\t\tremoveView(current);\n\t\t\t\t\t}\n\t\t\t\t\tviews.splice(index, itemsCount);\n\t\t\t\t\tif (viewsCount = views.length) {\n\t\t\t\t\t\t// Fixup index on following view items...\n\t\t\t\t\t\twhile (index < viewsCount) {\n\t\t\t\t\t\t\t$observable(views[index]).setProperty(\"index\", index++);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\trefresh: function(context) {\n\t\t\tvar self = this,\n\t\t\t\tparent = self.parent;\n\n\t\t\tif (parent) {\n\t\t\t\trenderAndLink(self, self.index, self.tmpl, parent.views, self.data, context, true);\n\t\t\t\tsetArrayChangeLink(self);\n\t\t\t}\n\t\t\treturn self;\n\t\t},\n\n\t\tlink: viewLink\n\t}\n);\n\n//========================\n// JsViews-specific converters\n//========================\n\n$converters.merge = function(val) {\n\t// Special converter used in data-linking to space-separated lists, such as className:\n\t// Currently only supports toggle semantics - and has no effect if toggle string is not specified\n\t// data-link=\"class{merge:boolExpr toggle=className}\"\n\tvar regularExpression,\n\t\tcurrentValue = this.linkCtx._val || \"\",\n\t\ttoggle = this.tagCtx.props.toggle;\n\n\tif (toggle) {\n\t\t// We are toggling the class specified by the toggle property,\n\t\t// and the boolean val binding is driving the insert/remove toggle\n\n\t\tregularExpression = toggle.replace(/[\\\\^$.|?*+()[{]/g, \"\\\\$&\");\n\t\t// Escape any regular expression special characters (metacharacters) within the toggle string\n\t\tregularExpression = \"(\\\\s(?=\" + regularExpression + \"$)|(\\\\s)|^)(\" + regularExpression + \"(\\\\s|$))\";\n\t\t// Example: /(\\s(?=myclass$)|(\\s)|^)?(myclass(\\s|$))/ - so matches (\" myclass\" or \" \" or ^ ) followed by (\"myclass \" or \"myclass$\") where ^/$ are beginning/end of string\n\t\tcurrentValue = currentValue.replace(new RegExp(regularExpression), \"$2\");\n\t\tval = currentValue + (val ? (currentValue && \" \") + toggle : \"\");\n\t}\n\treturn val;\n};\n\n//========================\n// JsViews-specific tags\n//========================\n\n$tags(\"on\", {\n\tattr: NONE,\n\tinit: function(tagCtx) {\n\t\tvar tag = this,\n\t\t\tprops = tagCtx.props,\n\t\t\tcontent = tagCtx.content,\n\t\t\telemType = props.elem;\n\n\t\tif (tag._.inline) {\n\t\t\ttag.attr = HTML;\n\t\t\telemType = (elemType || \"span\") + \">\";\n\t\t\ttag.template = \"<\" + elemType + (props.label || content.markup || tagCtx.params.args[0]) + \"</\" + elemType;\n\t\t}\n\t},\n\trender: function() {\n\t\tvar tagCtx = this.tagCtx;\n\t\treturn tagCtx.render(tagCtx.view, true); // no arg, so renders against parentView.data\n\t},\n\tonAfterLink: function(tagCtx, linkCtx) {\n\t\tvar handler, params,\n\t\t\ttag = this,\n\t\t\ti = 0,\n\t\t\targs = tagCtx.args, // [events,] [selector,] handler\n\t\t\tl = args.length,\n\t\t\tprops = tagCtx.props,\n\t\t\tdata = props.data,\n\t\t\tview = tagCtx.view,\n\t\t\tcontextOb = props.context; // Context ('this' pointer) for attached handler\n\n\t\ttag.activeElem = tag.activeElem || $(tag._.inline ? (tag._elCnt && error('Use data-link=\"{on...}\"'), tag.nodes()[0]) : linkCtx.elem);\n\n\t\twhile (i<l && !(params = $isFunction(handler = args[i++]))) {} // Handler is first arg of type function\n\n\t\tif (params) { // There is a handler\n\t\t\tparams = args.slice(i); // Subsequent args are params\n\t\t\targs = args.slice(0, i - 1); // Preceding args (if any) are events and selector\n\n\t\t\tif (!contextOb) {\n\t\t\t\t// Get the path for the preceding object (context object) of handler (which is the last arg), compile function\n\t\t\t\t// to return that context object, and run compiled function against data\n\t\t\t\tcontextOb = /^(.*)[\\.^][\\w$]+$/.exec(tagCtx.params.args.slice(-params.length - 1)[0]);\n\t\t\t\tcontextOb = contextOb && $sub.tmplFn(\"{:\" + contextOb[1] + \"}\", view.tmpl, true)(linkCtx.data, view);\n\t\t\t}\n\n\t\t\tif (tag._evs) {\n\t\t\t\ttag.onDispose();\n\t\t\t}\n\n\t\t\ttag.activeElem.on(\n\t\t\t\ttag._evs = args[0] || \"click\", // events defaults to \"click\"\n\t\t\t\ttag._sel = args[1],\n\t\t\t\tdata == undefined ? null : data,\n\t\t\t\ttag._hlr = function(ev) {\n\t\t\t\t\treturn handler.apply(contextOb || linkCtx.data, [].concat(\n\t\t\t\t\t\tparams, // e.g. par1, par2\n\t\t\t\t\t\tev,\n\t\t\t\t\t\t{change: ev.type, view: view, linkCtx: linkCtx},\n\t\t\t\t\t\tparams.slice.call(arguments, 1) // If triggering event (e.g. jsv-domchange) has additional arguments after ev, pass them too\n\t\t\t\t\t));\n\t\t\t\t\t// for {on 'click' handler par1 par2} use handler(par1, par2, ev, domchangeEventArgs)\n\t\t\t\t\t// for {on 'jsv-domchange' handler par1 par2} use hanlder(par1, par2, ev, domchangeEventArgs, tagCtx, linkCtx, observableEventArgs)\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t},\n\tonUpdate: function() {\n\t\treturn false;\n\t},\n\tonDispose: function() {\n\t\tthis.activeElem.off(this._evs, this._sel, this._hlr);\n\t},\n\tflow: true\n});\n\n$extend($tags[\"for\"], {\n\t//onUpdate: function(ev, eventArgs, tagCtxs) {\n\t\t//Consider adding filtering for perf optimization. However the below prevents update on some scenarios which _should_ update - namely when there is another array on which for also depends.\n\t\t//var i, l, tci, prevArg;\n\t\t//for (tci = 0; (prevArg = this.tagCtxs[tci]) && prevArg.args.length; tci++) {\n\t\t//\tif (prevArg.args[0] !== tagCtxs[tci].args[0]) {\n\t\t//\t\treturn true;\n\t\t//\t}\n\t\t//}\n\t\t//return false;\n\t//},\n\tonArrayChange: function(ev, eventArgs, tagCtx, linkCtx) {\n\t\tvar arrayView,\n\t\t\ttarget = ev.target,\n\t\t\ttargetLength = target.length,\n\t\t\ttag = this,\n\t\t\tchange = eventArgs.change;\n\t\tif (tag._.noVws // Child views not supported because target is not html - e.g. data-link=\"title{for ...}\"\n\t\t\t|| tag.tagCtxs[1] && ( // There is an {{else}}\n\t\t\t\tchange === \"insert\" && targetLength === eventArgs.items.length // inserting, and new length is same as inserted length, so going from 0 to n\n\t\t\t\t|| change === \"remove\" && !targetLength // removing , and new length 0, so going from n to 0\n\t\t\t\t|| change === \"refresh\" && !eventArgs.oldItems.length !== !targetLength // refreshing, and length is going from 0 to n or from n to 0\n\t\t\t)) {\n\t\t\ttag.refresh();\n\t\t} else {\n\t\t\tfor (arrayView in tag._.arrVws) {\n\t\t\t\tarrayView = tag._.arrVws[arrayView];\n\t\t\t\tif (arrayView.data === target) {\n\t\t\t\t\tarrayView._.onArrayChange.apply(arrayView, arguments);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\ttag.domChange(tagCtx, linkCtx, eventArgs);\n\t\tev.done = true;\n\t},\n\tonAfterLink: function(tagCtx, linkCtx) {\n\t\tvar i, arrHandler, arrBinding, data,\n\t\t\ttag = this,\n\t\t\tarrayBindings = tag._ars || {},\n\t\t\ttagCtxs = tag.tagCtxs,\n\t\t\tl = tagCtxs.length,\n\t\t\tselected = tag.selected || 0;\n\n\t\tfor (i = 0; i <= selected; i++) {\n\t\t\ttagCtx = tagCtxs[i];        // loop through tagCtxs up to selected\n\t\t\tdata = tagCtx.map\n\t\t\t\t? tagCtx.map.tgt        // 'data' is mapped data\n\t\t\t\t: tagCtx.args.length\n\t\t\t\t\t? tagCtx.args[0]    // or args[0]\n\t\t\t\t\t: tagCtx.view.data; // or defaults to current data.\n\n\t\t\tif ((arrBinding = arrayBindings[i]) && data !== arrBinding[0]) { // Is there previous array data on this tagCtx, different from new data\n\t\t\t\t$observe(arrBinding[0], arrBinding[1], true); //unobserve previous array\n\t\t\t\tdelete arrayBindings[i];\n\t\t\t}\n\t\t\tif (!arrayBindings[i] && $.isArray(data)) {\n\t\t\t\t$observe(data, arrHandler = function(ev, eventArgs) {\n\t\t\t\t\tvar tagCt = tagCtx;\n\t\t\t\t\ttag.onArrayChange(ev, eventArgs, tagCt, linkCtx);\n\t\t\t\t});\n\t\t\t\tarrayBindings[i] = [data, arrHandler]; // Store array data and arrayChangeHandler on tag._ars[i]\n\t\t\t}\n\t\t}\n\t\tfor (i = selected + 1; i < l; i++) { // If there were previous bindings on later tagCtxs, remove them\n\t\t\tif (arrBinding = arrayBindings[i]) {\n\t\t\t\t$observe(arrBinding[0], arrBinding[1], true); //unobserve previous binding\n\t\t\t\tdelete arrayBindings[i];\n\t\t\t}\n\t\t}\n\t\ttag._ars = arrayBindings;\n\t},\n\tonDispose: function() {\n\t\tvar l, tag = this;\n\t\tfor (l in tag._ars) {\n\t\t\t$observe(tag._ars[l][0], tag._ars[l][1], true); //unobserve\n\t\t}\n\t}\n});\n\n$extend($tags[\"for\"], linkMethods);\n$extend($tags[\"if\"], linkMethods);\n$extend($tags.include, linkMethods);\n\n$extend($tags[\"if\"], {\n\tonUpdate: function(ev, eventArgs, tagCtxs) {\n\t\tvar tci, prevArg, different;\n\t\tfor (tci = 0; (prevArg = this.tagCtxs[tci]) && prevArg.args.length; tci++) {\n\t\t\tprevArg = prevArg.args[0];\n\t\t\tdifferent = !prevArg !== !tagCtxs[tci].args[0];\n\t\t\tif ((!this.convert && !!prevArg) || different) {\n\t\t\t\treturn different;\n\t\t\t\t// If there is no converter, and newArg and prevArg are both truthy, return false to cancel update. (Even if values on later elses are different, we still don't want to update, since rendered output would be unchanged)\n\t\t\t\t// If newArg and prevArg are different, return true, to update\n\t\t\t\t// If newArg and prevArg are both falsey, move to the next {{else ...}}\n\t\t\t}\n\t\t}\n\t\t// Boolean value of all args are unchanged (falsey), so return false to cancel update\n\t\treturn false;\n\t},\n\tonAfterLink: function(tagCtx, linkCtx, eventArgs) {\n\t\tif (eventArgs) {\n\t\t\tthis.domChange(tagCtx, linkCtx, eventArgs);\n\t\t}\n\t}\n});\n\nfunction observeProps(map, ev, eventArgs) {\n\tif (eventArgs.change === \"set\") {\n\t\tvar target = map.tgt,\n\t\t\tl = target.length;\n\t\twhile (l--) {\n\t\t\tif (target[l].key === eventArgs.path) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (l === -1) {\n\t\t\tif (eventArgs.path && !eventArgs.remove) {\n\t\t\t\t$observable(target).insert({ key: eventArgs.path, prop: eventArgs.value });\n\t\t\t}\n\t\t} else if (eventArgs.remove) {\n\t\t\t$observable(target).remove(l);\n\t\t} else {\n\t\t\t$observable(target[l]).setProperty(\"prop\", eventArgs.value);\n\t\t}\n\t}\n}\n\nfunction observeMappedProps(map, ev, eventArgs) {\n\tvar item,\n\t\tsource = map.src,\n\t\tchange = eventArgs.change;\n\n\tif (change === \"set\") {\n\t\tif (eventArgs.path === \"prop\") {\n\t\t\t$observable(source).setProperty(ev.target.key, eventArgs.value);\n\t\t} else { // path === \"key\"\n\t\t\t$observable(source).setProperty(eventArgs.oldValue, null);\n\t\t\tdelete source[eventArgs.oldValue];\n\t\t\t$observable(source).setProperty(eventArgs.value, ev.target.prop);\n\t\t}\n\t} else if (change === \"remove\") {\n\t\titem = eventArgs.items[0];\n\t\t$observable(source).removeProperty(item.key);\n\t\tdelete source[item.key];\n\t} else if (change === \"insert\") {\n\t\titem = eventArgs.items[0];\n\t\tif (item.key) {\n\t\t\t$observable(source).setProperty(item.key, item.prop);\n\t\t}\n\t}\n}\n\nfunction shallowArrayFilter(allPath /*, object, parentObs*/) { // Filter used by {{props}} for the mappedProps target array\n\treturn allPath.indexOf(\".\") < 0;\n}\n\n$tags(\"props\", {\n\tbaseTag: \"for\",\n\tdataMap: $views.map({\n\t\tgetTgt: $tags.props.dataMap.getTgt,\n\t\tobsSrc: observeProps,\n\t\tobsTgt: observeMappedProps,\n\t\ttgtFlt: shallowArrayFilter\n\t}),\n\tflow: true\n});\n\n//========================\n// Extend jQuery namespace\n//========================\n\n$extend($, {\n\n\t//=======================\n\t// jQuery $.view() plugin\n\t//=======================\n\n\tview: $views.view = $view = function(node, inner, type) {\n\t\t// $.view() returns top view\n\t\t// $.view(node) returns view that contains node\n\t\t// $.view(selector) returns view that contains first selected element\n\t\t// $.view(nodeOrSelector, type) returns nearest containing view of given type\n\t\t// $.view(nodeOrSelector, \"root\") returns root containing view (child of top view)\n\t\t// $.view(nodeOrSelector, true, type) returns nearest inner (contained) view of given type\n\n\t\tfunction getInnerView(nd, isVl) {\n\t\t\tif (nd) {\n\t\t\t\tvwInfos = viewInfos(nd, isVl, rOpenViewMarkers);\n\t\t\t\tfor (j = 0, k = vwInfos.length; j < k; j++) {\n\t\t\t\t\tif ((view = viewStore[vwInfos[j].id]) && (view = view && type ? view.get(true, type) : view)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (inner !== !!inner) {\n\t\t\t// inner not boolean, so this is view(nodeOrSelector, type)\n\t\t\ttype = inner;\n\t\t\tinner = undefined;\n\t\t}\n\t\tvar view, vwInfos, i, j, k, l, elems,\n\t\t\tlevel = 0,\n\t\t\tbody = document.body;\n\n\t\tif (node && node !== body && topView._.useKey > 1) {\n\t\t\t// Perf optimization for common cases\n\n\t\t\tnode = \"\" + node === node\n\t\t\t\t? $(node)[0]\n\t\t\t\t: node.jquery\n\t\t\t\t\t? node[0]\n\t\t\t\t\t: node;\n\n\t\t\tif (node) {\n\t\t\t\tif (inner) {\n\t\t\t\t\tgetInnerView(node._df, true);\n\t\t\t\t\tif (!view) {\n\t\t\t\t\t\t// Treat supplied node as a container element and return the first view encountered.\n\t\t\t\t\t\telems = qsa ? node.querySelectorAll(bindElsSel) : $(bindElsSel, node).get();\n\t\t\t\t\t\tl = elems.length;\n\t\t\t\t\t\tfor (i = 0; !view && i < l; i++) {\n\t\t\t\t\t\t\tgetInnerView(elems[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn view;\n\t\t\t\t}\n\t\t\t\twhile (node) {\n\t\t\t\t\t// Move back through siblings and up through parents to find preceding node which is a _prv (prevNode)\n\t\t\t\t\t// script marker node for a non-element-content view, or a _prv (first node) for an elCnt view\n\t\t\t\t\tif (vwInfos = viewInfos(node, undefined, rViewMarkers)) {\n\t\t\t\t\t\tl = vwInfos.length;\n\t\t\t\t\t\twhile (l--) {\n\t\t\t\t\t\t\tview = vwInfos[l];\n\t\t\t\t\t\t\tif (view.open) {\n\t\t\t\t\t\t\t\tif (level < 1) {\n\t\t\t\t\t\t\t\t\tview = viewStore[view.id];\n\t\t\t\t\t\t\t\t\treturn view && type ? view.get(type) : view || topView;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlevel--;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// level starts at zero. If we hit a view.close, then we move level to 1, and we don't return a view until\n\t\t\t\t\t\t\t\t// we are back at level zero (or a parent view with level < 0)\n\t\t\t\t\t\t\t\tlevel++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tnode = node.previousSibling || node.parentNode;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn topView;\n\t},\n\n\tlink: $views.link = $link,\n\tunlink: $views.unlink = $unlink,\n\n\t//=====================\n\t// override $.cleanData\n\t//=====================\n\tcleanData: function(elems) {\n\t\tif (elems.length && isCleanCall) {\n\t\t\t// Remove JsViews bindings. Also, remove from the DOM any corresponding script marker nodes\n\t\t\tclean(elems);\n\t\t}\n\t\toldCleanData.apply($, arguments);\n\t}\n});\n\n// Possible future addition - e.g. for ckeditor tag control\n//$views.utility = {\n//\tvalidate: function(html) {\n//\t\ttry {\n//\t\t\ttopView.link(undefined, document.createElement(\"div\"), undefined, undefined, html, undefined, undefined, 1);\n//\t\t}\n//\t\tcatch (e) {\n//\t\t\treturn e.message;\n//\t\t}\n//\t}\n//};\n\n//===============================\n// Extend jQuery instance plugins\n//===============================\n\n$extend($.fn, {\n\tlink: function(expr, from, context, noIteration, parentView, prevNode, nextNode) {\n\t\treturn $link(expr, this, from, context, noIteration, parentView, prevNode, nextNode);\n\t},\n\tunlink: function(expr) {\n\t\treturn $unlink(expr, this);\n\t},\n\tview: function(inner, type) {\n\t\treturn $view(this[0], inner, type);\n\t}\n});\n\n//==============================================================================\n// Override jQuery methods that call our overridden cleanData, for disposal etc.\n//==============================================================================\n\n$.each([HTML, \"replaceWith\", \"empty\", \"remove\"], function(i, name) {\n\tvar oldFn = $.fn[name];\n\t$.fn[name] = function() {\n\t\tvar result;\n\t\tisCleanCall = 1; // Make sure cleanData does disposal only when coming from these calls.\n\t\ttry {\n\t\t\tresult = oldFn.apply(this, arguments);\n\t\t}\n\t\tfinally {\n\t\t\tisCleanCall = 0;\n\t\t}\n\t\treturn result;\n\t};\n});\n\n//===============\n// Extend topView\n//===============\n\n$extend(topView = $sub.topView, {tmpl: {links: {}}});\n\nviewStore = { 0: topView }; // Top-level view\n\n//=========================\n// Extend $.views.settings\n//=========================\n\n$viewsSettings({\n\twrapMap: wrapMap = {\n\t\toption: [1, \"<select multiple='multiple'>\", \"</select>\"],\n\t\tlegend: [1, \"<fieldset>\", \"</fieldset>\"],\n\t\tarea: [1, \"<map>\", \"</map>\"],\n\t\tparam: [1, \"<object>\", \"</object>\"],\n\t\tthead: [1, \"<table>\", \"</table>\"],\n\t\ttr: [2, \"<table><tbody>\", \"</tbody></table>\"],\n\t\ttd: [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n\t\tcol: [2, \"<table><tbody></tbody><colgroup>\", \"</colgroup></table>\"],\n\t\tsvg_ns: [1, \"<svg>\", \"</svg>\"],\n\n\t\t// IE6-8 can't serialize link, script, style, or any html5 (NoScope) tags,\n\t\t// unless wrapped in a div with non-breaking characters in front of it.\n\t\tdiv: $.support.htmlSerialize ? [0, \"\", \"\"] : [1, \"X<div>\", \"</div>\"]\n\t},\n\tlinkAttr: $viewsLinkAttr = \"data-link\",\n\tmerge: {\n\t\tinput: {\n\t\t\tfrom: inputAttrib, to: \"value\"\n\t\t},\n\t\ttextarea: valueBinding,\n\t\tselect: valueBinding,\n\t\toptgroup: {\n\t\t\tto: \"label\"\n\t\t}\n\t},\n\tjsrDbgMode: $viewsSettings.debugMode, // debugMode for JsRender\n\tdebugMode: function(debugMode) { // debugMode for JsViews\n\t\t$viewsSettings._dbgMode = debugMode !== false;\n\t\tif ($viewsSettings._dbgMode) {\n\t\t\tglobal._jsv = { // In debug mode create global _jsv, for accessing views, etc\n\t\t\t\tviews: viewStore,\n\t\t\t\tbindings: bindingStore\n\t\t\t};\n\t\t} else if (global._jsv) {\n\t\t\tglobal._jsv = undefined; // In IE8 cannot do delete global._jsv\n\t\t}\n\t},\n\tjsv: function() {\n\t\t$viewsSettings.debugMode($viewsSettings._dbgMode);\n\t\t$viewsLinkAttr = $viewsSettings.linkAttr;\n\t\terror = $views._err;\n\t\tlinkViewsSel = bindElsSel + \",[\" + $viewsLinkAttr + \"]\";\n\t\tnoDomLevel0 = $viewsSettings.noDomLevel0;\n\t\twrapMap.optgroup = wrapMap.option;\n\t\twrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n\t\twrapMap.th = wrapMap.td;\n\t}\n});\n\nreturn $;\n}));\n"],"sourceRoot":"/source/"}