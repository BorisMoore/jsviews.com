{"version":3,"sources":["range.js"],"names":["$","views","tags","range","boundProps","baseTag","render","val","array","tagCtx","this","start","props","end","params","args","length","isArray","slice","i","push","arguments","base","onArrayChange","ev","eventArgs","refresh","jQuery"],"mappings":";;CAOA,SAAUA,GACV,YAMAA,GAAEC,MAAMC,MACNC,OACEC,YAAa,QAAS,OAGtBC,QAAS,MAGTC,OAAQ,SAASC,GACf,GAAIC,GAAQD,EACVE,EAASC,KAAKD,OACdE,EAAQF,EAAOG,MAAMD,OAAS,EAC9BE,EAAMJ,EAAOG,MAAMC,IACnBD,EAAQH,EAAOK,OAAOF,KAExB,IAAID,GAASE,EACX,GAAKJ,EAAOM,KAAKC,OAQNhB,EAAEiB,QAAQT,KAEnBA,EAAQA,EAAMU,MAAMP,EAAOE,QAVJ,CAGvBL,KACAK,EAAMA,GAAO,CACb,KAAK,GAAIM,GAAIR,EAAOQ,GAAKN,EAAKM,IAC5BX,EAAMY,KAAKD,GASjB,MAAOE,WAAUL,QAAUJ,IAAUA,EAAMD,OAASC,EAAMC,KACtDH,KAAKY,KAAKd,GACVE,KAAKY,QAKXC,cAAe,SAASC,EAAIC,GAC1Bf,KAAKgB,eAKRhB,KAAKiB","file":"range.min.js","sourcesContent":["/*! Sample JsViews tag control: {{range}} control v0.9.84 (Beta)\nsee: http://www.jsviews.com/#download/sample-tagcontrols */\n/*\n * Copyright 2017, Boris Moore\n * Released under the MIT License.\n */\n\n(function($) {\n\"use strict\";\n\n// An extended {{for}} tag: {{range}} inherits from {{for}}, and adds\n// support for iterating over a range (start to end) of items within an array,\n// or for iterating directly over integers from start integer to end integer\n\n$.views.tags({\n  range: {\n    boundProps: [\"start\", \"end\"],\n\n    // Inherit from {{for}} tag\n    baseTag: \"for\",\n\n    // Override the render method of {{for}}\n    render: function(val) {\n      var array = val,\n        tagCtx = this.tagCtx,\n        start = tagCtx.props.start || 0,\n        end = tagCtx.props.end,\n        props = tagCtx.params.props;\n\n      if (start || end) {\n        if (!tagCtx.args.length) { // No array argument passed from tag, so create\n                                   // a computed array of integers from start to end\n\n          array = [];\n          end = end || 0;\n          for (var i = start; i <= end; i++) {\n            array.push(i);\n          }\n        } else if ($.isArray(array)) { // There is an array argument and start and end\n                 // properties,so render using the array truncated to the chosen range\n          array = array.slice(start, end);\n        }\n      }\n\n      // Call the {{for}} baseTag render method\n      return arguments.length || props && (props.start || props.end)\n        ? this.base(array)\n        : this.base(); // Final {{else}} tag, so call base() without arguments, for\n                       // final {{else}} of base {{for}} tag\n    },\n\n    // override onArrayChange of the {{for}} tag implementation\n    onArrayChange: function(ev, eventArgs) {\n      this.refresh();\n    }\n  }\n});\n\n})(this.jQuery);\n"]}