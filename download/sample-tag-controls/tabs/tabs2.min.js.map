{"version":3,"sources":["tabs2.js"],"names":["$","views","tags","tabs","dataBoundOnly","setSize","mainElement","displayElement","bindTo","width","height","template","setValue","val","index","tagElse","newPane","this","tagCtxs","length","observable","setProperty","onUpdate","pane","setTab","updateValue","jQuery"],"mappings":";;;CAQA,SAAUA,GACV,YAEAA,GAAEC,MAAMC,MACRC,MAEEC,eAAe,EACfC,SAAS,EACTC,YAAa,kBACbC,eAAgB,YAChBC,OAAQ,OACRC,MAAO,IACPC,OAAQ,IACRC,SACE,uXAgBFC,SAAU,SAASC,EAAKC,EAAOC,GAC7B,GAAIC,IAAWH,GACVE,GAAW,GAAKC,GAAWA,EAAUC,KAAKC,QAAQC,QACrDnB,EAAEoB,WAAWH,MAAMI,YAAY,OAAQL,IAG3CM,UAAU,EACVC,KAAM,EACNC,OAAQ,SAASV,GAEfd,EAAEoB,WAAWH,MAAMI,YAAY,OAAQP,GACvCG,KAAKQ,YAAY,GAAKX,QAKvBG,KAAKS","file":"tabs2.min.js","sourcesContent":["/*! Sample JsViews tag control: {{tabs}} control v1.0.0\nVersion using setValue()\nsee: http://www.jsviews.com/#download/sample-tagcontrols */\n/*\n * Copyright 2018, Boris Moore\n * Released under the MIT License.\n */\n\n(function($) {\n\"use strict\";\n\n$.views.tags({\ntabs: {\n  // JsViews tag settings\n  dataBoundOnly: true,\n  setSize: true,\n  mainElement: \".tabscontent td\",\n  displayElement: \".tabsview\",\n  bindTo: \"pane\",\n  width: 250,\n  height: 100,\n  template:\n    '{{if ~tagCtx.index===0}}' + // Render once only\n      '<table class=\"tabsview\"><tbody>' +\n        // Tab strip UI with 'click' handler calling tag.setTab() method\n        '<tr class=\"tabstrip\">' +\n          '{{for ~tag.tagCtxs}}' +\n            '<th data-link=\"class{:\\'header_\\' + (#index === ~tag.pane)} {on ~tag.setTab #index} {:props.caption}\"></th>' +\n          '{{/for}}' +\n        '</tr>' +\n        // Tab content with wrapped content of selected {{else}} block\n        '<tr class=\"tabscontent\">' +\n          '<td colspan=\"{{:~tag.tagCtxs.length}}\" data-link=\"{include ^tmpl=~tag.tagCtxs[~tag.pane].content}\"></td>' +\n        '</tr>' +\n      '</tbody></table>' +\n    '{{/if}}',\n\n  // JsViews handlers and methods\n  setValue: function(val, index, tagElse) {\n    var newPane = +val;\n    if (!tagElse && 0 <= newPane && newPane < this.tagCtxs.length) {\n      $.observable(this).setProperty(\"pane\", newPane); // Update tag.pane\n    }\n  },\n  onUpdate: false,\n  pane: 0, // Selected pane (defaults to 0)\n  setTab: function(index) {\n    // OnClick for a tab\n    $.observable(this).setProperty(\"pane\", index); // Update tag.pane\n    this.updateValue(\"\" + index); // Update external data, through two-way binding\n  }\n}\n});\n\n})(this.jQuery);\n\n"]}