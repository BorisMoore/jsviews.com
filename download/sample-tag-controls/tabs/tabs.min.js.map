{"version":3,"sources":["tabs.js"],"names":["$","views","tags","tabs","init","tagCtx","this","selectedIndex","props","tabCount","tagCtxs","length","render","index","onBind","self","contents","first","on","setTab","view","template","observable","setProperty","onSelectionChange","dataBoundOnly","jQuery"],"mappings":";;CAOA,SAAUA,GACV,YAEAA,GAAEC,MAAMC,MACNC,MACEC,KAAM,SAASC,GACbC,KAAKC,cAAgBF,EAAOG,MAAMD,eAAiB,EACnDD,KAAKG,SAAWH,KAAKI,QAAQC,QAE/BC,OAAQ,WACN,GAAIP,GAASC,KAAKD,MAClB,OAAOC,MAAKC,gBAAkBF,EAAOQ,MAAQR,EAAOO,SAAW,IAEjEE,OAAQ,WACN,GAAIC,GAAOT,IACXS,GAAKC,UAAS,EAAM,aAAaC,QAC9BC,GAAG,QAAS,gBAAiB,WAC5BH,EAAKI,OAAOnB,EAAEoB,KAAKd,MAAMO,UAG/BQ,SAAU,kbAmBVF,OAAQ,SAASN,GACfb,EAAEsB,WAAWhB,MAAMiB,YAAY,gBAAiBV,GAC5CP,KAAKkB,mBACPlB,KAAKkB,kBAAkBX,EAAOP,OAGlCmB,eAAe,MAIhBnB,KAAKoB","file":"tabs.min.js","sourcesContent":["/*! Sample JsViews tag control: {{tabs}} control v0.9.84 (Beta)\nsee: http://www.jsviews.com/#download/sample-tagcontrols */\n/*\n * Copyright 2017, Boris Moore\n * Released under the MIT License.\n */\n\n(function($) {\n\"use strict\";\n\n$.views.tags({\n  tabs: {\n    init: function(tagCtx) {\n      this.selectedIndex = tagCtx.props.selectedIndex || 0;\n      this.tabCount = this.tagCtxs.length;\n    },\n    render: function() {\n      var tagCtx = this.tagCtx;\n      return this.selectedIndex === tagCtx.index ? tagCtx.render() : \"\";\n    },\n    onBind: function() {\n      var self = this;\n      self.contents(true, \".tabstrip\").first()\n        .on(\"click\", \".header_false\", function() {\n          self.setTab($.view(this).index);\n        });\n    },\n    template: '<table class=\"tabsview\"><tbody>' +\n      '<tr class=\"tabstrip\">' +\n      '{{for ~tag.tagCtxs}}' +\n        '<th data-link=\"class{:\\'header_\\' + (#index === ~tag.selectedIndex)}\">' +\n          '{{>props.tabCaption}}' +\n        '</th>' +\n      '{{/for}}' +\n    '</tr>' +\n    '<tr class=\"tabscontent\">' +\n      '<td colspan=\"{{:~tag.tagCtxs.length}}\">' +\n        '<div style=\"width:{{attr:~tag.tagCtxs[0].props.width}};' +\n                    'height:{{attr:~tag.tagCtxs[0].props.height}}\">' +\n          '{^{for ^tmpl=~tag.tagCtxs[~tag.selectedIndex].tmpl /}}' +\n        '</div>' +\n        '</td>' +\n      '</tr>' +\n    '</tbody></table>',\n\n    //METHODS\n    setTab: function(index) {\n      $.observable(this).setProperty(\"selectedIndex\", index);\n      if (this.onSelectionChange) {\n        this.onSelectionChange(index, this);\n      }\n    },\n    dataBoundOnly: true\n  }\n});\n\n})(this.jQuery);\n\n"]}