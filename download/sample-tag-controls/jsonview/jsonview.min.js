/*! Sample JsViews tag control: {{jsonview}} control v0.9.91 (Beta)
see: http://www.jsviews.com/#download/sample-tagcontrols */
!function(n){"use strict";n.views.tags("jsonview",{template:{markup:'{{if ~tag.isArray(#data)}}<span class="jsonview"><span class="brace">[</span>{^{if length}}<ul class="jsonview">{^{for}}<li {{:~tag.isFn(#data) ? "class=\'function\'" : ""}}>{^{jsonview/}}{^{if #index < #parent.data.length-1}},{{/if}}</li>{{/for}}</ul>{{/if}}<span class="brace">]</span></span>{{else ~tag.isObject(#data)}}<span class="jsonview"><span class="brace">{</span>{^{if ~tag.notEmpty(#data)}}<ul class="jsonview">{^{props noFunctions=~noFunctions}}<li {{:~tag.isFn(prop) ? "class=\'function\'" : ""}}><label>"{^{encode: key}}": </label>{^{jsonview prop /}}{^{if #index < #parent.data.length-1}},{{/if}}</li>{{/props}}</ul>{{/if}}<span class="brace">}</span></span>{{else #data+""===#data}}"{^{str:#data}}"{{else}}{^{cvt:#data}}{{/if}}',converters:{str:function(s){return n.views.converters.encode(s+"").replace(/"/g,'\\"')},cvt:function(s){return n.isFunction(s)?this.ctx.noFunctions?"<em>[function...]</em>":n.views.converters.encode(s+""):s+""}}},notEmpty:function(s){for(var t in s)if(t!==n.expando&&s.hasOwnProperty(t)&&(!this.ctx.noFunctions||!n.isFunction(s[t])))return!0},init:function(){this.notEmpty.depends="*",this.ctx.noFunctions=this.ctx.noFunctions||this.tagCtx.props.noFunctions},isFn:n.isFunction,isArray:n.isArray,isObject:function(n){return n&&"object"==typeof n&&!(n instanceof Date)}})}(this.jQuery);
//# sourceMappingURL=jsonview.min.js.map
