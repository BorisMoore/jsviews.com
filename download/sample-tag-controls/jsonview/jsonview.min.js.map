{"version":3,"sources":["jsonview.js"],"names":["$","views","tags","template","markup","converters","str","val","encode","replace","cvt","isFunction","this","ctx","noFunctions","notEmpty","key","expando","hasOwnProperty","init","depends","tagCtx","props","isFn","isArray","isObject","Date","jQuery"],"mappings":";;CAOA,SAAUA,GACT,YACAA,GAAEC,MAAMC,KAAK,YACZC,UACCC,OAAQ,2uBAwBRC,YACCC,IAAK,SAAsBC,GAC1B,MAAOP,GAAEC,MAAMI,WAAWG,OAAOD,EAAI,IAAIE,QAAQ,KAAM,QAExDC,IAAK,SAAsBH,GAC1B,MAAIP,GAAEW,WAAWJ,GACRK,KAAKC,IAAIC,YACd,yBACAd,EAAEC,MAAMI,WAAWG,OAAOD,EAAI,IAE1BA,EAAM,MAKjBQ,SAAU,SAAkBR,GAC3B,IAAK,GAAIS,KAAOT,GACf,GAAIS,IAAQhB,EAAEiB,SAAWV,EAAIW,eAAeF,MAAUJ,KAAKC,IAAIC,cAAgBd,EAAEW,WAAWJ,EAAIS,KAC/F,OAAO,GAIVG,KAAM,WACLP,KAAKG,SAASK,QAAU,IACxBR,KAAKC,IAAIC,YAAcF,KAAKC,IAAIC,aAAeF,KAAKS,OAAOC,MAAMR,aAElES,KAAMvB,EAAEW,WACRa,QAASxB,EAAEwB,QACXC,SAAU,SAAkBlB,GAC3B,MAAOA,IAAsB,gBAARA,MAAsBA,YAAemB,WAK1Dd,KAAKe","file":"jsonview.min.js","sourcesContent":["/*! Sample JsViews tag control: {{jsonview}} control v0.9.91 (Beta)\nsee: http://www.jsviews.com/#download/sample-tagcontrols */\n/*\n\t* Copyright 2018, Boris Moore\n\t* Released under the MIT License.\n*/\n\n(function($) {\n\t\"use strict\";\n\t$.views.tags(\"jsonview\", {\n\t\ttemplate: {\n\t\t\tmarkup: '{{if ~tag.isArray(#data)}}'\n\t\t\t+ '<span class=\"jsonview\"><span class=\"brace\">[</span>{^{if length}}'\n\t\t\t\t+ '<ul class=\"jsonview\">'\n\t\t\t\t\t+ '{^{for}}'\n\t\t\t\t\t\t+ '<li {{:~tag.isFn(#data) ? \"class=\\'function\\'\" : \"\"}}>{^{jsonview/}}{^{if #index < #parent.data.length-1}},{{/if}}</li>'\n\t\t\t\t\t+ '{{/for}}'\n\t\t\t\t+ '</ul>'\n\t\t\t+ '{{/if}}<span class=\"brace\">]</span></span>'\n\t\t+ '{{else ~tag.isObject(#data)}}'\n\t\t\t+ '<span class=\"jsonview\"><span class=\"brace\">{</span>{^{if ~tag.notEmpty(#data)}}'\n\t\t\t\t+ '<ul class=\"jsonview\">'\n\t\t\t\t\t+ '{^{props noFunctions=~noFunctions}}'\n\t\t\t\t\t\t+ '<li {{:~tag.isFn(prop) ? \"class=\\'function\\'\" : \"\"}}>'\n\t\t\t\t\t\t\t+ '<label>\"{^{encode: key}}\": </label>'\n\t\t\t\t\t\t\t+ '{^{jsonview prop /}}{^{if #index < #parent.data.length-1}},{{/if}}'\n\t\t\t\t\t\t+ '</li>'\n\t\t\t\t\t+ '{{/props}}'\n\t\t\t\t+ '</ul>'\n\t\t\t+ '{{/if}}<span class=\"brace\">}</span></span>'\n\t\t+ '{{else #data+\"\"===#data}}'\n\t\t\t+ '\"{^{str:#data}}\"'\n\t\t+ '{{else}}'\n\t\t\t+ '{^{cvt:#data}}'\n\t\t+ '{{/if}}',\n\t\t\tconverters: {\n\t\t\t\tstr: function convertValue(val) {\n\t\t\t\t\treturn $.views.converters.encode(val+\"\").replace(/\"/g, '\\\\\"');\n\t\t\t\t},\n\t\t\t\tcvt: function convertValue(val) {\n\t\t\t\t\tif ($.isFunction(val)) {\n\t\t\t\t\t\treturn (this.ctx.noFunctions\n\t\t\t\t\t\t\t? \"<em>[function...]</em>\"\n\t\t\t\t\t\t\t: $.views.converters.encode(val+\"\"));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn val + \"\"; // TODO dates\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tnotEmpty: function notEmpty(val) {\n\t\t\tfor (var key in val) {\n\t\t\t\tif (key !== $.expando && val.hasOwnProperty(key) && (!this.ctx.noFunctions || !$.isFunction(val[key]))) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tinit: function() {\n\t\t\tthis.notEmpty.depends = \"*\";\n\t\t\tthis.ctx.noFunctions = this.ctx.noFunctions || this.tagCtx.props.noFunctions;\n\t\t},\n\t\tisFn: $.isFunction,\n\t\tisArray: $.isArray,\n\t\tisObject: function isObject(val) {\n\t\t\treturn val && typeof val === \"object\" && !(val instanceof Date);\n\t\t},\n\n\t});\n\n})(this.jQuery);\n"]}