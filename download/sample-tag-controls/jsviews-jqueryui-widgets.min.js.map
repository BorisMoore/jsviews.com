{"version":3,"sources":["jsviews-jqueryui-widgets.js"],"names":["global","$","undefined","checkboxRadioOnAfterLink","tagCtx","linkCtx","tag","this","props","elem","mainElem","val","bndArgs","name","value","checked","type","baseApply","arguments","displayElem","widget","label","option","tabsAccordionOnBind","element","on","ev","eventArgs","newSelected","selected","refresh","update","tabsAccordionOptions","activate","evt","ui","unlinkedClone","clone","find","addBack","removeAttr","remove","fn","views","tagDefs","argDefault","mainElement","init","content","elemType","_","inline","tmpl","markup","template","wrap","trim","attr","onBind","prop","i","optionKey","presets","initOptions","widgetName","options","widgetFullName","split","pop","length","tagName","id","data","isFunction","onAfterLink","each","key","charAt","slice","apply","onUpdate","dataBoundOnly","button","baseTag","setSize","contentCtx","innerHTML","ctx","event","autocomplete","linkedElement","change","item","select","focus","checkbox","radio","radiogroup","parents","radios","childTags","l","setValue","controlgroup","datepicker","onSelect","dateText","css","trigger","linkedElem","getValue","droppable","menu","progressbar","boundProps","bindTo","parseFloat","busy","resizable","linkedCtxParam","wrapLinkCtxElem","resize","setTimeout","size","width","height","selectmenu","slider","slide","_jsvChg","spinner","spin","parent","tabs","parseInt","tags","version","chkBx","params","paramprops","Math","random","args","convert","convertBack","unlinked","after","buttonset","buttons","draggable","_createHelper","helper","_super","drag","offset","left","top","accordion","_create","header","replace","sortable","innerView","moveFrom","startOption","start","stopOption","stop","view","index","moveTo","prevAll","cancel","observable","move","selectable","filter","setSelectedItems","selObs","setSelection","_domChg","onDispose","unobserve","isArray","observe","selectees","removeClass","eq","addClass","className","indexOf","push","jQuery"],"mappings":"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","file":"jsviews-jqueryui-widgets.min.js","sourcesContent":["/*! JsViews jQueryUI widget integration v0.9.84 (Beta)\nsee: http://www.jsviews.com/#download/jqueryui-tagcontrols */\n/*\n* https://www.jsviews.com/download/sample-tag-controls/jsviews-jqueryui-widgets.js\n* Copyright 2017, Boris Moore\n * Released under the MIT License.\n */\n\n/* Wrap behavior (wrapping HTML content) and default element, for each widget: */\n\n/*         autocomplete button   buttonset  droppable  menu      progressbar  resizable\n * wrap:   -            wrap     -          wrap       wrap      wrap         wrap     \n * elem:   input        button   -          -          ul        div          div      \n */\n\n/*         selectable   slider   spinner    tabs       sortable  draggable    accordion\n * wrap:   wrap         -        -          wrap       wrap      wrap         wrap\n * elem:   -            div      input      div        -         -            -\n */\n\n/*         controlgroup checkbox radio      selectmenu datepicker\n * wrap:   wrap         -        -          wrap       wrap\n * elem:   span         div      input      selectv    input\n */\n\n(function(global, $, undefined) {\n\"use strict\";\n\nif (!$ || !$.fn || !$.ui || !$.views) {\n  // jQuery is not loaded.\n  throw \"jsviews-jqueryui-widgets.js requires jQuery, jQuery UI and JsViews\";\n}\n\nfunction checkboxRadioOnAfterLink(tagCtx, linkCtx) {\n  var tag = this,\n    props = tagCtx.props,\n    elem = tag.mainElem[0],\n    val = tag.bndArgs()[0];\n  // Set the value to arg[0] (after applying converter, if there is one)\n\n  if (props.name) {\n    elem.name = props.name;\n  }\n  if (props.value) {\n    elem.value = props.value;\n  }\n  elem.checked = elem.type === \"radio\"\n    ? (val === elem.value)\n    : val && val !== \"false\";\n\n  tag.baseApply(arguments);\n  tag.displayElem = tag.widget.label;\n\n  if (props.label) {\n    tag.widget.option(\"label\", props.label);\n  }\n}\n\nfunction tabsAccordionOnBind(tagCtx, linkCtx) {\n  var tag = this;\n  tag.baseApply(arguments);\n  tag.displayElem = tag.widget.element;\n\n  tag.mainElem.on(\"jsv-domchange\", function(ev, tagCtx, linkCtx, eventArgs) {\n    var newSelected,\n      selected = tag.widget.option(\"active\");\n\n    tag.widget.refresh();\n    newSelected = tag.widget.option(\"active\")\n\n    if (selected !== newSelected) {\n      tag.update(newSelected);\n    }\n  });\n}\n\nfunction tabsAccordionOptions() {\n  var tag = this;\n  return {\n    activate: function(evt, ui) {\n      // Raise elemChangeHandler event when selected tab changes - for two-way binding to arg(0)\n      tag.update(tag.widget.option(\"active\"));\n    }\n  };\n}\n\nvar tagDefs = {\n\nwidget: {\n  argDefault: false, // Do not default missing arg to #data\n  mainElement: \"*\",\n  init: function(tagCtx) {\n    var content, elemType, props,\n      tag = this;\n\n    if (tag._.inline) {\n      props = tagCtx.props;\n      content = tagCtx.tmpl.markup;\n      if (!tag.template && (elemType = props.elem || tag.elem)) {\n        if (content) {\n          if (tag.wrap) {\n            tag.template = \"<\"+elemType+\">\" + $.trim(content) + \"</\"+elemType+\">\";\n          }\n        } else {\n          tag.template = (elemType === \"input\") ? \"<input/>\" : \"<\"+elemType+\"></\"+elemType+\">\";\n        }\n      }\n      tag.attr = \"html\";\n    }\n  },\n  onBind: function(tagCtx) {\n    var mainElem, prop, i, optionKey,\n      tag = this,\n      presets = tag.initOptions, // initOptions: array of option names that when set declaratively\n                                 // as tag options will be set on creation, not on afterLink\n      widgetName = tag.widgetName,\n      options = tag.options,     // hash (or function returning hash) of option settings\n      widgetFullName = widgetName;\n\n    widgetName = widgetName.split(\"-\").pop();\n\n    if (i = presets && presets.length) {\n      presets = {};\n      while (i--) {\n        optionKey = tag.initOptions[i];\n        if (prop = tagCtx.props[\"_\" + optionKey]) {\n          presets[optionKey] = prop;\n        }\n      }\n    }\n    if (widgetFullName === widgetName) {\n      widgetFullName = \"ui-\" + widgetName;\n    }\n\n    mainElem = tag.mainElem;\n    if (!mainElem || !mainElem[0]) {\n      // This may be due to using {{myWidget}} No element found here {{/myWidget}} \n      throw \"No element found for tag '\" + tag.tagName +\"'\";\n    }\n\n    if (tagCtx.props.id && !mainElem[0].id) {\n      mainElem[0].id = tagCtx.props.id;\n    }\n\n    // Instantiate widget\n    mainElem[widgetName](presets);\n\n    // Store widget instance\n    tag.widget = mainElem.data(widgetFullName) || mainElem.data(widgetName);\n\n    if (!tag.widget) {\n      // Widget failed to load, or is not a valid widget factory type\n      throw \"widget '\" + widgetName + \"' failed\";\n    }\n\n    if (options) {\n      if ($.isFunction(options)) {\n        options = tag.options();\n      }\n      mainElem[widgetName](\"option\", options); // initialize options\n    }\n  },\n  onAfterLink: function(tagCtx) {\n    var mainElem,\n      tag = this,\n      options = tag.options, // hash (or function returning hash) of option settings\n      props = tagCtx.props,\n      widgetName = tag.widgetName.split(\"-\").pop();\n\n    mainElem = tag.mainElem;\n    $.each(props, function(key, prop) {\n      var option;\n      if (key.charAt(0) === \"_\") {\n        key = key.slice(1);\n        option = options && options[key];\n        mainElem[widgetName](\"option\", key,\n          option && $.isFunction(option) && prop && $.isFunction(option)\n            ? function() {\n              // If the same event function option is overridden on the tagDef options\n              // (or in a _create override) and the tagCtx.props, call first the one on\n              // the initOptions options, and then the one declared on the tag properties.\n              option.apply(mainElem[0], arguments);\n              return prop.apply(mainElem[0], arguments);\n            }\n            : prop\n          );\n      }\n    });\n  },\n  onUpdate: false, // Don't rerender whole tag on update\n  dataBoundOnly: true,\n  attr: \"none\"\n},\n\nbutton: {\n  baseTag: \"widget\",\n  widgetName: \"button\",\n  elem: \"button\",\n  wrap: true,\n  setSize: true,\n  contentCtx: true,\n  onBind: function(tagCtx, linkCtx) {\n    var elem = this.mainElem[0];\n      elem.innerHTML = elem.innerHTML || \"&nbsp;\"; // Fixes jQuery UI button issue if no label text\n    this.baseApply(arguments);\n  },\n  onAfterLink: function(tagCtx, linkCtx, ctx, event) {\n    this.baseApply(arguments);\n    if (event) {\n      this.widget.refresh();\n    }\n  }\n},\nautocomplete: {\n  baseTag: \"widget\",\n  widgetName: \"autocomplete\",\n  linkedElement: \"*\",\n  elem: \"input\",\n  setSize: true,\n  options: function() {\n    var tag = this;\n    return {\n      change: function(evt, ui) {\n        if (ui.item) {\n          tag.update(ui.item.value);\n          // If there is a selected item, update bound value on keydown.\n          // (Alternatively can set trigger=false to update on change)\n        }\n      },\n      select: function(evt, ui) {\n        if (ui.item) {\n          tag.update(ui.item.value);\n        }\n      },\n      focus: function(evt, ui) {\n        return false;\n      }\n    };\n  }\n},\ncheckbox: {\n  baseTag: \"widget\",\n  widgetName: \"checkboxradio\",\n  template: \"<label><input type='checkbox'/></label>\",\n  mainElement: \"input\",\n  linkedElement: \"input\",\n  setSize: true,\n  onAfterLink: checkboxRadioOnAfterLink\n},\nradio: {\n  baseTag: \"widget\",\n  widgetName: \"checkboxradio\",\n  template: \"<label><input type='radio'/></label>\",\n  mainElement: \"input\",\n  linkedElement: \"input\",\n  setSize: true,\n  onBind: function() {\n    var tag = this,\n      radiogroup = tag.parents.radiogroup;\n    tag.baseApply(arguments);\n    if (radiogroup && !radiogroup.onAfterLink) {\n      // If {{radio}} is child of {{radiogroup}}, make radiogroup\n      // notify radio buttons of selection changes\n      radiogroup.onAfterLink = function(tagCtx) {\n        var val = this.bndArgs()[0],\n          radios = this.childTags(\"radio\"),\n          l = radios.length;\n        while (l--) {\n          radios[l].setValue(val);\n        }\n      }\n    }\n  },\n  onAfterLink: checkboxRadioOnAfterLink,\n  setValue: function(val) {\n    this.widget.refresh();\n  }\n},\ncontrolgroup: {\n  baseTag: \"widget\",\n  widgetName: \"controlgroup\",\n  elem: \"span\",\n  wrap: true,\n  contentCtx: true,\n  onBind: function() {\n    var tag = this;\n    tag.baseApply(arguments);\n    tag.mainElem.on(\"jsv-domchange\", function() {\n      tag.widget.refresh();\n    });\n  }\n},\ndatepicker: {\n  baseTag: \"widget\",\n  widgetName: \"datepicker\",\n  linkedElement: \"*\",\n  elem: \"input\",\n  setSize: true,\n\n  options: function() {\n    var tag = this;\n    return {\n      onSelect: function(dateText) {\n        tag.value = dateText;\n//https://github.com/BorisMoore/jsviews/issues/360#issuecomment-272936627\n//var dateObj = $.datepicker.parseDate(tag._datefrmt, dateText);\n//tag.update(dateObj);\n        tag.update(dateText);\n      }\n    };\n  },\n  onBind: function(tagCtx) {\n    var tag = this;\n    tag.baseApply(arguments);\n    if (tag.mainElem[0].tagName !== \"INPUT\") {\n      // This datepicker is not using an input (e.g. using a div) - so set to inline-\n      tag.mainElem.css(\"display\", \"inline-block\");\n    } else {\n      tag.tagCtx.props.trigger = false;\n    }\n  },\n//https://github.com/BorisMoore/jsviews/issues/360#issuecomment-272936627\n//  onAfterLink: function(tagCtx) {\n//    var tag = this,\n//      value = tag.bndArgs()[0];\n\n//    tag.baseApply(arguments);\n//    tag._datefrmt = $('input', tag.mainElem).datepicker(\"option\", \"dateFormat\");\n//    var formatted = $.datepicker.formatDate(tag._datefrmt, new Date(tag.bndArgs()[0]));\n//     tag.setValue(formatted);\n//  },\n  setValue: function(value) {\n    var tag = this;\n    if (value !== undefined && value !== tag.value) {\n      tag.value = value;\n      tag.linkedElem.datepicker(\"setDate\", value);\n    }\n  },\n  getValue: function() {\n    return this.value;\n  }\n},\n//dialog: { // Currently not supported. (Support would require overriding _createWrapper code.)\n//  baseTag: \"widget\",\n//  widgetName: \"dialog\",\n//  wrap: true,\n//  elem: \"div\"\n//},\ndroppable: {\n  baseTag: \"widget\",\n  widgetName: \"droppable\",\n  elem: \"div\",\n  wrap: true,\n  setSize: true,\n  contentCtx: true,\n  setValue: function(value) {\n    if ($.isFunction(value)) {\n      this.widget.option(\"drop\", value); // Set the handler function for the drop action\n    }\n  }\n},\nmenu: {\n  baseTag: \"widget\",\n  widgetName: \"menu\",\n  elem: \"ul\",\n  wrap: true,\n  setSize: true,\n  contentCtx: true,\n  initOptions: [\"menus\", \"items\", \"role\"], // Options which need to be set on creation, not later\n  setValue: function(value) {\n    if ($.isFunction(value)) {\n      this.widget.option(\"select\", value); // Set the menu select handler\n    }\n  }\n},\nprogressbar: {\n  baseTag: \"widget\",\n  widgetName: \"progressbar\",\n  boundProps: [\"busy\"],\n  bindTo: 0,\n  elem: \"div\",\n  wrap: true,\n  setSize: true,\n  contentCtx: true,\n  setValue: function(value) {\n    this.widget.value(parseFloat(value) || 0);\n  },\n  getValue: function() {\n    return this.widget.value();\n  },\n  onAfterLink: function(tagCtx) {\n    var tag = this;\n    tag.baseApply(arguments);\n    if (tagCtx.props.busy) {\n      tag.widget.value(false);\n    }\n  }\n},\nresizable: {\n  baseTag: \"widget\",\n  widgetName: \"resizable\",\n  bindTo: [\"width\", \"height\"],\n  linkedCtxParam: [\"width\", \"height\"],\n  wrapLinkCtxElem: true,\n  elem: \"div\",\n  wrap: true,\n  contentCtx: true,\n  options: function() {\n    var tag = this;\n    return {\n      resize: function(evt, ui) {\n        setTimeout(function() {\n          tag.update(ui.size.width, ui.size.height);\n        },0);\n      }\n    };\n  },\n  setValue: function(width, height) {\n    var mainElem = this.mainElem;\n    if (width !== undefined) {\n      mainElem.width(width || 0);\n    }\n    if (height !== undefined) {\n      mainElem.height(height || 0);\n    }\n  },\n  getValue: function() {\n    var mainElem = this.mainElem;\n    return [mainElem.width(), mainElem.height()];\n  }\n},\nselectmenu: {\n  baseTag: \"widget\",\n  widgetName: \"selectmenu\",\n  linkedElement: \"select\",\n  elem: \"select\",\n  wrap: true,\n  setSize: true,\n  contentCtx: true,\n  options: function() {\n    var tag = this;\n    return {\n      change: function(evt, ui) {\n        tag.update(ui.item.value);\n      }\n    };\n  },\n  onBind: function() {\n    var tag = this;\n    tag.baseApply(arguments);\n    tag.mainElem.on(\"jsv-domchange\", function() {\n      tag.widget.refresh();\n    });\n    tag.displayElem = tag.widget.button;\n  },\n  setValue: function(value) {\n    this.mainElem[0].value = value;\n    this.widget.refresh();\n  },\n  getValue: function() { \n    return this.mainElem[0].value;\n  }\n},\nslider: {\n  baseTag: \"widget\",\n  widgetName: \"slider\",\n  bindTo: [0, 1],\n  linkedElement: [\"*\", \"~foo\"],\n  elem: \"div\",\n  setSize: true,\n  options: function() {\n    var tag = this;\n    return {\n      slide: function(evt, ui) {\n        setTimeout(function() {\n          tag.update(ui.value);\n        }, 0);\n      }\n    };\n  },\n  onAfterLink: function(tagCtx) {\n    var tag = this;\n    if (!tag.linkCtx.elem._jsvChg) {\n      // If change not triggered by a the spinner itself changing value\n      tag.baseApply(arguments);\n    }\n  },\n  setValue: function(value) {\n    this.widget.value(value || 0);\n  },\n  getValue: function() {\n    return this.widget.value();\n  }\n},\nspinner: {\n  baseTag: \"widget\",\n  widgetName: \"spinner\",\n  linkedElement: \"input\",\n  elem: \"input\",\n  setSize: true,\n  options: function() {\n    var tag = this;\n    return {\n      spin: function(evt, ui) {\n        tag.update(ui.value);\n      }\n    };\n  },\n  onAfterLink: function(tagCtx) {\n    var tag = this;\n    if (!tag.linkCtx.elem._jsvChg) {\n      // If change not triggered by a the spinner itself changing value\n      tag.baseApply(arguments);\n      tag.displayElem = this.linkedElem.parent(); // jQuery UI wraps the input in a span\n      if (tagCtx.props.width) {\n        // In addition to generic setting of width on the\n        // displayElem, need also to set width on the input.\n        this.linkedElem.width(tagCtx.props.width - tag.displayElem.find(\".ui-spinner-up\").width()-9);\n      }\n    }\n  },\n  setValue: function(value) {\n    this.widget.value(value || 0);\n  },\n  getValue: function() {\n    return this.widget.value();\n  }\n},\ntabs: {\n  baseTag: \"widget\",\n  widgetName: \"tabs\",\n  bindTo: 0,\n  elem: \"div\",\n  wrap: true,\n  setSize: true,\n  contentCtx: true,\n  options: tabsAccordionOptions,\n  onBind: tabsAccordionOnBind,\n  setValue: function(value) {\n    // Select the tab whose index is the currently selected one\n    this.widget.option(\"active\", parseInt(value));\n  },\n  getValue: function() { // Helper: get the index of the currently selected tab\n    return this.widget.option(\"active\");\n  }\n}\n\n};\n\n$.views.tags(tagDefs);\n\nif ($.ui.version.slice(0, 4) === \"1.11\") {\n  // Add backward compatibility for {{buttonset}} and {{button}}\n  tagDefs.button = {\n    baseTag: \"widget\",\n    widgetName: \"button\",\n    elem: \"button\",\n    setSize: true,\n    contentCtx: true,\n    init: function(tagCtx, linkCtx) {\n      var template,\n        tag = this,\n        content = tagCtx.tmpl,\n        props = tagCtx.props,\n        id = props.id,\n        parent = tag.parent;\n\n      if (tag._.radio = parent && parent.tagName === \"buttonset\") {\n        tagCtx = parent.tagCtx;\n      } else {\n        tag._.chkBx = (tag._.inline ? props : linkCtx.elem).type === \"checkbox\";\n      }\n\n      var  params = tagCtx.params,\n        paramprops = params.props || {};\n\n      tag.baseApply(arguments);\n\n      if (tag._.inline) {\n        content = content && content.markup || \"&nbsp;\";\n        // (&nbsp; fixes a jQueryUI button rendering issue)\n        if (tag._.radio || tag._.chkBx) {\n          id = id || \"jsv\" + Math.random();\n          template = '<input id=\"' + id + '\" data-link=\"' + params.args[0] \n            + (paramprops.convert ? \" convert=\" + paramprops.convert : \"\")\n            + (paramprops.convertBack ? \" convertBack=\" + paramprops.convertBack : \"\")\n            + (tag._.radio\n              ? '\" name=\"' + parent.id + '\" type=\"radio\" value=\"' + props.value + \n                '\"/><label for=\"' + id + '\">' + content + '</label>'\n              : '\" type=\"checkbox\"/><label for=\"' + id + '\">' + content + '</label>');\n        } else {\n          template = \"<button>\" + content + \"</button>\";\n        }\n        tag.template = template;\n      }\n    },\n    onAfterLink: function(tagCtx, linkCtx) {\n      var tag = this,\n        elem = linkCtx.elem,\n        val = tag.bndArgs()[0];\n\n      if (tag._.radio || tag._.chkBx) {\n        if (!tag._.inline) {\n          if (tag._.unlinked && !elem.id) {\n            elem.id = \"jsv\" + Math.random();\n            $(elem).after('<label for=\"' + elem.id + '\">&nbsp;</label>');\n          }\n          elem.checked = tag._.radio\n            ? (elem.name = tag.parent.id, val === elem.value)\n            : val && val !== \"false\";\n        }\n\n        tag.baseApply(arguments);\n\n        elem = tag.mainElem[0];\n\n        if (tag._.radio) {\n          // Use {^{button value=\"xxx\"}}Label{{/button}}\n          if (elem.value === \"undefined\") {\n            // Default, for {^{button}}xxx{{/button}} or {^{button _label=\"xxx\"/}}\n            elem.value = tag.widget.option(\"label\"); \n          }\n          elem.checked = val === elem.value;\n        } else {\n          elem.checked = val && val !== \"false\";\n        }\n\n        if (tag._.chkBx) {\n          tag.widget.refresh();\n        }\n      } else {\n        if (!tag._.inline) {\n          elem.innerHTML = elem.innerHTML || \"&nbsp;\"; // Fixes jQuery UI button issue if no label text\n        }\n        tag.baseApply(arguments);\n      }\n    }\n  };\n\n  tagDefs.buttonset = {\n    baseTag: \"widget\",\n    widgetName: \"buttonset\",\n    setSize: true,\n    contentCtx: true,\n    init: function(tagCtx) {\n      var id,\n        tag = this;\n\n      tag.baseApply(arguments);\n\n      if (tag._.inline) {\n        tag.id = tagCtx.props.id || \"jsv\" + Math.random();\n        tag.template = '<span id=\"' + tag.id + '\">' + tagCtx.tmpl.markup + \"</span>\";\n      }\n    },\n    onAfterLink: function(tagCtx, linkCtx) {\n      var tag = this,\n        elem = linkCtx.elem,\n        val = tag.bndArgs()[0];\n      tag.baseApply(arguments);\n      tag.widget.buttons.each(function(i, elem) {\n        elem.checked = val === elem.value;\n        $(elem).button(\"refresh\");\n      });\n    }\n  };\n}\n\n// Compile tags\n$.views.tags(tagDefs);\n\nfunction unlinkedClone() {\n  // Ensure that cloned element (and its contents) created by jQuery UI to show dragging\n  // element does not have any data-jsv tokens (since deleting the element would then\n  // remove those views associated with the original element)\n  var clone = $(this).clone();\n  clone.find(\"*\").addBack().removeAttr( \"id data-link data-jsv data-jsv-df\" );\n  clone.find(\"script\").remove();\n  return clone;\n}\n\nif ($.ui.draggable) {\n  // Create derived draggable widget\n  $.widget(\"jsv.draggable\", $.ui.draggable, {\n    _createHelper: function() {\n      if (this.options.helper === \"clone\") {\n        this.options.helper = unlinkedClone;\n      }\n      return this._super();\n    }\n  });\n\n  $.views.tags(\"draggable\", {\n    baseTag: \"widget\",\n    widgetName: \"jsv-draggable\",\n    bindTo: [\"left\", \"top\"],\n    linkedCtxParam: [\"left\", \"top\"],\n    elem: \"div\",\n    wrap: true,\n    setSize: true,\n    contentCtx: true,\n    options: function() {\n      var tag = this;\n      return {\n        drag: function(evt, ui) {\n          setTimeout(function() {\n            tag.update(ui.offset.left, ui.offset.top);\n          },0);\n        }\n      };\n    },\n    setValue: function(left, top) {\n      var mainElem = this.mainElem;\n      if (left !== undefined) {\n        mainElem.offset({left: left});\n      }\n      if (top !== undefined) {\n        mainElem.offset({top: top});\n      }\n    },\n    getValue: function(left, top) {\n      var offset = this.mainElem.offset();\n      return [offset.left, offset.top];\n    }\n  });\n}\n\nif ($.ui.accordion) {\n  // Create derived accordion widget\n  $.widget(\"jsv.accordion\", $.ui.accordion, {\n    _create: function() {\n      var widget = this;\n      widget.options.header = widget.options.header.replace(\":not(li):even\", \":not(li,script):even\");\n      widget._super();\n    }\n  });\n\n  $.views.tags(\"accordion\", {\n    baseTag: \"widget\",\n    widgetName: \"jsv-accordion\",\n    bindTo: 0,\n    wrap: true,\n    setSize: true,\n    contentCtx: true,\n    options: tabsAccordionOptions,\n    initOptions: [\"header\"], // Options which need to be set on creation, not later\n    onBind: tabsAccordionOnBind,\n    setValue: function(value) {\n      // Select the panel whose index is the currently selected one\n      this.widget.option(\"active\", parseInt(value));\n    },\n    getValue: function() { // Helper: get the index of the currently selected panel\n      return this.widget.option(\"active\");\n    }\n  });\n}\n\nif ($.ui.sortable) {\n  $.widget(\"jsv.sortable\", $.ui.sortable, {\n    _create: function() {\n      var innerView, moveFrom,\n        widget = this,\n        startOption = widget.options.start,\n        stopOption = widget.options.stop;\n\n      widget.option({\n        start: function(event, ui) {\n          startOption && startOption.apply(this, arguments);\n\n          if (widget.option(\"bindArray\") !== false) {\n            innerView = ui.item.view(); // The view of the item that is being dragged\n            if (innerView.type === \"item\") {\n              // The sortable items are within a {{for}} loop, so this is a data-linked sortable list\n              moveFrom = innerView.index + 1; // 1-based starting index of dragged item\n            }\n          }\n        },\n        stop: function(event, ui) {\n          var moveTo;\n\n          if (moveFrom) {\n            // This is a data-linked sortable list\n            moveTo = ui.item.prevAll(ui.item[0].tagName).length; // The new index after\n            // being dragged (count of previous siblings of same tagName)\n            widget.cancel(); // Now cancel the DOM changes, since we are data-driven,\n            // and should use JsViews data-linking to move the sorted items\n            $.observable(innerView.parent.data).move(moveFrom-1, moveTo); // Make the equivalent\n            // observable change to the underlying data\n            moveFrom = undefined;\n            // Remove the starting index, ready for new sorting actions on this sortable list\n          }\n          stopOption && stopOption.apply(this, arguments);\n        }\n      });\n      widget._super();\n    }\n  });\n\n  $.views.tags(\"sortable\", {\n    baseTag: \"widget\",\n    widgetName: \"jsv-sortable\",\n    wrap: true,\n    contentCtx: true,\n  });\n}\n\nif ($.ui.selectable) {\n  $.widget(\"jsv.selectable\", $.ui.selectable, {\n    _create: function() {\n      var widget = this;\n\n      widget.options.filter += \":not(script)\";\n      widget._super();\n    }\n  });\n\n  $.views.tags(\"selectable\", {\n    baseTag: \"widget\",\n    widgetName: \"jsv-selectable\",\n    bindTo: 0,\n    wrap: true,\n    setSize: true,\n    contentCtx: true,\n    options: function() {\n      var tag = this;\n      if (tag.selected) {\n        return {\n          stop: function(evt, ui) {\n            tag.setSelectedItems();\n          }\n        };\n      }\n    },\n    initOptions: [\"filter\"], // Options which need to be set on creation, not later\n    onBind: function() {\n      var tag = this;\n      tag.selected = []; // Value of first arg (after applying converter, if there is one)\n\n      function selObs(ev, eventArgs) {\n        if (!eventArgs.refresh) {\n          tag.setSelection();\n        }\n      }\n\n      tag.selObs = selObs; // Store function instance, for disposing of just this binding, in onDispose\n      tag.baseApply(arguments);\n      tag.mainElem.on(\"jsv-domchange.sel\", function() {\n        tag.widget.refresh();\n        tag.selected._domChg = 2;\n        tag.setSelectedItems();\n        tag.selected._domChg = undefined;\n      });\n    },\n    onDispose: function() {\n      $.unobserve(this.selected, this.selObs);  // Remove just this binding to selected array\n    },\n    setValue: function(selected) { // Set the new observed array of selected indices\n      var tag = this;\n      if ($.isArray(selected) && tag.selected !== selected) {\n        $.unobserve(tag.selected, tag.selObs);\n        tag.selected = selected;\n        if (selected !== tag.bndArgs[0]) {\n          tag.update(selected);\n        }\n        $.observe(selected, tag.selObs);\n        tag.setSelection();\n      }\n    },\n    getValue: function() {\n      return this.selected;\n    },\n    setSelection: function() {\n      // Set the class on the new selected elements (based on tag.selected array of indices)\n      var tag = this,\n        l = tag.selected.length;\n      if (!tag.selected._domChg) {\n        // No need to update if during a domchange event - only if a selectable change event\n        // Remove selected class from all selectable elements\n        tag.widget.selectees.removeClass(\"ui-selected\");\n        while (l--) {\n          // Set selected class on elements at indices in tag.selected array\n          tag.widget.selectees.eq(tag.selected[l]).addClass(\"ui-selected\");\n        }\n      }\n    },\n    setSelectedItems: function() {\n      // Set observable selectedItems array based on selected elements managed by widget\n      var tag = this,\n        selected = [];\n      if (tag.selected && tag.selected._domChg !== 1) {\n        if (tag.selected._domChg) {\n          // Avoid race conditions when multiple selectables bind to same selected array\n          tag.selected._domChg--;\n        }\n        tag.widget.selectees.each(function(index, elem) {\n          if ((' ' + elem.className + ' ').indexOf(' ui-selected ') > -1) {\n            selected.push(index); // This is the index of a selected element\n          }\n        });\n        tag.setValue(tag.selected); // Update the tag to bind to the new selected array\n        $.observable(tag.selected).refresh(selected); // Refresh to the new selected indices\n      }\n    }\n  });\n}\n})(this, this.jQuery);\n"]}