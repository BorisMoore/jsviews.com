{"version":3,"sources":["jsviews-jqueryui-widgets.js"],"names":["global","$","undefined","getConverter","tag","cvt","tagCtx","contentView","getRsc","checkboxRadioBeforeBind","linkCtx","this","props","elem","mainElem","bndArgs","name","value","baseApply","arguments","displayElem","widget","label","option","tabsAccordionOnBind","on","ev","eventArgs","newSelected","selected","refresh","updateValue","tabsAccordionOptions","activate","evt","ui","initFormatter","dataFormatter","dataFormat","parse","parseData","call","formatData","format","unlinkedClone","clone","find","addBack","removeAttr","remove","fn","views","tagDefs","argDefault","mainElement","init","content","elemType","inline","tmpl","markup","template","wrap","trim","attr","onBeforeBind","prop","i","optionKey","presets","initOptions","widgetName","options","widgetFullName","split","pop","length","tagName","id","data","isFunction","onAfterLink","each","key","charAt","slice","apply","onUpdate","dataBoundOnly","button","baseTag","setSize","contentCtx","onBind","innerHTML","ctx","event","autocomplete","linkedElement","change","item","select","focus","checkbox","setValue","val","checked","radio","radiogroup","parents","radios","childTags","l","controlgroup","datepicker","parseDate","formatDate","dateFormat","_dateFormat","_defaults","convert","cvtBk","convertBack","Date","fix","onSelect","dateText","css","trigger","getValue","droppable","menu","progressbar","boundProps","bindTo","busy","parseFloat","resizable","linkedCtxParam","resize","setTimeout","updateValues","size","width","height","index","selectmenu","slider","slide","_jsvChg","spinner","displayFormat","window","Globalize","_culture","numberFormat","spin","_format","parent","_parse","timespinner","date","setHours","getDay","getHours","getMinutes","extend","step","page","keepDay","returnDate","setMinutes","tabs","parseInt","anchor","base","location","href","replace","tags","version","_","chkBx","type","params","paramprops","Math","random","args","unlinked","after","buttonset","buttons","draggable","_createHelper","helper","_super","drag","offset","left","top","accordion","_create","header","sortable","innerView","moveFrom","startOption","start","stopOption","stop","view","moveTo","prevAll","cancel","observable","move","selectable","filter","setSelectedItems","selObs","setSelection","_domChg","onDispose","unobserve","isArray","observe","selectees","removeClass","eq","addClass","className","indexOf","push","jQuery"],"mappings":"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","file":"jsviews-jqueryui-widgets.min.js","sourcesContent":["/*! JsViews jQueryUI widget integration v0.9.87 (Beta)\nsee: http://www.jsviews.com/#download/jqueryui-tagcontrols */\n/*\n* https://www.jsviews.com/download/sample-tag-controls/jsviews-jqueryui-widgets.js\n* Copyright 2017, Boris Moore\n * Released under the MIT License.\n */\n\n/* Wrap behavior (wrapping HTML content) and default element, for each widget: */\n\n/*       autocomplete button   buttonset droppable   menu        progressbar  resizable\n * wrap: -            wrap     -         wrap        wrap        wrap         wrap     \n * elem: input        button   -         -           ul          div          div      \n */\n\n/*       selectable   slider   spinner   timespinner  tabs       sortable     draggable\n * wrap: wrap         -        -         -            wrap       wrap         wrap     \n * elem: -            div      input     input        -          -            -      \n */\n\n/*       accordion    checkbox radio     controlgroup selectmenu datepicker\n * wrap: wrap         -        -         wrap         wrap       wrap\n * elem: -            div      input     span         selectv    input\n */\n\n(function(global, $, undefined) {\n\"use strict\";\n\nif (!$ || !$.fn || !$.ui || !$.views) {\n  // jQuery is not loaded.\n  throw \"jsviews-jqueryui-widgets.js requires jQuery, jQuery UI and JsViews\";\n}\n\nfunction getConverter(tag, cvt) {\n  return cvt + \"\" === cvt ? tag.tagCtx.contentView.getRsc(\"converters\", cvt) : cvt;\n}\n\nfunction checkboxRadioBeforeBind(tagCtx, linkCtx) {\n  var tag = this,\n    props = tagCtx.props,\n    elem = tag.mainElem[0],\n    val = tag.bndArgs()[0];\n  // Set the value to arg[0] (after applying converter, if there is one)\n\n  if (props.name) {\n    elem.name = props.name;\n  }\n  if (props.value) {\n    elem.value = props.value;\n  }\n\n  tag.baseApply(arguments);\n  tag.displayElem = tag.widget.label;\n\n  if (props.label) {\n    tag.widget.option(\"label\", props.label);\n  }\n}\n\nfunction tabsAccordionOnBind(tagCtx, linkCtx) {\n  var tag = this;\n  tag.baseApply(arguments);\n\n  tag.mainElem.on(\"jsv-domchange\", function(ev, tagCtx, linkCtx, eventArgs) {\n    var newSelected,\n      selected = tag.widget.option(\"active\");\n\n    tag.widget.refresh();\n    newSelected = tag.widget.option(\"active\")\n\n    if (selected !== newSelected) {\n      tag.updateValue(newSelected);\n    }\n  });\n}\n\nfunction tabsAccordionOptions() {\n  var tag = this;\n  return {\n    activate: function(evt, ui) {\n      // Raise elemChangeHandler event when selected tab changes - for two-way binding to arg(0)\n\t\t\ttag.updateValue(tag.widget.option(\"active\"));\n    }\n  };\n}\n\nfunction initFormatter(tag, tagCtx) { // Used by datepicker and spinner\n  var dataFormatter,\n    dataFormat = tagCtx.props.dataFormat;\n  if (dataFormat === undefined) {\n    dataFormat = tag.dataFormat;\n  }\n  dataFormatter = dataFormat && dataFormat.parse\n    ? dataFormat\n    : tag.dataFormatter;\n\n  // Formatter can be provided as tag.dataFormat or tagCtx.props.dataFormat\n  tag.parseData = function(value) {\n    return dataFormatter.parse.call(tag, value, tag.tagCtx.props);\n  };\n  tag.formatData = function(value) {\n    return dataFormatter.format.call(tag, value, tag.tagCtx.props);\n  };\n  return dataFormat;\n}\n\nvar tagDefs = {\n// ============================= WIDGET =============================\nwidget: {\n  argDefault: false, // Do not default missing arg to #data\n  mainElement: \"*\",\n  init: function(tagCtx) {\n    var content, elemType,\n      tag = this;\n\n    if (tag.inline) {\n      content = tagCtx.tmpl.markup;\n      if (!tag.template && (elemType = tagCtx.props.elem || tag.elem)) {\n        if (content) {\n          if (tag.wrap) {\n            tag.template = \"<\"+elemType+\">\" + $.trim(content) + \"</\"+elemType+\">\";\n          }\n        } else {\n          tag.template = (elemType === \"input\") ? \"<input/>\" : \"<\"+elemType+\"></\"+elemType+\">\";\n        }\n      }\n      tag.attr = \"html\";\n    }\n  },\n  onBeforeBind: function(tagCtx) {\n    var mainElem, prop, i, optionKey,\n      tag = this,\n      presets = tag.initOptions, // initOptions: array of option names that when set declaratively\n                                 // as tag options will be set on creation, not on afterLink\n      widgetName = tag.widgetName,\n      options = tag.options,     // hash (or function returning hash) of option settings\n      widgetFullName = widgetName;\n\n    widgetName = widgetName.split(\"-\").pop();\n\n    if (i = presets && presets.length) {\n      presets = {};\n      while (i--) {\n        optionKey = tag.initOptions[i];\n        if (prop = tagCtx.props[\"_\" + optionKey]) {\n          presets[optionKey] = prop;\n        }\n      }\n    }\n    if (widgetFullName === widgetName) {\n      widgetFullName = \"ui-\" + widgetName;\n    }\n\n    mainElem = tag.mainElem;\n    if (!mainElem || !mainElem[0]) {\n      // This may be due to using {{myWidget}} No element found here {{/myWidget}} \n      throw \"No element found for tag '\" + tag.tagName +\"'\";\n    }\n\n    if (tagCtx.props.id && !mainElem[0].id) {\n      mainElem[0].id = tagCtx.props.id;\n    }\n\n    // Instantiate widget\n    mainElem[widgetName](presets);\n\n    // Store widget instance\n    tag.widget = mainElem.data(widgetFullName) || mainElem.data(widgetName);\n\n    if (!tag.widget) {\n      // Widget failed to load, or is not a valid widget factory type\n      throw \"widget '\" + widgetName + \"' failed\";\n    }\n\n    if (options) {\n      if ($.isFunction(options)) {\n        options = tag.options();\n      }\n      mainElem[widgetName](\"option\", options); // initialize options\n    }\n  },\n  onAfterLink: function(tagCtx) {\n    var mainElem,\n      tag = this,\n      options = tag.options, // hash (or function returning hash) of option settings\n      props = tagCtx.props,\n      widgetName = tag.widgetName.split(\"-\").pop();\n    if ($.isFunction(options)) {\n      options = tag.options();\n    }\n    mainElem = tag.mainElem;\n    $.each(props, function(key, prop) {\n      var option;\n      if (key.charAt(0) === \"_\") {\n        key = key.slice(1);\n        option = options && options[key];\n        mainElem[widgetName](\"option\", key,\n          option && $.isFunction(option) && prop && $.isFunction(prop)\n            ? function() {\n              // If the same event function option is overridden on the tagDef options\n              // (or in a _create override) and the tagCtx.props, call first the one on\n              // the tagDef options, and then the one declared on the tag properties.\n              option.apply(mainElem[0], arguments);\n              return prop.apply(mainElem[0], arguments);\n            }\n            : prop\n          );\n      }\n    });\n  },\n  onUpdate: false, // Don't rerender whole tag on update\n  dataBoundOnly: true,\n  attr: \"none\"\n},\n// ============================= BUTTON =============================\nbutton: {\n  baseTag: \"widget\",\n  widgetName: \"button\",\n  elem: \"button\",\n  wrap: true,\n  setSize: true,\n  contentCtx: true,\n  onBind: function(tagCtx, linkCtx) {\n    var elem = this.mainElem[0];\n      elem.innerHTML = elem.innerHTML || \"&nbsp;\"; // Fixes jQuery UI button issue if no label text\n    this.baseApply(arguments);\n  },\n  onAfterLink: function(tagCtx, linkCtx, ctx, event) {\n    this.baseApply(arguments);\n    if (event) {\n      this.widget.refresh();\n    }\n  }\n},\n// ============================= AUTOCOMPLETE =============================\nautocomplete: {\n  baseTag: \"widget\",\n  widgetName: \"autocomplete\",\n  linkedElement: \"*\",\n  elem: \"input\",\n  setSize: true,\n  options: function() {\n    var tag = this;\n    return {\n      change: function(evt, ui) {\n        if (ui.item) {\n          tag.updateValue(ui.item.value);\n          // If there is a selected item, update bound value on keydown.\n          // (Alternatively can set trigger=false to update on change)\n        }\n      },\n      select: function(evt, ui) {\n        if (ui.item) {\n          tag.updateValue(ui.item.value);\n        }\n      },\n      focus: function(evt, ui) {\n        return false;\n      }\n    };\n  }\n},\n// ============================= CHECKBOX =============================\ncheckbox: {\n  baseTag: \"widget\",\n  widgetName: \"checkboxradio\",\n  template: \"<label><input type='checkbox'/></label>\",\n  mainElement: \"input\",\n  linkedElement: \"input\",\n  setSize: true,\n  onBeforeBind: checkboxRadioBeforeBind,\n  setValue: function(val) {\n    if (val !== undefined) {\n      var elem = this.mainElem[0];\n      elem.checked = val && val !== \"false\";\n    }\n  }\n},\n// ============================= RADIO =============================\nradio: {\n  baseTag: \"widget\",\n  widgetName: \"checkboxradio\",\n  template: \"<label><input type='radio'/></label>\",\n  mainElement: \"input\",\n  linkedElement: \"input\",\n  setSize: true,\n  onBeforeBind: checkboxRadioBeforeBind,\n  onBind: function() {\n    var tag = this,\n      radiogroup = tag.parents.radiogroup;\n    tag.baseApply(arguments);\n    if (radiogroup && !radiogroup.onAfterLink) {\n      // If {{radio}} is child of {{radiogroup}}, make radiogroup\n      // notify radio buttons of selection changes\n      radiogroup.onAfterLink = function(tagCtx) {\n        var val = this.bndArgs()[0],\n          radios = this.childTags(\"radio\"),\n          l = radios.length;\n        while (l--) {\n          radios[l].setValue(val);\n        }\n      }\n    }\n  },\n  setValue: function(val) {\n    if (val !== undefined) {\n      var elem = this.mainElem[0];\n      elem.checked = val === elem.value;\n    }\n    this.widget.refresh();\n  }\n},\n// ============================= CONTROLGROUP =============================\ncontrolgroup: {\n  baseTag: \"widget\",\n  widgetName: \"controlgroup\",\n  elem: \"span\",\n  wrap: true,\n  contentCtx: true,\n  onBind: function() {\n    var tag = this;\n    tag.baseApply(arguments);\n    tag.mainElem.on(\"jsv-domchange\", function() {\n      tag.widget.refresh();\n    });\n  }\n},\n// ============================= DATEPICKER =============================\ndatepicker: {\n  baseTag: \"widget\",\n  widgetName: \"datepicker\",\n  linkedElement: \"*\",\n  elem: \"input\",\n  setSize: true,\n  dataFormat: true,\n  dataFormatter: {\n    // Default data formatter uses built-in datepicker formatter as used in display.\n    // Override as tag.dataFormat in tagDef or as tagCtxprops.dataFormat\n    parse: function(value, props) {\n      return $.datepicker.parseDate(this.dataFormat, value);\n    },\n    format: function(value, props) {\n      return $.datepicker.formatDate(this.dataFormat, value);\n    }\n  },\n  init: function(tagCtx) {\n    var tag = this,\n      dateFormat = tag.dateFormat = tagCtx.props.dateFormat\n        || tagCtx.props._dateFormat // Can set as _dateFormat=... or as dateFormat=...\n        || tag.dateFormat // or set as property in tagDef\n        || $.datepicker._defaults.dateFormat, // or use internal date-picker default\n      cvt = getConverter(tag, tag.convert),\n      cvtBk = getConverter(tag, tag.convertBack),\n      dataFormat = initFormatter(tag, tagCtx);\n      tag.dataFormat = dataFormat === true ? tag.dateFormat : dataFormat;\n\n    tag.convert = function(val) {\n      // Wrapped converter calls converter then does widget format\n      val = cvt ? cvt.call(tag, val) : val;\n      if (tag.dataFormat && (\"\" + val === val)) {\n        val = tag.parseData(val);\n      }\n      return $.datepicker.formatDate(dateFormat, dataFormat === 0 ? new Date(val) : val);\n    };\n    tag.convertBack = function(val) {\n      // Wrapped converter, does widget parse then calls converter\n      val = $.datepicker.parseDate(dateFormat, val);\n      val = dataFormat ? tag.formatData(val) : dataFormat === 0 ? +val : val;\n      return cvtBk ? cvtBk.call(tag, val) : val;\n    };\n    // Prevent onAfterLink replacing wrapped converters with unwrapped ones\n    tag.convert.fix = tag.convertBack.fix = true;\n    tag.baseApply(arguments);\n  },\n  options: function() {\n    var tag = this;\n    return {\n      onSelect: function(dateText) {\n        tag.value = dateText;\n        tag.updateValue(dateText);\n      }\n    };\n  },\n  onBind: function(tagCtx) {\n    var tag = this;\n    tag.baseApply(arguments);\n    tag.mainElem.datepicker(\"option\", \"dateFormat\", tag.dateFormat);\n    if (tag.mainElem[0].tagName !== \"INPUT\") {\n      // This datepicker is not using an input (e.g. using a div) - so set to inline-\n      tag.mainElem.css(\"display\", \"inline-block\");\n    } else {\n      tag.tagCtx.props.trigger = false;\n    }\n  },\n  setValue: function(value) {\n    var tag = this;\n    if (value !== undefined && value !== tag.value) {\n      tag.value = value;\n      tag.mainElem.datepicker(\"setDate\", value);\n    }\n  },\n  getValue: function() {\n    return this.value;\n  }\n},\n//dialog: { // Currently not supported. (Support would require overriding _createWrapper code.)\n//  baseTag: \"widget\",\n//  widgetName: \"dialog\",\n//  wrap: true,\n//  elem: \"div\"\n//},\n// ============================= DROPPABLE =============================\ndroppable: {\n  baseTag: \"widget\",\n  widgetName: \"droppable\",\n  elem: \"div\",\n  wrap: true,\n  setSize: true,\n  contentCtx: true,\n  setValue: function(value) {\n    if ($.isFunction(value)) {\n      this.widget.option(\"drop\", value); // Set the handler function for the drop action\n    }\n  }\n},\n// ============================= MENU =============================\nmenu: {\n  baseTag: \"widget\",\n  widgetName: \"menu\",\n  elem: \"ul\",\n  wrap: true,\n  setSize: true,\n  contentCtx: true,\n  initOptions: [\"menus\", \"items\", \"role\"], // Options which need to be set on creation, not later\n  setValue: function(value) {\n    if ($.isFunction(value)) {\n      this.widget.option(\"select\", value); // Set the menu select handler\n    }\n  }\n},\n// ============================= PROGRESSBAR =============================\nprogressbar: {\n  baseTag: \"widget\",\n  widgetName: \"progressbar\",\n  boundProps: [\"busy\"],\n  bindTo: 0,\n  elem: \"div\",\n  wrap: true,\n  setSize: true,\n  contentCtx: true,\n  setValue: function(value) {\n    if (!this.tagCtx.props.busy) {\n      this.widget.value(parseFloat(value) || 0);\n    }\n  },\n  getValue: function() {\n    return this.widget.value();\n  },\n  onAfterLink: function(tagCtx) {\n    var tag = this;\n    tag.baseApply(arguments);\n    if (tagCtx.props.busy) {\n      tag.widget.value(false);\n    }\n  }\n},\n// ============================= RESIZABLE =============================\nresizable: {\n  baseTag: \"widget\",\n  widgetName: \"resizable\",\n  bindTo: [\"width\", \"height\"],\n  linkedCtxParam: [\"width\", \"height\"],\n  elem: \"div\",\n  wrap: true,\n  contentCtx: true,\n  options: function() {\n    var tag = this;\n    return {\n      resize: function(evt, ui) {\n        setTimeout(function() {\n          tag.updateValues(ui.size.width, ui.size.height);\n        },0);\n      }\n    };\n  },\n  setValue: function(value, index) {\n    var mainElem = this.mainElem;\n    mainElem[index ? \"height\" : \"width\"](value || 0);\n  },\n  getValue: function() {\n    var mainElem = this.mainElem;\n    return [mainElem.width(), mainElem.height()];\n  }\n},\n// ============================= SELECTMENU =============================\nselectmenu: {\n  baseTag: \"widget\",\n  widgetName: \"selectmenu\",\n  linkedElement: \"select\",\n  elem: \"select\",\n  wrap: true,\n  setSize: true,\n  contentCtx: true,\n  options: function() {\n    var tag = this;\n    return {\n      change: function(evt, ui) {\n        tag.updateValue(ui.item.value);\n      }\n    };\n  },\n  onBeforeBind: function() {\n    var tag = this;\n    tag.baseApply(arguments);\n    tag.displayElem = tag.widget.button;\n  },\n  onBind: function() {\n    var tag = this;\n    tag.baseApply(arguments);\n    tag.mainElem.on(\"jsv-domchange\", function() {\n      tag.widget.refresh();\n    });\n  },\n  setValue: function(value) {\n    this.mainElem[0].value = value;\n    this.widget.refresh();\n  },\n  getValue: function() { \n    return this.mainElem[0].value;\n  }\n},\n// ============================= SLIDER =============================\nslider: {\n  baseTag: \"widget\",\n  widgetName: \"slider\",\n  bindTo: [0, 1],\n  linkedElement: [\"*\", \"~foo\"],\n  elem: \"div\",\n  setSize: true,\n  options: function() {\n    var tag = this;\n    return {\n      slide: function(evt, ui) {\n        setTimeout(function() {\n          tag.updateValue(ui.value);\n        }, 0);\n      }\n    };\n  },\n  onAfterLink: function(tagCtx) {\n    var tag = this;\n    if (!tag.linkCtx.elem._jsvChg) {\n      // If change not triggered by a the slider itself changing value\n      tag.baseApply(arguments);\n    }\n  },\n  setValue: function(value) {\n    this.widget.value(value || 0);\n  },\n  getValue: function() {\n    return this.widget.value();\n  }\n},\n// ============================= SPINNER =============================\nspinner: {\n  baseTag: \"widget\",\n  widgetName: \"spinner\",\n  mainElement: \"input\",\n  linkedElement: \"input\",\n  elem: \"input\",\n  setSize: true,\n  // Default display formatter uses Globalize 0.1.1.\n  // Override as tag.displayFormat in tagDef or as tagCtx.props.displayFormat\n  displayFormat: {\n    parse: function(value, props) {\n      return window.Globalize\n        ? Globalize.parseFloat(value, 10, props._culture)\n        : value;\n    },\n    format: function(value, props) {\n      return window.Globalize\n        ? Globalize.format(value, this.widget.options.numberFormat, props._culture)\n        : value;\n    }\n  },\n  options: function() {\n    var tag = this;\n    return {\n      spin: function(evt, ui) {\n        tag.updateValue(tag.widget._format(ui.value));\n      }\n    };\n  },\n  init: function(tagCtx) {\n    var dataFormat,\n      tag = this,\n      displayFormat = tagCtx.props.displayFormat;\n    tag.parse = function(value) {\n      return displayFormat.parse.call(tag, value, tag.tagCtx.props);\n    };\n    tag.format = function(value, props) {\n      return displayFormat.format.call(tag, value, tag.tagCtx.props);\n    };\n    if (displayFormat === undefined) {\n      displayFormat = tag.displayFormat;\n    }\n    tag.dataFormat = dataFormat = initFormatter(tag, tagCtx);\n    tag.baseApply(arguments);\n  },\n  onBeforeBind: function(tagCtx) {\n    var tag = this;\n    if (!tag.linkCtx.elem._jsvChg) {\n      // If change not triggered by the spinner itself changing value\n      tag.baseApply(arguments);\n      tag.displayElem = tag.mainElem.parent(); // jQuery UI wraps the input in a span\n      if (tagCtx.props.width) {\n        // In addition to generic setting of width on the\n        // displayElem, need also to set width on the input.\n        tag.mainElem.width(tagCtx.props.width - tag.displayElem.find(\".ui-spinner-up\").width()-9);\n      }\n    }\n  },\n  onBind: function(tagCtx) {\n    var tag = this,\n      cvt = getConverter(tag, tag.convert),\n      cvtBk = getConverter(tag, tag.convertBack);\n\n    tag.baseApply(arguments);\n\n    tag.convert = function(val) {\n      // Wrapped converter calls converter then does widget format\n      val = cvt ? cvt.call(tag, val) : val\n      val = tag.dataFormat ? +tag.parseData(val) : val;\n      return tag.widget._format(val);\n    };\n    tag.convertBack = function(val) {\n      // Wrapped converter, does widget parse then calls converter\n      val = tag.widget._parse(val);\n      val = tag.dataFormat ? tag.formatData(val) : val;\n      return cvtBk ? cvtBk.call(tag, val) : val;\n    };\n    // Prevent onAfterLink replacing wrapped converters with unwrapped ones\n    tag.convert.fix = tag.convertBack.fix = true;\n\n    tag.widget._parse = function(value) {\n      return value + \"\" === value && value\n        ? +tag.parse(value, tagCtx.props)\n        : value;\n    };\n    tag.widget._format = function(value) {\n      return value !== \"\"\n        ? tag.format(value, tagCtx.props)\n        : value;\n    };\n  }\n},\n// ============================= TIMESPINNER =============================\ntimespinner: {\n  baseTag: \"spinner\",\n  dataFormat: {\n    parse: function(value, props) {\n      return +value;\n    },\n    format: function(value, props) {\n      return new Date(value);\n    }\n  },\n  displayFormat: {\n    parse: function(value, props) {\n      var date;\n      if (value) {\n        return window.Globalize\n          ? Globalize.parseDate(value, \"t\", props._culture)\n          : ((date = new Date()).setHours(value.slice(0, 2), value.slice(3)), date);\n      }\n    },\n    format: function(value, props) {\n      if (value.getDay) {\n        return window.Globalize\n          ? Globalize.format(value, \"t\", props._culture)\n          : (100 + value.getHours() + \"\").slice(1) + \":\" + (100 + value.getMinutes() + \"\").slice(1);\n      }\n    }\n  },\n  options: function() {\n    return $.extend(\n      this.baseApply(), // Get options object from base class and extend it\n      {step: 60000, page: 60}\n    );\n  },\n  init: function(tagCtx) {\n    this.baseApply(arguments);\n    this.tagCtx.props.width = this.tagCtx.props.width || 80;\n  },\n  onBind: function(tagCtx) {\n    var tag = this;\n    tag.baseApply(arguments);\n    tagCtx.props.trigger = false;\n\n    tag.widget._parse = function(value) {\n      if (\"\" + value === value && value) {\n        value = tag.parse(value, tagCtx.props);\n        if (value && !tag.keepDay) {\n          // Make return dateNumber (ticks) change the hours and minutes but keep current date (day/month)\n          var returnDate = new Date(tag.value);\n          returnDate.setHours(value.getHours());\n          returnDate.setMinutes(value.getMinutes());\n          value = returnDate;\n        }\n      }\n      return +value;\n    };\n    tag.widget._format = function(value) {\n      if (+value === value) {\n        tag.value = value;\n        return tag.format(new Date(value), tagCtx.props);\n      }\n    };\n  },\n  onAfterLink: function(tagCtx) {\n    var keepDay = tagCtx.props.keepDay;\n\n    if (keepDay !== undefined) {\n      this.keepDay = keepDay;\n    }\n    this.baseApply(arguments);\n  }\n},\n// ============================= TABS =============================\ntabs: {\n  baseTag: \"widget\",\n  widgetName: \"tabs\",\n  bindTo: 0,\n  elem: \"div\",\n  wrap: true,\n  setSize: true,\n  contentCtx: true,\n  options: tabsAccordionOptions,\n  onBind: tabsAccordionOnBind,\n  setValue: function(value) {\n    // Select the tab whose index is the currently selected one\n    this.widget.option(\"active\", parseInt(value));\n  },\n  onBeforeBind: function(value) {\n    var anchor,\n      base = window.location.href.replace(/#.*$/, '');\n    $('ul>li>a[href^=\"#\"]', this.mainElem).each(function () {\n      anchor = $(this);\n      anchor.attr('href', base + anchor.attr('href'));\n    });\n    this.baseApply(arguments);\n  },\n  getValue: function() { // Helper: get the index of the currently selected tab\n    return this.widget.option(\"active\");\n  }\n}\n\n};\n\n\n\n$.views.tags(tagDefs);\n\n// ============================= BUTTON AND BUTTONSET =============================\nif ($.ui.version.slice(0, 4) === \"1.11\") {\n  // Add backward compatibility for {{buttonset}} and {{button}}\n  tagDefs.button = {\n    baseTag: \"widget\",\n    widgetName: \"button\",\n    elem: \"button\",\n    setSize: true,\n    contentCtx: true,\n    init: function(tagCtx, linkCtx) {\n      var template,\n        tag = this,\n        content = tagCtx.tmpl,\n        props = tagCtx.props,\n        id = props.id,\n        parent = tag.parent;\n\n      if (tag._.radio = parent && parent.tagName === \"buttonset\") {\n        tagCtx = parent.tagCtx;\n      } else {\n        tag._.chkBx = (tag.inline ? props : linkCtx.elem).type === \"checkbox\";\n      }\n\n      var  params = tagCtx.params,\n        paramprops = params.props || {};\n\n      tag.baseApply(arguments);\n\n      if (tag.inline) {\n        content = content && content.markup || \"&nbsp;\";\n        // (&nbsp; fixes a jQueryUI button rendering issue)\n        if (tag._.radio || tag._.chkBx) {\n          id = id || \"jsv\" + Math.random();\n          template = '<input id=\"' + id + '\" data-link=\"' + params.args[0] \n            + (paramprops.convert ? \" convert=\" + paramprops.convert : \"\")\n            + (paramprops.convertBack ? \" convertBack=\" + paramprops.convertBack : \"\")\n            + (tag._.radio\n              ? '\" name=\"' + parent.id + '\" type=\"radio\" value=\"' + props.value + \n                '\"/><label for=\"' + id + '\">' + content + '</label>'\n              : '\" type=\"checkbox\"/><label for=\"' + id + '\">' + content + '</label>');\n        } else {\n          template = \"<button>\" + content + \"</button>\";\n        }\n        tag.template = template;\n      }\n    },\n    onAfterLink: function(tagCtx, linkCtx) {\n      var tag = this,\n        elem = linkCtx.elem,\n        val = tag.bndArgs()[0];\n\n      if (tag._.radio || tag._.chkBx) {\n        if (!tag.inline) {\n          if (tag._.unlinked && !elem.id) {\n            elem.id = \"jsv\" + Math.random();\n            $(elem).after('<label for=\"' + elem.id + '\">&nbsp;</label>');\n          }\n          elem.checked = tag._.radio\n            ? (elem.name = tag.parent.id, val === elem.value)\n            : val && val !== \"false\";\n        }\n\n        tag.baseApply(arguments);\n\n        elem = tag.mainElem[0];\n\n        if (tag._.radio) {\n          // Use {^{button value=\"xxx\"}}Label{{/button}}\n          if (elem.value === \"undefined\") {\n            // Default, for {^{button}}xxx{{/button}} or {^{button _label=\"xxx\"/}}\n            elem.value = tag.widget.option(\"label\"); \n          }\n          elem.checked = val === elem.value;\n        } else {\n          elem.checked = val && val !== \"false\";\n        }\n\n        if (tag._.chkBx) {\n          tag.widget.refresh();\n        }\n      } else {\n        if (!tag.inline) {\n          elem.innerHTML = elem.innerHTML || \"&nbsp;\"; // Fixes jQuery UI button issue if no label text\n        }\n        tag.baseApply(arguments);\n      }\n    }\n  };\n\n  tagDefs.buttonset = {\n    baseTag: \"widget\",\n    widgetName: \"buttonset\",\n    setSize: true,\n    contentCtx: true,\n    init: function(tagCtx) {\n      var id,\n        tag = this;\n\n      tag.baseApply(arguments);\n\n      if (tag.inline) {\n        tag.id = tagCtx.props.id || \"jsv\" + Math.random();\n        tag.template = '<span id=\"' + tag.id + '\">' + tagCtx.tmpl.markup + \"</span>\";\n      }\n    },\n    onAfterLink: function(tagCtx, linkCtx) {\n      var tag = this,\n        elem = linkCtx.elem,\n        val = tag.bndArgs()[0];\n      tag.baseApply(arguments);\n      tag.widget.buttons.each(function(i, elem) {\n        elem.checked = val === elem.value;\n        $(elem).button(\"refresh\");\n      });\n    }\n  };\n}\n\n// Compile tags\n$.views.tags(tagDefs);\n\nfunction unlinkedClone() {\n  // Ensure that cloned element (and its contents) created by jQuery UI to show dragging\n  // element does not have any data-jsv tokens (since deleting the element would then\n  // remove those views associated with the original element)\n  var clone = $(this).clone();\n  clone.find(\"*\").addBack().removeAttr( \"id data-link data-jsv data-jsv-df\" );\n  clone.find(\"script\").remove();\n  return clone;\n}\n\n// ============================= DRAGGABLE =============================\nif ($.ui.draggable) {\n  // Create derived draggable widget\n  $.widget(\"jsv.draggable\", $.ui.draggable, {\n    _createHelper: function() {\n      if (this.options.helper === \"clone\") {\n        this.options.helper = unlinkedClone;\n      }\n      return this._super();\n    }\n  });\n\n  $.views.tags(\"draggable\", {\n    baseTag: \"widget\",\n    widgetName: \"jsv-draggable\",\n    bindTo: [\"left\", \"top\"],\n    linkedCtxParam: [\"left\", \"top\"],\n    elem: \"div\",\n    wrap: true,\n    setSize: true,\n    contentCtx: true,\n    options: function() {\n      var tag = this;\n      return {\n        drag: function(evt, ui) {\n          setTimeout(function() {\n            tag.updateValues(ui.offset.left, ui.offset.top);\n          },0);\n        }\n      };\n    },\n    setValue: function(value, index) {\n      this.mainElem.offset(index ? {top: value} : {left: value});\n    },\n    getValue: function(left, top) {\n      var offset = this.mainElem.offset();\n      return [offset.left, offset.top];\n    }\n  });\n}\n\n// ============================= ACCORDION =============================\nif ($.ui.accordion) {\n  // Create derived accordion widget\n  $.widget(\"jsv.accordion\", $.ui.accordion, {\n    _create: function() {\n      var widget = this;\n      widget.options.header = widget.options.header.replace(\":not(li):even\", \":not(li,script):even\");\n      widget._super();\n    }\n  });\n\n  $.views.tags(\"accordion\", {\n    baseTag: \"widget\",\n    widgetName: \"jsv-accordion\",\n    bindTo: 0,\n    wrap: true,\n    setSize: true,\n    contentCtx: true,\n    options: tabsAccordionOptions,\n    initOptions: [\"header\"], // Options which need to be set on creation, not later\n    onBind: tabsAccordionOnBind,\n    setValue: function(value) {\n      // Select the panel whose index is the currently selected one\n      this.widget.option(\"active\", parseInt(value));\n    },\n    getValue: function() { // Helper: get the index of the currently selected panel\n      return this.widget.option(\"active\");\n    }\n  });\n}\n\n// ============================= SORTABLE =============================\nif ($.ui.sortable) {\n  $.widget(\"jsv.sortable\", $.ui.sortable, {\n    _create: function() {\n      var innerView, moveFrom,\n        widget = this,\n        startOption = widget.options.start,\n        stopOption = widget.options.stop;\n\n      widget.option({\n        start: function(event, ui) {\n          startOption && startOption.apply(this, arguments);\n\n          if (widget.option(\"bindArray\") !== false) {\n            innerView = ui.item.view(); // The view of the item that is being dragged\n            if (innerView.type === \"item\") {\n              // The sortable items are within a {{for}} loop, so this is a data-linked sortable list\n              moveFrom = innerView.index + 1; // 1-based starting index of dragged item\n            }\n          }\n        },\n        stop: function(event, ui) {\n          var moveTo;\n\n          if (moveFrom) {\n            // This is a data-linked sortable list\n            moveTo = ui.item.prevAll(ui.item[0].tagName).length; // The new index after\n            // being dragged (count of previous siblings of same tagName)\n            widget.cancel(); // Now cancel the DOM changes, since we are data-driven,\n            // and should use JsViews data-linking to move the sorted items\n            $.observable(innerView.parent.data).move(moveFrom-1, moveTo); // Make the equivalent\n            // observable change to the underlying data\n            moveFrom = undefined;\n            // Remove the starting index, ready for new sorting actions on this sortable list\n          }\n          stopOption && stopOption.apply(this, arguments);\n        }\n      });\n      widget._super();\n    }\n  });\n\n  $.views.tags(\"sortable\", {\n    baseTag: \"widget\",\n    widgetName: \"jsv-sortable\",\n    wrap: true,\n    contentCtx: true,\n  });\n}\n\n// ============================= SELECTABLE =============================\nif ($.ui.selectable) {\n  $.widget(\"jsv.selectable\", $.ui.selectable, {\n    _create: function() {\n      var widget = this;\n\n      widget.options.filter += \":not(script)\";\n      widget._super();\n    }\n  });\n\n  $.views.tags(\"selectable\", {\n    baseTag: \"widget\",\n    widgetName: \"jsv-selectable\",\n    bindTo: 0,\n    wrap: true,\n    setSize: true,\n    contentCtx: true,\n    options: function() {\n      var tag = this;\n      return {\n        stop: function(evt, ui) {\n          tag.setSelectedItems();\n        }\n      };\n    },\n    initOptions: [\"filter\"], // Options which need to be set on creation, not later\n    onBind: function() {\n      var tag = this;\n      tag.selected = []; // Value of first arg (after applying converter, if there is one)\n\n      function selObs(ev, eventArgs) {\n        if (!eventArgs.refresh) {\n          tag.setSelection();\n        }\n      }\n\n      tag.selObs = selObs; // Store function instance, for disposing of just this binding, in onDispose\n      tag.baseApply(arguments);\n      tag.mainElem.on(\"jsv-domchange.sel\", function() {\n        tag.widget.refresh();\n        tag.selected._domChg = 2;\n        tag.setSelectedItems();\n        tag.selected._domChg = undefined;\n      });\n    },\n    onDispose: function() {\n      $.unobserve(this.selected, this.selObs);  // Remove just this binding to selected array\n    },\n    setValue: function(selected) { // Set the new observed array of selected indices\n      var tag = this;\n      if ($.isArray(selected) && tag.selected !== selected) {\n        $.unobserve(tag.selected, tag.selObs);\n        tag.selected = selected;\n        if (selected !== tag.bndArgs[0]) {\n          tag.updateValue(selected);\n        }\n        $.observe(selected, tag.selObs);\n        tag.setSelection();\n      }\n    },\n    getValue: function() {\n      return this.selected;\n    },\n    setSelection: function() {\n      // Set the class on the new selected elements (based on tag.selected array of indices)\n      var tag = this,\n        l = tag.selected.length;\n      if (!tag.selected._domChg) {\n        // No need to update if during a domchange event - only if a selectable change event\n        // Remove selected class from all selectable elements\n        tag.widget.selectees.removeClass(\"ui-selected\");\n        while (l--) {\n          // Set selected class on elements at indices in tag.selected array\n          tag.widget.selectees.eq(tag.selected[l]).addClass(\"ui-selected\");\n        }\n      }\n    },\n    setSelectedItems: function() {\n      // Set observable selectedItems array based on selected elements managed by widget\n      var tag = this,\n        selected = [];\n      if (tag.selected && tag.selected._domChg !== 1) {\n        if (tag.selected._domChg) {\n          // Avoid race conditions when multiple selectables bind to same selected array\n          tag.selected._domChg--;\n        }\n        tag.widget.selectees.each(function(index, elem) {\n          if ((' ' + elem.className + ' ').indexOf(' ui-selected ') > -1) {\n            selected.push(index); // This is the index of a selected element\n          }\n        });\n        tag.setValue(tag.selected); // Update the tag to bind to the new selected array\n        $.observable(tag.selected).refresh(selected); // Refresh to the new selected indices\n      }\n    }\n  });\n}\n})(this, this.jQuery);\n"]}