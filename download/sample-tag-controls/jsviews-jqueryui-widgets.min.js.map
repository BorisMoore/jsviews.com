{"version":3,"sources":["jsviews-jqueryui-widgets.js"],"names":["global","$","undefined","getConverter","tag","cvt","tagCtx","view","getRsc","checkboxRadioOnBind","this","props","elem","mainElem","baseApply","arguments","name","value","displayElem","widget","label","checkboxRadioOnAfterLink","linkCtx","options","option","tabsAccordionOnBind","on","ev","eventArgs","newSelected","selected","active","refresh","updateValue","tabsAccordionOptions","activate","evt","ui","initDataFormatter","dataFormatter","dataFormat","parse","parseData","data","call","formatData","date","format","unlinkedClone","clone","find","addBack","removeAttr","remove","fn","views","tagDefs","argDefault","mainElement","init","content","elemType","inline","tmpl","markup","template","wrap","trim","attr","onBind","prop","i","optionKey","presets","initOptions","widgetName","widgetFullName","split","pop","length","tagName","id","isFunction","onAfterLink","each","key","charAt","slice","apply","onUpdate","dataBoundOnly","button","baseTag","setSize","contentCtx","innerHTML","ctx","event","autocomplete","linkedElement","change","item","select","focus","checkbox","setValue","val","checked","radio","radiogroup","parents","_d","sub","_gm","bndArgs","disabled","radios","childTags","l","controlgroup","datepicker","parseDate","formatDate","dateFormat","_dateFormat","_defaults","convert","cvtBk","convertBack","Date","fix","onSelect","dateText","css","trigger","getValue","droppable","menu","progressbar","boundProps","busy","parseFloat","resizable","bindTo","linkedCtxParam","resize","setTimeout","updateValues","size","width","height","setValues","index","selectmenu","slider","slide","_jsvChg","spinner","displayFormat","numberString","window","Globalize","_culture","numberFormat","spin","_format","dataCvt","dataCvtBk","parent","_parse","timespinner","ticks","timeString","setHours","getDay","getHours","getMinutes","extend","step","page","returnDate","keepDay","args","setMinutes","tabs","parseInt","anchor","base","location","href","replace","tags","version","_","chkBx","type","params","paramprops","Math","random","unlinked","after","buttonset","buttons","draggable","_createHelper","helper","_super","drag","offset","left","top","ctxPrm","topLeft","position","accordion","_create","header","sortable","innerView","moveFrom","startOption","start","stopOption","stop","bindArray","moveTo","prevAll","cancel","observable","move","selectable","filter","setSelectedItems","selObs","setSelection","_domChg","onDispose","unobserve","isArray","observe","selectees","removeClass","eq","addClass","className","indexOf","push","jQuery"],"mappings":"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","file":"jsviews-jqueryui-widgets.min.js","sourcesContent":["/*! JsViews jQueryUI widget integration v1.0.0\nsee: http://www.jsviews.com/#download/jqueryui-tagcontrols */\n/*\n * https://www.jsviews.com/download/sample-tag-controls/jsviews-jqueryui-widgets.js\n * Copyright 2018, Boris Moore\n * Released under the MIT License.\n */\n\n/* Wrap behavior (wrapping HTML content) and default element, for each widget: */\n\n/*       autocomplete button   buttonset droppable   menu        progressbar  resizable\n * wrap: -            wrap     -         wrap        wrap        wrap         wrap     \n * elem: input        button   -         -           ul          div          div      \n */\n\n/*       selectable   slider   spinner   timespinner  tabs       sortable     draggable\n * wrap: wrap         -        -         -            wrap       wrap         wrap     \n * elem: -            div      input     input        -          -            -      \n */\n\n/*       accordion    checkbox radio     controlgroup selectmenu datepicker\n * wrap: wrap         -        -         wrap         wrap       wrap\n * elem: -            div      input     span         selectv    input\n */\n\n(function(global, $, undefined) {\n\"use strict\";\n\nif (!$ || !$.fn || !$.ui || !$.views) {\n  // jQuery is not loaded.\n  throw \"jsviews-jqueryui-widgets.js requires jQuery, jQuery UI and JsViews\";\n}\n\nfunction getConverter(tag, cvt) {\n  return cvt + \"\" === cvt ? tag.tagCtx.view.getRsc(\"converters\", cvt) : cvt;\n}\n\nfunction checkboxRadioOnBind() {\n  var tag = this,\n    props = tag.tagCtx.props,\n    elem = tag.mainElem[0];\n    tag.baseApply(arguments);\n\n  if (props.name) {\n    elem.name = props.name;\n  }\n  if (props.value) {\n    elem.value = props.value;\n  }\n\n  tag.displayElem = tag.widget.label;\n}\n\nfunction checkboxRadioOnAfterLink(tagCtx, linkCtx) {\n  var tag = this,\n    props = tagCtx.props;\n\n  tag.baseApply(arguments);\n\n  if (props.label && props.label !== tag.widget.options.label) {\n    tag.widget.option(\"label\", props.label);\n  }\n}\n\nfunction tabsAccordionOnBind() {\n  var tag = this;\n  tag.mainElem.on(\"jsv-domchange\", function(ev, tagCtx, linkCtx, eventArgs) {\n    var newSelected,\n      selected = tag.widget.options.active;\n\n    tag.widget.refresh();\n    newSelected = tag.widget.options.active;\n\n    if (selected !== newSelected) {\n      tag.updateValue(newSelected);\n    }\n  });\n}\n\nfunction tabsAccordionOptions() {\n  var tag = this;\n  return {\n    activate: function(evt, ui) {\n      // Raise elemChangeHandler event when selected tab changes - for two-way binding to arg(0)\n      tag.updateValue(tag.widget.options.active);\n    }\n  };\n}\n\nfunction initDataFormatter(tag, tagCtx) { // Used by datepicker and spinner\n  // Initialize the data formatter\n  var dataFormatter,\n    dataFormat = tagCtx.props.dataFormat;\n  if (dataFormat === undefined) {\n    dataFormat = tag.dataFormat;\n  }\n  dataFormatter = dataFormat && dataFormat.parse\n    ? dataFormat\n    : tag.dataFormatter;\n\n  // Formatter can be provided as tag.dataFormat or tagCtx.props.dataFormat\n  tag.parseData = function(data) {\n    return dataFormatter.parse.call(tag, data, tag.tagCtx.props);\n  };\n  tag.formatData = function(date) {\n    return dataFormatter.format.call(tag, date, tag.tagCtx.props);\n  };\n  return dataFormat;\n}\n\nvar tagDefs = {\n// ============================= WIDGET =============================\nwidget: {\n  argDefault: false, // Do not default missing arg to #data\n  mainElement: \"*\",\n  init: function(tagCtx) {\n    var content, elemType,\n      tag = this;\n\n    if (tag.inline) {\n      content = tagCtx.tmpl.markup;\n      if (!tag.template && (elemType = tagCtx.props.elem || tag.elem)) {\n        if (content) {\n          if (tag.wrap) {\n            tag.template = \"<\"+elemType+\">\" + $.trim(content) + \"</\"+elemType+\">\";\n          }\n        } else {\n          tag.template = (elemType === \"input\") ? \"<input/>\" : \"<\"+elemType+\"></\"+elemType+\">\";\n        }\n      }\n      tag.attr = \"html\";\n    }\n  },\n  onBind: function(tagCtx) {\n    var mainElem, prop, i, optionKey,\n      tag = this,\n      presets = tag.initOptions, // initOptions: array of option names that when set declaratively\n                                 // as tag options will be set on creation, not on afterLink\n      widgetName = tag.widgetName,\n      options = tag.options,     // hash (or function returning hash) of option settings\n      widgetFullName = widgetName;\n\n    widgetName = widgetName.split(\"-\").pop();\n\n    if (i = presets && presets.length) {\n      presets = {};\n      while (i--) {\n        optionKey = tag.initOptions[i];\n        if (prop = tagCtx.props[\"_\" + optionKey]) {\n          presets[optionKey] = prop;\n        }\n      }\n    }\n    if (widgetFullName === widgetName) {\n      widgetFullName = \"ui-\" + widgetName;\n    }\n\n    mainElem = tag.mainElem;\n    if (!mainElem || !mainElem[0]) {\n      // This may be due to using {{myWidget}} No element found here {{/myWidget}} \n      throw \"No element found for tag '\" + tag.tagName +\"'\";\n    }\n\n    if (tagCtx.props.id && !mainElem[0].id) {\n      mainElem[0].id = tagCtx.props.id;\n    }\n\n    // Instantiate widget\n    mainElem[widgetName](presets);\n\n    // Store widget instance\n    tag.widget = mainElem.data(widgetFullName) || mainElem.data(widgetName);\n\n    if (!tag.widget) {\n      // Widget failed to load, or is not a valid widget factory type\n      throw \"widget '\" + widgetName + \"' failed\";\n    }\n\n    if (options) {\n      if ($.isFunction(options)) {\n        options = tag.options();\n      }\n      mainElem[widgetName](\"option\", options); // initialize options\n    }\n  },\n  onAfterLink: function(tagCtx) {\n    var mainElem,\n      tag = this,\n      options = tag.options, // hash (or function returning hash) of option settings\n      props = tagCtx.props,\n      widgetName = tag.widgetName.split(\"-\").pop();\n    if ($.isFunction(options)) {\n      options = tag.options();\n    }\n    mainElem = tag.mainElem;\n    $.each(props, function(key, prop) {\n      var option;\n      if (key.charAt(0) === \"_\") {\n        key = key.slice(1);\n        option = options && options[key];\n        if (mainElem[widgetName](\"option\", key) != prop) { // != so undefined and null are considered equivalent\n          mainElem[widgetName](\"option\", key,\n            option && $.isFunction(option) && prop && $.isFunction(prop)\n              ? function() {\n                // If the same event function option is overridden on the tagDef options\n                // (or in a _create override) and the tagCtx.props, call first the one on\n                // the tagDef options, and then the one declared on the tag properties.\n                option.apply(mainElem[0], arguments);\n                return prop.apply(mainElem[0], arguments);\n              }\n              : prop\n            );\n        }\n      }\n    });\n  },\n  onUpdate: false, // Don't rerender whole tag on update\n  dataBoundOnly: true,\n  attr: \"none\"\n},\n// ============================= BUTTON =============================\nbutton: {\n  baseTag: \"widget\",\n  widgetName: \"button\",\n  elem: \"button\",\n  wrap: true,\n  setSize: true,\n  contentCtx: true,\n  onBind: function(tagCtx, linkCtx) {\n    var elem = this.mainElem[0];\n      elem.innerHTML = elem.innerHTML || \"&nbsp;\"; // Fixes jQuery UI button issue if no label text\n    this.baseApply(arguments);\n  },\n  onAfterLink: function(tagCtx, linkCtx, ctx, event) {\n    this.baseApply(arguments);\n    if (event) {\n      this.widget.refresh();\n    }\n  }\n},\n// ============================= AUTOCOMPLETE =============================\nautocomplete: {\n  baseTag: \"widget\",\n  widgetName: \"autocomplete\",\n  linkedElement: \"*\",\n  elem: \"input\",\n  setSize: true,\n  options: function() {\n    var tag = this;\n    return {\n      change: function(evt, ui) {\n        if (ui.item) {\n          tag.updateValue(ui.item.value);\n          // If there is a selected item, update bound value on keydown.\n          // (Alternatively can set trigger=false to update on change)\n        }\n      },\n      select: function(evt, ui) {\n        if (ui.item) {\n          tag.updateValue(ui.item.value);\n        }\n      },\n      focus: function(evt, ui) {\n        return false;\n      }\n    };\n  }\n},\n// ============================= CHECKBOX =============================\ncheckbox: {\n  baseTag: \"widget\",\n  widgetName: \"checkboxradio\",\n  template: \"<label><input type='checkbox'/></label>\",\n  mainElement: \"input\",\n  setSize: true,\n  onBind: checkboxRadioOnBind,\n  onAfterLink: checkboxRadioOnAfterLink,\n  setValue: function(val) {\n    var tag = this,\n      elem = this.mainElem[0],\n      checked = val && val !== \"false\";\n    if (elem.checked !== checked) {\n      elem.checked = checked;\n      tag.widget.refresh();\n    }\n  }\n},\n// ============================= RADIO =============================\nradio: {\n  baseTag: \"widget\",\n  widgetName: \"checkboxradio\",\n  template: \"<label><input type='radio'/></label>\",\n  mainElement: \"input\",\n  setSize: true,\n  onBind: function() {\n    var radiogroup = this.parents.radiogroup;\n    checkboxRadioOnBind.apply(this, arguments);\n    if (radiogroup && !radiogroup._d) {\n      radiogroup.onAfterLink = $.views.sub._gm(radiogroup.onAfterLink, function() { // Get derived method\n        var widget,\n          val = radiogroup.bndArgs()[0],\n          disabled = !!radiogroup.tagCtx.props.disabled,\n          radios = radiogroup.childTags(\"radio\"),\n          l = radios.length;\n        while (l--) {\n          radios[l].setValue(val);\n          widget = radios[l].widget;\n          if (disabled !== widget.options.disabled) {\n            widget.option(\"disabled\", disabled);\n          }\n        }\n        this.baseApply(arguments); // Call base onAfterLink()\n      });\n      radiogroup._d = true;\n    }\n  },\n  onAfterLink: checkboxRadioOnAfterLink,\n\n  setValue: function(val) {\n    var elem = this.mainElem[0],\n    checked = val === elem.value;\n    if (elem.checked !== checked) {\n      elem.checked = checked;\n    }\n    this.widget.refresh();\n  }\n},\n// ============================= CONTROLGROUP =============================\ncontrolgroup: {\n  baseTag: \"widget\",\n  widgetName: \"controlgroup\",\n  elem: \"span\",\n  wrap: true,\n  contentCtx: true,\n  onBind: function() {\n    var tag = this;\n    tag.baseApply(arguments);\n    tag.mainElem.on(\"jsv-domchange\", function() {\n      tag.widget.refresh();\n    });\n  }\n},\n// ============================= DATEPICKER =============================\ndatepicker: {\n  baseTag: \"widget\",\n  widgetName: \"datepicker\",\n  linkedElement: \"*\",\n  elem: \"input\",\n  setSize: true,\n  dataFormat: true,\n  dataFormatter: { // Data formatter from data to Date\n    // Default data formatter uses built-in datepicker formatter.\n    // Override as tag.dataFormat in tagDef or as tagCtxprops.dataFormat\n    parse: function(data, props) {\n      return $.datepicker.parseDate(this.dataFormat, data);\n    },\n    format: function(date, props) {\n      return $.datepicker.formatDate(this.dataFormat, date);\n    }\n  },\n  init: function(tagCtx) {\n    var tag = this,\n      dateFormat = tag.dateFormat = tagCtx.props.dateFormat\n        || tagCtx.props._dateFormat // Can set as _dateFormat=... or as dateFormat=...\n        || tag.dateFormat // or set as property in tagDef\n        || $.datepicker._defaults.dateFormat, // or use internal date-picker default\n      cvt = getConverter(tag, tag.convert),\n      cvtBk = getConverter(tag, tag.convertBack),\n      dataFormat = initDataFormatter(tag, tagCtx);\n      tag.dataFormat = dataFormat === true ? tag.dateFormat : dataFormat;\n\n    tag.convert = function(val) {\n      // Wrapped converter calls converter then does widget format\n      val = cvt ? cvt.call(tag, val) : val;\n      if (tag.dataFormat && (\"\" + val === val)) {\n        val = tag.parseData(val);\n      }\n      return $.datepicker.formatDate(dateFormat, dataFormat === 0 ? new Date(val) : val);\n    };\n    tag.convertBack = function(val) {\n      // Wrapped converter, does widget parse then calls converter\n      val = $.datepicker.parseDate(dateFormat, val);\n      val = dataFormat ? tag.formatData(val) : dataFormat === 0 ? +val : val;\n      return cvtBk ? cvtBk.call(tag, val) : val;\n    };\n    // Prevent onAfterLink replacing wrapped converters with unwrapped ones\n    tag.convert.fix = tag.convertBack.fix = true;\n    tag.baseApply(arguments);\n  },\n  options: function() {\n    var tag = this;\n    return {\n      onSelect: function(dateText) {\n        tag.value = dateText;\n        tag.updateValue(dateText);\n      }\n    };\n  },\n  onBind: function(tagCtx) {\n    var tag = this;\n    tag.baseApply(arguments);\n    tag.mainElem.datepicker(\"option\", \"dateFormat\", tag.dateFormat);\n    if (tag.mainElem[0].tagName !== \"INPUT\") {\n      // This datepicker is not using an input (e.g. using a div) - so set to inline-\n      tag.mainElem.css(\"display\", \"inline-block\");\n    } else {\n      tag.tagCtx.props.trigger = false;\n    }\n  },\n  setValue: function(value) {\n    var tag = this;\n    if (value !== undefined && value !== tag.value) {\n      tag.value = value;\n      tag.mainElem.datepicker(\"setDate\", value);\n    }\n  },\n  getValue: function() {\n    return this.value;\n  }\n},\n//dialog: { // Currently not supported. (Support would require overriding _createWrapper code.)\n//  baseTag: \"widget\",\n//  widgetName: \"dialog\",\n//  wrap: true,\n//  elem: \"div\"\n//},\n// ============================= DROPPABLE =============================\ndroppable: {\n  baseTag: \"widget\",\n  widgetName: \"droppable\",\n  elem: \"div\",\n  wrap: true,\n  setSize: true,\n  contentCtx: true,\n  setValue: function(value) {\n    if ($.isFunction(value)) {\n      this.widget.option(\"drop\", value); // Set the handler function for the drop action\n    }\n  }\n},\n// ============================= MENU =============================\nmenu: {\n  baseTag: \"widget\",\n  widgetName: \"menu\",\n  elem: \"ul\",\n  wrap: true,\n  setSize: true,\n  contentCtx: true,\n  initOptions: [\"menus\", \"items\", \"role\"], // Options which need to be set on creation, not later\n  setValue: function(value) {\n    if ($.isFunction(value)) {\n      this.widget.option(\"select\", value); // Set the menu select handler\n    }\n  }\n},\n// ============================= PROGRESSBAR =============================\nprogressbar: {\n  baseTag: \"widget\",\n  widgetName: \"progressbar\",\n  boundProps: [\"busy\"],\n  elem: \"div\",\n  wrap: true,\n  setSize: true,\n  contentCtx: true,\n  setValue: function(value) {\n    if (!this.tagCtx.props.busy) {\n      this.widget.value(parseFloat(value) || 0);\n    }\n  },\n  getValue: function() {\n    return this.widget.value();\n  },\n  onAfterLink: function(tagCtx) {\n    var tag = this;\n    tag.baseApply(arguments);\n    if (tagCtx.props.busy) {\n      tag.widget.value(false);\n    }\n  }\n},\n// ============================= RESIZABLE =============================\nresizable: {\n  baseTag: \"widget\",\n  widgetName: \"resizable\",\n  bindTo: [\"width\", \"height\"],\n  linkedCtxParam: [\"width\", \"height\"],\n  elem: \"div\",\n  wrap: true,\n  contentCtx: true,\n  options: function() {\n    var tag = this;\n    return {\n      resize: function(evt, ui) {\n        setTimeout(function() {\n          tag.updateValues(ui.size.width, ui.size.height);\n          tag.setValues(ui.size.width, ui.size.height);\n        },0);\n      }\n    };\n  },\n  setValue: function(value, index) {\n    if (value !== undefined) {\n      this.mainElem[index ? \"height\" : \"width\"](value || 0);\n    }\n  },\n  getValue: function() {\n    return [this.mainElem.width(), this.mainElem.height()];\n  }\n},\n// ============================= SELECTMENU =============================\nselectmenu: {\n  baseTag: \"widget\",\n  widgetName: \"selectmenu\",\n  elem: \"select\",\n  wrap: true,\n  setSize: true,\n  contentCtx: true,\n  options: function() {\n    var tag = this;\n    return {\n      change: function(evt, ui) {\n        tag.updateValue(ui.item.value);\n      }\n    };\n  },\n  onBind: function() {\n    var tag = this;\n    tag.baseApply(arguments);\n    tag.displayElem = tag.widget.button;\n    tag.mainElem.on(\"jsv-domchange\", function() {\n      tag.widget.refresh();\n    });\n  },\n  setValue: function(value) {\n    if (value !== undefined) {\n      this.mainElem[0].value = value;\n      this.widget.refresh();\n    }\n  },\n  getValue: function() { \n    return this.mainElem[0].value;\n  }\n},\n// ============================= SLIDER =============================\nslider: {\n  baseTag: \"widget\",\n  widgetName: \"slider\",\n  elem: \"div\",\n  setSize: true,\n  options: function() {\n    var tag = this;\n    return {\n      slide: function(evt, ui) {\n        setTimeout(function() {\n          tag.updateValue(ui.value);\n        }, 0);\n      }\n    };\n  },\n  onAfterLink: function(tagCtx) {\n    var tag = this;\n    if (!tag.linkCtx.elem._jsvChg) {\n      // If change not triggered by a the slider itself changing value\n      tag.baseApply(arguments);\n    }\n  },\n  setValue: function(value) {\n    if (value !== undefined) {\n      this.widget.value(value || 0);\n    }\n  },\n  getValue: function() {\n    return this.widget.value();\n  }\n},\n// ============================= SPINNER =============================\nspinner: {\n  baseTag: \"widget\",\n  widgetName: \"spinner\",\n  mainElement: \"input\",\n  linkedElement: \"input\",\n  elem: \"input\",\n  setSize: true,\n  // Default display formatter uses Globalize 0.1.1.\n  // Override as tag.displayFormat in tagDef or as tagCtx.props.displayFormat\n  displayFormat: { // Default display format: numberString, to number\n    parse: function(numberString, props) {\n      return window.Globalize\n        ? Globalize.parseFloat(numberString, 10, props._culture)\n        : numberString;\n    },\n    format: function(data, props) {\n      return window.Globalize\n        ? Globalize.format(data, this.widget.options.numberFormat, props._culture)\n        : data;\n    }\n  },\n  options: function() {\n    var tag = this;\n    return {\n      spin: function(evt, ui) {\n        tag.updateValue(tag.widget._format(ui.value));\n      }\n    };\n  },\n  init: function(tagCtx) {\n    var dataFormat,\n      tag = this,\n      displayFormat = tagCtx.props.displayFormat;\n    tag.parse = function(numberString) {\n      return displayFormat.parse.call(tag, numberString, tag.tagCtx.props);\n    };\n    tag.format = function(data, props) {\n      return displayFormat.format.call(tag, data, tag.tagCtx.props);\n    };\n    if (displayFormat === undefined) {\n      displayFormat = tag.displayFormat;\n    }\n    tag.dataFormat = dataFormat = initDataFormatter(tag, tagCtx);\n    tag.baseApply(arguments);\n  },\n  onBind: function(tagCtx) {\n    var tag = this,\n      cvt = getConverter(tag, tag.convert),\n      cvtBk = getConverter(tag, tag.convertBack);\n    tag.dataCvt = cvt;\n    tag.dataCvtBk = cvtBk;\n    tag.baseApply(arguments);\n\n    if (!tag.linkCtx.elem._jsvChg) {\n      // If change not triggered by the spinner itself changing value\n      tag.displayElem = tag.mainElem.parent(); // jQuery UI wraps the input in a span\n      if (tagCtx.props.width) {\n        // In addition to generic setting of width on the\n        // displayElem, need also to set width on the input.\n        tag.mainElem.width(tagCtx.props.width - tag.displayElem.find(\".ui-spinner-up\").width()-9);\n      }\n    }\n\n    tag.convert = function(val) {\n      // Wrapped converter calls converter then does widget format\n      val = cvt ? cvt.call(tag, val) : val\n      val = tag.dataFormat ? +tag.parseData(val) : val;\n      return tag.widget._format(val);\n    };\n    tag.convertBack = function(val) {\n      // Wrapped converter, does widget parse then calls converter\n      val = tag.widget._parse(val);\n      val = tag.dataFormat ? tag.formatData(val) : val;\n      return cvtBk ? cvtBk.call(tag, val) : val;\n    };\n    // Prevent onAfterLink replacing wrapped converters with unwrapped ones\n    tag.convert.fix = tag.convertBack.fix = true;\n\n    tag.widget._parse = function(value) {\n      return value + \"\" === value && value\n        ? +tag.parse(value, tagCtx.props)\n        : value;\n    };\n    tag.widget._format = function(data) {\n      return data !== \"\"\n        ? tag.format(data, tagCtx.props)\n        : data;\n    };\n  }\n},\n// ============================= TIMESPINNER =============================\ntimespinner: {\n  baseTag: \"spinner\",\n  dataFormat: { // Default data format: ticks/timestamp, to Date\n    parse: function(date, props) {\n      return +date;\n    },\n    format: function(ticks, props) {\n      return new Date(ticks);\n    }\n  },\n  displayFormat: { // Default timestring display, to Date\n    parse: function(timeString, props) {\n      var date;\n      if (timeString) {\n        return window.Globalize\n          ? Globalize.parseDate(timeString, \"t\", props._culture)\n          : ((date = new Date()).setHours(timeString.slice(0, 2), timeString.slice(3)), date);\n      }\n    },\n    format: function(date, props) {\n      if (date.getDay) {\n        return window.Globalize\n          ? Globalize.format(date, \"t\", props._culture)\n          : (100 + date.getHours() + \"\").slice(1) + \":\" + (100 + date.getMinutes() + \"\").slice(1);\n      }\n    }\n  },\n  options: function() {\n    return $.extend(\n      this.baseApply(), // Get options object from base class and extend it\n      {step: 60000, page: 60}\n    );\n  },\n  init: function(tagCtx) {\n    this.baseApply(arguments);\n    this.tagCtx.props.width = this.tagCtx.props.width || 80;\n  },\n  onBind: function(tagCtx) {\n    var tag = this;\n    tag.baseApply(arguments);\n\n    tag.widget._parse = function(value) {\n      var returnDate;\n      if (\"\" + value === value && value && (value = tag.parse(value, tagCtx.props))) {\n        // Make return dateNumber (ticks) change the hours and minutes but keep current date (day/month)\n        if (tag.keepDay) {\n          returnDate = tag.tagCtx.args[0];\n          if (tag.dataCvt) {\n            returnDate = tag.dataCvt(returnDate);\n          }\n          if (tag.dataFormat) {\n            returnDate = tag.parseData(returnDate);\n          }\n        } else {\n          returnDate = tag.value;\n        }\n        returnDate = new Date(returnDate);\n        returnDate.setHours(value.getHours());\n        returnDate.setMinutes(value.getMinutes());\n        value = returnDate;\n      }\n      return +value;\n    };\n    tag.widget._format = function(value) {\n      if (+value === value) {\n        tag.value = value;\n        return tag.format(new Date(value), tagCtx.props);\n      }\n    };\n  },\n  onAfterLink: function(tagCtx) {\n    var keepDay = tagCtx.props.keepDay;\n    if (keepDay !== undefined) {\n      this.keepDay = keepDay;\n    }\n    this.baseApply(arguments);\n  },\n  trigger: false\n},\n// ============================= TABS =============================\ntabs: {\n  baseTag: \"widget\",\n  widgetName: \"tabs\",\n  elem: \"div\",\n  wrap: true,\n  setSize: true,\n  contentCtx: true,\n  options: tabsAccordionOptions,\n  setValue: function(value) {\n    if (value !== undefined) {\n      this.widget.option(\"active\", parseInt(value));\n    }\n  },\n  onBind: function(value) {\n    this.baseApply(arguments);\n    var anchor,\n      base = window.location.href.replace(/#.*$/, '');\n    $('ul>li>a[href^=\"#\"]', this.mainElem).each(function () {\n      anchor = $(this);\n      anchor.attr('href', base + anchor.attr('href'));\n    });\n    tabsAccordionOnBind.call(this);\n  },\n  getValue: function() { // Helper: get the index of the currently selected tab\n    return this.widget.options.active;\n  }\n}\n\n};\n\n$.views.tags(tagDefs);\n\n// ============================= BUTTON AND BUTTONSET =============================\nif ($.ui.version.slice(0, 4) === \"1.11\") {\n  // Add backward compatibility for {{buttonset}} and {{button}}\n  tagDefs.button = {\n    baseTag: \"widget\",\n    widgetName: \"button\",\n    elem: \"button\",\n    setSize: true,\n    contentCtx: true,\n    init: function(tagCtx, linkCtx) {\n      var template,\n        tag = this,\n        content = tagCtx.tmpl,\n        props = tagCtx.props,\n        id = props.id,\n        parent = tag.parent;\n\n      if (tag._.radio = parent && parent.tagName === \"buttonset\") {\n        tagCtx = parent.tagCtx;\n      } else {\n        tag._.chkBx = (tag.inline ? props : linkCtx.elem).type === \"checkbox\";\n      }\n\n      var  params = tagCtx.params,\n        paramprops = params.props || {};\n\n      tag.baseApply(arguments);\n\n      if (tag.inline) {\n        content = content && content.markup || \"&nbsp;\";\n        // (&nbsp; fixes a jQueryUI button rendering issue)\n        if (tag._.radio || tag._.chkBx) {\n          id = id || \"jsv\" + Math.random();\n          template = '<input id=\"' + id + '\" data-link=\"' + params.args[0] \n            + (paramprops.convert ? \" convert=\" + paramprops.convert : \"\")\n            + (paramprops.convertBack ? \" convertBack=\" + paramprops.convertBack : \"\")\n            + (tag._.radio\n              ? '\" name=\"' + parent.id + '\" type=\"radio\" value=\"' + props.value + \n                '\"/><label for=\"' + id + '\">' + content + '</label>'\n              : '\" type=\"checkbox\"/><label for=\"' + id + '\">' + content + '</label>');\n        } else {\n          template = \"<button>\" + content + \"</button>\";\n        }\n        tag.template = template;\n      }\n    },\n    onAfterLink: function(tagCtx, linkCtx) {\n      var tag = this,\n        elem = linkCtx.elem,\n        val = tag.bndArgs()[0];\n\n      if (tag._.radio || tag._.chkBx) {\n        if (!tag.inline) {\n          if (tag._.unlinked && !elem.id) {\n            elem.id = \"jsv\" + Math.random();\n            $(elem).after('<label for=\"' + elem.id + '\">&nbsp;</label>');\n          }\n          elem.checked = tag._.radio\n            ? (elem.name = tag.parent.id, val === elem.value)\n            : val && val !== \"false\";\n        }\n\n        tag.baseApply(arguments);\n\n        elem = tag.mainElem[0];\n\n        if (tag._.radio) {\n          // Use {^{button value=\"xxx\"}}Label{{/button}}\n          if (elem.value === \"undefined\") {\n            // Default, for {^{button}}xxx{{/button}} or {^{button _label=\"xxx\"/}}\n            elem.value = tag.widget.options.label; \n          }\n          elem.checked = val === elem.value;\n        } else {\n          elem.checked = val && val !== \"false\";\n        }\n\n        if (tag._.chkBx) {\n          tag.widget.refresh();\n        }\n      } else {\n        if (!tag.inline) {\n          elem.innerHTML = elem.innerHTML || \"&nbsp;\"; // Fixes jQuery UI button issue if no label text\n        }\n        tag.baseApply(arguments);\n      }\n    }\n  };\n\n  tagDefs.buttonset = {\n    baseTag: \"widget\",\n    widgetName: \"buttonset\",\n    setSize: true,\n    contentCtx: true,\n    init: function(tagCtx) {\n      var id,\n        tag = this;\n\n      tag.baseApply(arguments);\n\n      if (tag.inline) {\n        tag.id = tagCtx.props.id || \"jsv\" + Math.random();\n        tag.template = '<span id=\"' + tag.id + '\">' + tagCtx.tmpl.markup + \"</span>\";\n      }\n    },\n    onAfterLink: function(tagCtx, linkCtx) {\n      var tag = this,\n        elem = linkCtx.elem,\n        val = tag.bndArgs()[0];\n      tag.baseApply(arguments);\n      tag.widget.buttons.each(function(i, elem) {\n        elem.checked = val === elem.value;\n        $(elem).button(\"refresh\");\n      });\n    }\n  };\n}\n\n// Compile tags\n$.views.tags(tagDefs);\n\nfunction unlinkedClone() {\n  // Ensure that cloned element (and its contents) created by jQuery UI to show dragging\n  // element does not have any data-jsv tokens (since deleting the element would then\n  // remove those views associated with the original element)\n  var clone = $(this).clone();\n  clone.find(\"*\").addBack().removeAttr( \"id data-link data-jsv data-jsv-df\" );\n  clone.find(\"script\").remove();\n  return clone;\n}\n\n// ============================= DRAGGABLE =============================\nif ($.ui.draggable) {\n  // Create derived draggable widget\n  $.widget(\"jsv.draggable\", $.ui.draggable, {\n    _createHelper: function() {\n      if (this.options.helper === \"clone\") {\n        this.options.helper = unlinkedClone;\n      }\n      return this._super();\n    }\n  });\n\n  $.views.tags(\"draggable\", {\n    baseTag: \"widget\",\n    widgetName: \"jsv-draggable\",\n    bindTo: [\"left\", \"top\"],\n    linkedCtxParam: [\"left\", \"top\"],\n    elem: \"div\",\n    wrap: true,\n    setSize: true,\n    contentCtx: true,\n    options: function() {\n      var tag = this;\n      return {\n        drag: function(evt, ui) {\n          setTimeout(function() {\n            tag.updateValues(ui.offset.left, ui.offset.top);\n            if (tag.convert) {\n              tag.setValues(ui.offset.left, ui.offset.top);\n            }\n          },0);\n        }\n      };\n    },\n    setValue: function(value, index) {\n      if (value === undefined) {\n        this.ctxPrm(this.linkedCtxParam[index], this.getValue()[index]);\n      } else {\n        // Set new position (offset left/top) to ui.offset.left/top (and include effect of margin, if set)\n        var offset = {},\n          topLeft = index ? \"top\" : \"left\";\n        offset[topLeft] = value + parseInt(this.mainElem.css(\"margin-\" + topLeft));\n        this.mainElem.offset(offset);\n      }\n    },\n    getValue: function() {\n      var position = this.mainElem.position();\n      return [position.left, position.top];\n    }\n  });\n}\n\n// ============================= ACCORDION =============================\nif ($.ui.accordion) {\n  // Create derived accordion widget\n  $.widget(\"jsv.accordion\", $.ui.accordion, {\n    _create: function() {\n      var widget = this;\n      widget.options.header = widget.options.header.replace(\":not(li):even\", \":not(li,script):even\");\n      widget._super();\n    }\n  });\n\n  $.views.tags(\"accordion\", {\n    baseTag: \"widget\",\n    widgetName: \"jsv-accordion\",\n    wrap: true,\n    setSize: true,\n    contentCtx: true,\n    options: tabsAccordionOptions,\n    initOptions: [\"header\"], // Options which need to be set on creation, not later\n    onBind: function(value) {\n      this.baseApply(arguments);\n      tabsAccordionOnBind.call(this);\n    },\n    setValue: function(value) {\n      if (value !== undefined) {\n        // Select the tab whose index is the currently selected one\n        this.widget.option(\"active\", parseInt(value));\n      }\n    },\n    getValue: function() { // Helper: get the index of the currently selected panel\n      return this.widget.options.active;\n    }\n  });\n}\n\n// ============================= SORTABLE =============================\nif ($.ui.sortable) {\n  $.widget(\"jsv.sortable\", $.ui.sortable, {\n    _create: function() {\n      var innerView, moveFrom,\n        widget = this,\n        startOption = widget.options.start,\n        stopOption = widget.options.stop;\n\n      widget.option({\n        start: function(event, ui) {\n          startOption && startOption.apply(this, arguments);\n\n          if (widget.options.bindArray !== false) {\n            innerView = ui.item.view(); // The view of the item that is being dragged\n            if (innerView.type === \"item\") {\n              // The sortable items are within a {{for}} loop, so this is a data-linked sortable list\n              moveFrom = innerView.index + 1; // 1-based starting index of dragged item\n            }\n          }\n        },\n        stop: function(event, ui) {\n          var moveTo;\n\n          if (moveFrom) {\n            // This is a data-linked sortable list\n            moveTo = ui.item.prevAll(ui.item[0].tagName).length; // The new index after\n            // being dragged (count of previous siblings of same tagName)\n            widget.cancel(); // Now cancel the DOM changes, since we are data-driven,\n            // and should use JsViews data-linking to move the sorted items\n            $.observable(innerView.parent.data).move(moveFrom-1, moveTo); // Make the equivalent\n            // observable change to the underlying data\n            moveFrom = undefined;\n            // Remove the starting index, ready for new sorting actions on this sortable list\n          }\n          stopOption && stopOption.apply(this, arguments);\n        }\n      });\n      widget._super();\n    }\n  });\n\n  $.views.tags(\"sortable\", {\n    baseTag: \"widget\",\n    widgetName: \"jsv-sortable\",\n    wrap: true,\n    contentCtx: true,\n  });\n}\n\n// ============================= SELECTABLE =============================\nif ($.ui.selectable) {\n  $.widget(\"jsv.selectable\", $.ui.selectable, {\n    _create: function() {\n      var widget = this;\n\n      widget.options.filter += \":not(script)\";\n      widget._super();\n    }\n  });\n\n  $.views.tags(\"selectable\", {\n    baseTag: \"widget\",\n    widgetName: \"jsv-selectable\",\n    wrap: true,\n    setSize: true,\n    contentCtx: true,\n    options: function() {\n      var tag = this;\n      return {\n        stop: function(evt, ui) {\n          tag.setSelectedItems();\n        }\n      };\n    },\n    initOptions: [\"filter\"], // Options which need to be set on creation, not later\n    onBind: function() {\n      var tag = this;\n      tag.selected = []; // Value of first arg (after applying converter, if there is one)\n\n      function selObs(ev, eventArgs) {\n        if (!eventArgs.refresh) {\n          tag.setSelection();\n        }\n      }\n\n      tag.selObs = selObs; // Store function instance, for disposing of just this binding, in onDispose\n      tag.baseApply(arguments);\n      tag.mainElem.on(\"jsv-domchange.sel\", function() {\n        tag.widget.refresh();\n        tag.selected._domChg = 2;\n        tag.setSelectedItems();\n        tag.selected._domChg = undefined;\n      });\n    },\n    onDispose: function() {\n      $.unobserve(this.selected, this.selObs);  // Remove just this binding to selected array\n    },\n    setValue: function(selected) { // Set the new observed array of selected indices\n      var tag = this;\n      if (selected !== undefined && $.isArray(selected) && tag.selected !== selected) {\n        $.unobserve(tag.selected, tag.selObs);\n        tag.selected = selected;\n        $.observe(selected, tag.selObs);\n        tag.setSelection();\n      }\n    },\n    getValue: function() {\n      return this.selected;\n    },\n    setSelection: function() {\n      // Set the class on the new selected elements (based on tag.selected array of indices)\n      var tag = this,\n        l = tag.selected.length;\n      if (!tag.selected._domChg) {\n        // No need to update if during a domchange event - only if a selectable change event\n        // Remove selected class from all selectable elements\n        tag.widget.selectees.removeClass(\"ui-selected\");\n        while (l--) {\n          // Set selected class on elements at indices in tag.selected array\n          tag.widget.selectees.eq(tag.selected[l]).addClass(\"ui-selected\");\n        }\n      }\n    },\n    setSelectedItems: function() {\n      // Set observable selectedItems array based on selected elements managed by widget\n      var tag = this,\n        selected = [];\n      if (tag.selected && tag.selected._domChg !== 1) {\n        if (tag.selected._domChg) {\n          // Avoid race conditions when multiple selectables bind to same selected array\n          tag.selected._domChg--;\n        }\n        tag.widget.selectees.each(function(index, elem) {\n          if ((' ' + elem.className + ' ').indexOf(' ui-selected ') > -1) {\n            selected.push(index); // This is the index of a selected element\n          }\n        });\n        tag.setValue(tag.selected); // Update the tag to bind to the new selected array\n        $.observable(tag.selected).refresh(selected); // Refresh to the new selected indices\n      }\n    }\n  });\n}\n})(this, this.jQuery);\n"]}