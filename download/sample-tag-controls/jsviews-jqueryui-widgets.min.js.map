{"version":3,"sources":["jsviews-jqueryui-widgets.js"],"names":["global","$","undefined","getConverter","tag","cvt","tagCtx","view","getRsc","checkboxRadioOnBind","this","props","elem","mainElem","baseApply","arguments","name","value","displayElem","widget","label","checkboxRadioOnAfterLink","linkCtx","options","option","tabsAccordionOnBind","on","ev","eventArgs","newSelected","selected","active","refresh","updateValue","tabsAccordionOptions","activate","evt","ui","initDataFormatter","dataFormatter","dataFormat","parse","parseData","data","call","formatData","date","format","unlinkedClone","clone","find","addBack","removeAttr","remove","fn","views","tagDefs","argDefault","mainElement","init","content","elemType","inline","tmpl","markup","template","wrap","trim","attr","onBind","prop","i","optionKey","presets","initOptions","widgetName","widgetFullName","presetsHash","push","split","pop","length","tagName","id","isFunction","onAfterLink","each","key","charAt","slice","apply","onUpdate","dataBoundOnly","button","baseTag","setSize","contentCtx","innerHTML","ctx","event","autocomplete","linkedElement","change","item","select","focus","checkbox","setValue","val","checked","radio","radiogroup","parents","_d","sub","_gm","bndArgs","disabled","radios","childTags","l","controlgroup","datepicker","parseDate","formatDate","dateFormat","_dateFormat","_defaults","convert","cvtBk","convertBack","Date","fix","onSelect","dateText","css","trigger","getValue","droppable","menu","progressbar","boundProps","busy","parseFloat","resizable","bindTo","linkedCtxParam","resize","updateValues","size","width","height","setValues","index","selectmenu","slider","slide","values","_jsvChg","range","spinner","displayFormat","numberString","window","Globalize","_culture","numberFormat","spin","_format","dataCvt","dataCvtBk","parent","_parse","timespinner","ticks","timeString","setHours","getDay","getHours","getMinutes","extend","step","page","returnDate","keepDay","args","setMinutes","tabs","parseInt","anchor","base","location","href","replace","tags","version","_","chkBx","type","params","paramprops","Math","random","unlinked","after","buttonset","buttons","draggable","_createHelper","helper","_super","drag","offset","left","top","ctxPrm","topLeft","position","accordion","_create","header","sortable","innerView","moveFrom","startOption","start","stopOption","stop","bindArray","moveTo","prevAll","cancel","observable","move","selectable","filter","setSelectedItems","selObs","setSelection","_domChg","onDispose","unobserve","isArray","observe","selectees","removeClass","eq","addClass","className","indexOf","jQuery"],"mappings":"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","file":"jsviews-jqueryui-widgets.min.js","sourcesContent":["/*! JsViews jQueryUI widget integration v1.0.4\nsee: http://www.jsviews.com/#download/jqueryui-tagcontrols */\n/*\n * https://www.jsviews.com/download/sample-tag-controls/jsviews-jqueryui-widgets.js\n * Copyright 2019, Boris Moore\n * Released under the MIT License.\n */\n\n/* Wrap behavior (wrapping HTML content) and default element, for each widget: */\n\n/*       autocomplete button   buttonset droppable   menu        progressbar  resizable\n * wrap: -            wrap     -         wrap        wrap        wrap         wrap     \n * elem: input        button   -         -           ul          div          div      \n */\n\n/*       selectable   slider   spinner   timespinner  tabs       sortable     draggable\n * wrap: wrap         -        -         -            wrap       wrap         wrap     \n * elem: -            div      input     input        -          -            -      \n */\n\n/*       accordion    checkbox radio     controlgroup selectmenu datepicker\n * wrap: wrap         -        -         wrap         wrap       wrap\n * elem: -            div      input     span         selectv    input\n */\n\n(function(global, $, undefined) {\n\"use strict\";\n\nif (!$ || !$.fn || !$.ui || !$.views) {\n  // jQuery is not loaded.\n  throw \"jsviews-jqueryui-widgets.js requires jQuery, jQuery UI and JsViews\";\n}\n\nfunction getConverter(tag, cvt) {\n  return cvt + \"\" === cvt ? tag.tagCtx.view.getRsc(\"converters\", cvt) : cvt;\n}\n\nfunction checkboxRadioOnBind() {\n  var tag = this,\n    props = tag.tagCtx.props,\n    elem = tag.mainElem[0];\n    tag.baseApply(arguments);\n\n  if (props.name) {\n    elem.name = props.name;\n  }\n  if (props.value) {\n    elem.value = props.value;\n  }\n\n  tag.displayElem = tag.widget.label;\n}\n\nfunction checkboxRadioOnAfterLink(tagCtx, linkCtx) {\n  var tag = this,\n    props = tagCtx.props;\n\n  tag.baseApply(arguments);\n\n  if (props.label && props.label !== tag.widget.options.label) {\n    tag.widget.option(\"label\", props.label);\n  }\n}\n\nfunction tabsAccordionOnBind() {\n  var tag = this;\n  tag.mainElem.on(\"jsv-domchange\", function(ev, tagCtx, linkCtx, eventArgs) {\n    var newSelected,\n      selected = tag.widget.options.active;\n\n    tag.widget.refresh();\n    newSelected = tag.widget.options.active;\n\n    if (selected !== newSelected) {\n      tag.updateValue(newSelected);\n    }\n  });\n}\n\nfunction tabsAccordionOptions() {\n  var tag = this;\n  return {\n    activate: function(evt, ui) {\n      // Raise elemChangeHandler event when selected tab changes - for two-way binding to arg(0)\n      tag.updateValue(tag.widget.options.active);\n    }\n  };\n}\n\nfunction initDataFormatter(tag, tagCtx) { // Used by datepicker and spinner\n  // Initialize the data formatter\n  var dataFormatter,\n    dataFormat = tagCtx.props.dataFormat;\n  if (dataFormat === undefined) {\n    dataFormat = tag.dataFormat;\n  }\n  dataFormatter = dataFormat && dataFormat.parse\n    ? dataFormat\n    : tag.dataFormatter;\n\n  // Formatter can be provided as tag.dataFormat or tagCtx.props.dataFormat\n  tag.parseData = function(data) {\n    return dataFormatter.parse.call(tag, data, tag.tagCtx.props);\n  };\n  tag.formatData = function(date) {\n    return dataFormatter.format.call(tag, date, tag.tagCtx.props);\n  };\n  return dataFormat;\n}\n\nvar tagDefs = {\n// ============================= WIDGET =============================\nwidget: {\n  argDefault: false, // Do not default missing arg to #data\n  mainElement: \"*\",\n  init: function(tagCtx) {\n    var content, elemType,\n      tag = this;\n\n    if (tag.inline) {\n      content = tagCtx.tmpl.markup;\n      if (!tag.template && (elemType = tagCtx.props.elem || tag.elem)) {\n        if (content) {\n          if (tag.wrap) {\n            tag.template = \"<\"+elemType+\">\" + $.trim(content) + \"</\"+elemType+\">\";\n          }\n        } else {\n          tag.template = (elemType === \"input\") ? \"<input/>\" : \"<\"+elemType+\"></\"+elemType+\">\";\n        }\n      }\n      tag.attr = \"html\";\n    }\n  },\n  onBind: function(tagCtx) {\n    var mainElem, prop, i, optionKey,\n      tag = this,\n      presets = tag.initOptions || [], // initOptions: array of option names that when set declaratively\n                                 // as tag options will be set on creation, not on afterLink\n      widgetName = tag.widgetName,\n      options = tag.options,     // hash (or function returning hash) of option settings\n      widgetFullName = widgetName,\n      presetsHash = {};\n\n    presets.push(\"create\");\n\n    widgetName = widgetName.split(\"-\").pop();\n\n    i = presets.length;\n    while (i--) {\n      optionKey = presets[i];\n      if (prop = tagCtx.props[\"_\" + optionKey]) {\n        presetsHash[optionKey] = prop;\n      }\n    }\n    if (widgetFullName === widgetName) {\n      widgetFullName = \"ui-\" + widgetName;\n    }\n\n    mainElem = tag.mainElem;\n    if (!mainElem || !mainElem[0]) {\n      // This may be due to using {{myWidget}} No element found here {{/myWidget}} \n      throw \"No element found for tag '\" + tag.tagName +\"'\";\n    }\n\n    if (tagCtx.props.id && !mainElem[0].id) {\n      mainElem[0].id = tagCtx.props.id;\n    }\n\n    // Instantiate widget\n    mainElem[widgetName](presetsHash);\n\n    // Store widget instance\n    tag.widget = mainElem.data(widgetFullName) || mainElem.data(widgetName);\n\n    if (!tag.widget) {\n      // Widget failed to load, or is not a valid widget factory type\n      throw \"widget '\" + widgetName + \"' failed\";\n    }\n\n    if (options) {\n      if ($.isFunction(options)) {\n        options = tag.options();\n      }\n      mainElem[widgetName](\"option\", options); // initialize options\n    }\n  },\n  onAfterLink: function(tagCtx) {\n    var mainElem,\n      tag = this,\n      options = tag.options, // hash (or function returning hash) of option settings\n      props = tagCtx.props,\n      widgetName = tag.widgetName.split(\"-\").pop();\n    if ($.isFunction(options)) {\n      options = tag.options();\n    }\n    mainElem = tag.mainElem;\n    $.each(props, function(key, prop) {\n      var option;\n      if (key.charAt(0) === \"_\") {\n        key = key.slice(1);\n        option = options && options[key];\n        if (mainElem[widgetName](\"option\", key) != prop) { // != so undefined and null are considered equivalent\n          mainElem[widgetName](\"option\", key,\n            option && $.isFunction(option) && prop && $.isFunction(prop)\n              ? function() {\n                // If the same event function option is overridden on the tagDef options\n                // (or in a _create override) and the tagCtx.props, call first the one on\n                // the tagDef options, and then the one declared on the tag properties.\n                option.apply(mainElem[0], arguments);\n                return prop.apply(mainElem[0], arguments);\n              }\n              : prop\n            );\n        }\n      }\n    });\n  },\n  onUpdate: false, // Don't rerender whole tag on update\n  dataBoundOnly: true,\n  attr: \"none\"\n},\n// ============================= BUTTON =============================\nbutton: {\n  baseTag: \"widget\",\n  widgetName: \"button\",\n  elem: \"button\",\n  wrap: true,\n  setSize: true,\n  contentCtx: true,\n  onBind: function(tagCtx, linkCtx) {\n    var elem = this.mainElem[0];\n      elem.innerHTML = elem.innerHTML || \"&nbsp;\"; // Fixes jQuery UI button issue if no label text\n    this.baseApply(arguments);\n  },\n  onAfterLink: function(tagCtx, linkCtx, ctx, event) {\n    this.baseApply(arguments);\n    if (event) {\n      this.widget.refresh();\n    }\n  }\n},\n// ============================= AUTOCOMPLETE =============================\nautocomplete: {\n  baseTag: \"widget\",\n  widgetName: \"autocomplete\",\n  linkedElement: \"*\",\n  elem: \"input\",\n  setSize: true,\n  options: function() {\n    var tag = this;\n    return {\n      change: function(evt, ui) {\n        if (ui.item) {\n          tag.updateValue(ui.item.value);\n          // If there is a selected item, update bound value on keydown.\n          // (Alternatively can set trigger=false to update on change)\n        }\n      },\n      select: function(evt, ui) {\n        if (ui.item) {\n          tag.updateValue(ui.item.value);\n        }\n      },\n      focus: function(evt, ui) {\n        return false;\n      }\n    };\n  }\n},\n// ============================= CHECKBOX =============================\ncheckbox: {\n  baseTag: \"widget\",\n  widgetName: \"checkboxradio\",\n  template: \"<label><input type='checkbox'/></label>\",\n  mainElement: \"input\",\n  linkedElement: \"input\",\n  setSize: true,\n  onBind: checkboxRadioOnBind,\n  onAfterLink: checkboxRadioOnAfterLink,\n  setValue: function(val) {\n    var tag = this,\n      elem = this.mainElem[0],\n      checked = val && val !== \"false\";\n    if (elem.checked !== checked) {\n      elem.checked = checked;\n      tag.widget.refresh();\n    }\n  }\n},\n// ============================= RADIO =============================\nradio: {\n  baseTag: \"widget\",\n  widgetName: \"checkboxradio\",\n  template: \"<label><input type='radio'/></label>\",\n  mainElement: \"input\",\n  setSize: true,\n  onBind: function() {\n    var radiogroup = this.parents.radiogroup;\n    checkboxRadioOnBind.apply(this, arguments);\n    if (radiogroup && !radiogroup._d) {\n      radiogroup.onAfterLink = $.views.sub._gm(radiogroup.onAfterLink, function() { // Get derived method\n        var widget,\n          val = radiogroup.bndArgs()[0],\n          disabled = !!radiogroup.tagCtx.props.disabled,\n          radios = radiogroup.childTags(\"radio\"),\n          l = radios.length;\n        while (l--) {\n          radios[l].setValue(val);\n          widget = radios[l].widget;\n          if (disabled !== widget.options.disabled) {\n            widget.option(\"disabled\", disabled);\n          }\n        }\n        this.baseApply(arguments); // Call base onAfterLink()\n      });\n      radiogroup._d = true;\n    }\n  },\n  onAfterLink: checkboxRadioOnAfterLink,\n\n  setValue: function(val) {\n    var elem = this.mainElem[0],\n    checked = val === elem.value;\n    if (elem.checked !== checked) {\n      elem.checked = checked;\n    }\n    this.widget.refresh();\n  }\n},\n// ============================= CONTROLGROUP =============================\ncontrolgroup: {\n  baseTag: \"widget\",\n  widgetName: \"controlgroup\",\n  elem: \"span\",\n  wrap: true,\n  contentCtx: true,\n  onBind: function() {\n    var tag = this;\n    tag.baseApply(arguments);\n    tag.mainElem.on(\"jsv-domchange\", function() {\n      tag.widget.refresh();\n    });\n  }\n},\n// ============================= DATEPICKER =============================\ndatepicker: {\n  baseTag: \"widget\",\n  widgetName: \"datepicker\",\n  linkedElement: \"*\",\n  elem: \"input\",\n  setSize: true,\n  dataFormat: true,\n  dataFormatter: { // Data formatter from data to Date\n    // Default data formatter uses built-in datepicker formatter.\n    // Override as tag.dataFormat in tagDef or as tagCtxprops.dataFormat\n    parse: function(data, props) {\n      return $.datepicker.parseDate(this.dataFormat, data);\n    },\n    format: function(date, props) {\n      return $.datepicker.formatDate(this.dataFormat, date);\n    }\n  },\n  init: function(tagCtx) {\n    var tag = this,\n      dateFormat = tag.dateFormat = tagCtx.props.dateFormat\n        || tagCtx.props._dateFormat // Can set as _dateFormat=... or as dateFormat=...\n        || tag.dateFormat // or set as property in tagDef\n        || $.datepicker._defaults.dateFormat, // or use internal date-picker default\n      cvt = getConverter(tag, tag.convert),\n      cvtBk = getConverter(tag, tag.convertBack),\n      dataFormat = initDataFormatter(tag, tagCtx);\n      tag.dataFormat = dataFormat === true ? tag.dateFormat : dataFormat;\n\n    tag.convert = function(val) {\n      // Wrapped converter calls converter then does widget format\n      val = cvt ? cvt.call(tag, val) : val;\n      if (tag.dataFormat && (\"\" + val === val)) {\n        val = tag.parseData(val);\n      }\n      return $.datepicker.formatDate(dateFormat, dataFormat === 0 ? new Date(val) : val);\n    };\n    tag.convertBack = function(val) {\n      // Wrapped converter, does widget parse then calls converter\n      val = $.datepicker.parseDate(dateFormat, val);\n      val = dataFormat ? tag.formatData(val) : dataFormat === 0 ? +val : val;\n      return cvtBk ? cvtBk.call(tag, val) : val;\n    };\n    // Prevent onAfterLink replacing wrapped converters with unwrapped ones\n    tag.convert.fix = tag.convertBack.fix = true;\n    tag.baseApply(arguments);\n  },\n  options: function() {\n    var tag = this;\n    return {\n      onSelect: function(dateText) {\n        tag.value = dateText;\n        tag.updateValue(dateText);\n      }\n    };\n  },\n  onBind: function(tagCtx) {\n    var tag = this;\n    tag.baseApply(arguments);\n    tag.mainElem.datepicker(\"option\", \"dateFormat\", tag.dateFormat);\n    if (tag.mainElem[0].tagName !== \"INPUT\") {\n      // This datepicker is not using an input (e.g. using a div) - so set to inline-\n      tag.mainElem.css(\"display\", \"inline-block\");\n    } else {\n      tag.tagCtx.props.trigger = false;\n    }\n  },\n  setValue: function(value) {\n    var tag = this;\n    if (value !== undefined && value !== tag.value) {\n      tag.value = value;\n      tag.mainElem.datepicker(\"setDate\", value);\n    }\n  },\n  getValue: function() {\n    return this.value;\n  }\n},\n//dialog: { // Currently not supported. (Support would require overriding _createWrapper code.)\n//  baseTag: \"widget\",\n//  widgetName: \"dialog\",\n//  wrap: true,\n//  elem: \"div\"\n//},\n// ============================= DROPPABLE =============================\ndroppable: {\n  baseTag: \"widget\",\n  widgetName: \"droppable\",\n  elem: \"div\",\n  wrap: true,\n  setSize: true,\n  contentCtx: true,\n  setValue: function(value) {\n    if ($.isFunction(value)) {\n      this.widget.option(\"drop\", value); // Set the handler function for the drop action\n    }\n  }\n},\n// ============================= MENU =============================\nmenu: {\n  baseTag: \"widget\",\n  widgetName: \"menu\",\n  elem: \"ul\",\n  wrap: true,\n  setSize: true,\n  contentCtx: true,\n  initOptions: [\"menus\", \"items\", \"role\"], // Options which need to be set on creation, not later\n  setValue: function(value) {\n    if ($.isFunction(value)) {\n      this.widget.option(\"select\", value); // Set the menu select handler\n    }\n  }\n},\n// ============================= PROGRESSBAR =============================\nprogressbar: {\n  baseTag: \"widget\",\n  widgetName: \"progressbar\",\n  boundProps: [\"busy\"],\n  elem: \"div\",\n  wrap: true,\n  setSize: true,\n  contentCtx: true,\n  setValue: function(value) {\n    if (!this.tagCtx.props.busy) {\n      this.widget.value(parseFloat(value) || 0);\n    }\n  },\n  getValue: function() {\n    return this.widget.value();\n  },\n  onAfterLink: function(tagCtx) {\n    var tag = this;\n    tag.baseApply(arguments);\n    if (tagCtx.props.busy) {\n      tag.widget.value(false);\n    }\n  }\n},\n// ============================= RESIZABLE =============================\nresizable: {\n  baseTag: \"widget\",\n  widgetName: \"resizable\",\n  bindTo: [\"width\", \"height\"],\n  linkedCtxParam: [\"width\", \"height\"],\n  elem: \"div\",\n  wrap: true,\n  contentCtx: true,\n  options: function() {\n    var tag = this;\n    return {\n      resize: function(evt, ui) {\n        tag.updateValues(ui.size.width, ui.size.height, true); // Async update\n        tag.setValues(ui.size.width, ui.size.height);\n      }\n    };\n  },\n  setValue: function(value, index) {\n    if (value !== undefined) {\n      this.mainElem[index ? \"height\" : \"width\"](value || 0);\n    }\n  },\n  getValue: function() {\n    return [this.mainElem.width(), this.mainElem.height()];\n  }\n},\n// ============================= SELECTMENU =============================\nselectmenu: {\n  baseTag: \"widget\",\n  widgetName: \"selectmenu\",\n  elem: \"select\",\n  wrap: true,\n  setSize: true,\n  contentCtx: true,\n  options: function() {\n    var tag = this;\n    return {\n      change: function(evt, ui) {\n        tag.updateValue(ui.item.value);\n      }\n    };\n  },\n  onBind: function() {\n    var tag = this;\n    tag.baseApply(arguments);\n    tag.displayElem = tag.widget.button;\n    tag.mainElem.on(\"jsv-domchange\", function() {\n      tag.widget.refresh();\n    });\n  },\n  setValue: function(value) {\n    if (value !== undefined) {\n      this.mainElem[0].value = value;\n      this.widget.refresh();\n    }\n  },\n  getValue: function() { \n    return this.mainElem[0].value;\n  }\n},\n// ============================= SLIDER =============================\nslider: {\n  bindTo: [0, 1], // Bind to first argument. If options.range=true, bind also to second argument.\n  baseTag: \"widget\",\n  widgetName: \"slider\",\n  elem: \"div\",\n  setSize: true,\n  options: function() {\n    var tag = this;\n    return {\n      slide: function(evt, ui) {\n        if (ui.values) { // property values is given when option \"range\" is set to true\n          tag.updateValues.apply(tag, ui.values);\n        } else {\n          tag.updateValue(ui.value);\n        }\n      }\n    };\n  },\n  onAfterLink: function(tagCtx) {\n    var tag = this;\n    if (!tag.linkCtx.elem._jsvChg) {\n      // If change not triggered by a the slider itself changing value\n      tag.baseApply(arguments);\n    }\n  },\n  setValue: function(value, index) {\n    var widget = this.widget;\n    if (value !== undefined) {\n      value = value || 0;\n      if (widget.options.range === true) {\n        widget.values(index, value);\n      } else {\n        widget.value(value);\n      }\n    }\n  },\n  getValue: function() {\n    return this.widget.value();\n  }\n},\n// ============================= SPINNER =============================\nspinner: {\n  baseTag: \"widget\",\n  widgetName: \"spinner\",\n  mainElement: \"input\",\n  linkedElement: \"input\",\n  elem: \"input\",\n  setSize: true,\n  // Default display formatter uses Globalize 0.1.1.\n  // Override as tag.displayFormat in tagDef or as tagCtx.props.displayFormat\n  displayFormat: { // Default display format: numberString, to number\n    parse: function(numberString, props) {\n      return window.Globalize\n        ? Globalize.parseFloat(numberString, 10, props._culture)\n        : numberString;\n    },\n    format: function(data, props) {\n      return window.Globalize\n        ? Globalize.format(data, this.widget.options.numberFormat, props._culture)\n        : data;\n    }\n  },\n  options: function() {\n    var tag = this;\n    return {\n      spin: function(evt, ui) {\n        tag.updateValue(tag.widget._format(ui.value));\n      }\n    };\n  },\n  init: function(tagCtx) {\n    var dataFormat,\n      tag = this,\n      displayFormat = tagCtx.props.displayFormat;\n    tag.parse = function(numberString) {\n      return displayFormat.parse.call(tag, numberString, tag.tagCtx.props);\n    };\n    tag.format = function(data, props) {\n      return displayFormat.format.call(tag, data, tag.tagCtx.props);\n    };\n    if (displayFormat === undefined) {\n      displayFormat = tag.displayFormat;\n    }\n    tag.dataFormat = dataFormat = initDataFormatter(tag, tagCtx);\n    tag.baseApply(arguments);\n  },\n  onBind: function(tagCtx) {\n    var tag = this,\n      cvt = getConverter(tag, tag.convert),\n      cvtBk = getConverter(tag, tag.convertBack);\n    tag.dataCvt = cvt;\n    tag.dataCvtBk = cvtBk;\n    tag.baseApply(arguments);\n\n    if (!tag.linkCtx.elem._jsvChg) {\n      // If change not triggered by the spinner itself changing value\n      tag.displayElem = tag.mainElem.parent(); // jQuery UI wraps the input in a span\n      if (tagCtx.props.width) {\n        // In addition to generic setting of width on the\n        // displayElem, need also to set width on the input.\n        tag.mainElem.width(tagCtx.props.width - tag.displayElem.find(\".ui-spinner-up\").width()-9);\n      }\n    }\n\n    tag.convert = function(val) {\n      // Wrapped converter calls converter then does widget format\n      val = cvt ? cvt.call(tag, val) : val\n      val = tag.dataFormat ? +tag.parseData(val) : val;\n      return tag.widget._format(val);\n    };\n    tag.convertBack = function(val) {\n      // Wrapped converter, does widget parse then calls converter\n      val = tag.widget._parse(val);\n      val = tag.dataFormat ? tag.formatData(val) : val;\n      return cvtBk ? cvtBk.call(tag, val) : val;\n    };\n    // Prevent onAfterLink replacing wrapped converters with unwrapped ones\n    tag.convert.fix = tag.convertBack.fix = true;\n\n    tag.widget._parse = function(value) {\n      return value + \"\" === value && value\n        ? +tag.parse(value, tagCtx.props)\n        : value;\n    };\n    tag.widget._format = function(data) {\n      return data !== \"\"\n        ? tag.format(data, tagCtx.props)\n        : data;\n    };\n  }\n},\n// ============================= TIMESPINNER =============================\ntimespinner: {\n  baseTag: \"spinner\",\n  dataFormat: { // Default data format: ticks/timestamp, to Date\n    parse: function(date, props) {\n      return +date;\n    },\n    format: function(ticks, props) {\n      return new Date(ticks);\n    }\n  },\n  displayFormat: { // Default timestring display, to Date\n    parse: function(timeString, props) {\n      var date;\n      if (timeString) {\n        return window.Globalize\n          ? Globalize.parseDate(timeString, \"t\", props._culture)\n          : ((date = new Date()).setHours(timeString.slice(0, 2), timeString.slice(3)), date);\n      }\n    },\n    format: function(date, props) {\n      if (date.getDay) {\n        return window.Globalize\n          ? Globalize.format(date, \"t\", props._culture)\n          : (100 + date.getHours() + \"\").slice(1) + \":\" + (100 + date.getMinutes() + \"\").slice(1);\n      }\n    }\n  },\n  options: function() {\n    return $.extend(\n      this.baseApply(), // Get options object from base class and extend it\n      {step: 60000, page: 60}\n    );\n  },\n  init: function(tagCtx) {\n    this.baseApply(arguments);\n    this.tagCtx.props.width = this.tagCtx.props.width || 80;\n  },\n  onBind: function(tagCtx) {\n    var tag = this;\n    tag.baseApply(arguments);\n\n    tag.widget._parse = function(value) {\n      var returnDate;\n      if (\"\" + value === value && value && (value = tag.parse(value, tagCtx.props))) {\n        // Make return dateNumber (ticks) change the hours and minutes but keep current date (day/month)\n        if (tag.keepDay) {\n          returnDate = tag.tagCtx.args[0];\n          if (tag.dataCvt) {\n            returnDate = tag.dataCvt(returnDate);\n          }\n          if (tag.dataFormat) {\n            returnDate = tag.parseData(returnDate);\n          }\n        } else {\n          returnDate = tag.value;\n        }\n        returnDate = new Date(returnDate);\n        returnDate.setHours(value.getHours());\n        returnDate.setMinutes(value.getMinutes());\n        value = returnDate;\n      }\n      return +value;\n    };\n    tag.widget._format = function(value) {\n      if (+value === value) {\n        tag.value = value;\n        return tag.format(new Date(value), tagCtx.props);\n      }\n    };\n  },\n  onAfterLink: function(tagCtx) {\n    var keepDay = tagCtx.props.keepDay;\n    if (keepDay !== undefined) {\n      this.keepDay = keepDay;\n    }\n    this.baseApply(arguments);\n  },\n  trigger: false\n},\n// ============================= TABS =============================\ntabs: {\n  baseTag: \"widget\",\n  widgetName: \"tabs\",\n  elem: \"div\",\n  wrap: true,\n  setSize: true,\n  contentCtx: true,\n  options: tabsAccordionOptions,\n  setValue: function(value) {\n    if (value !== undefined) {\n      this.widget.option(\"active\", parseInt(value));\n    }\n  },\n  onBind: function(value) {\n    this.baseApply(arguments);\n    var anchor,\n      base = window.location.href.replace(/#.*$/, '');\n    $('ul>li>a[href^=\"#\"]', this.mainElem).each(function () {\n      anchor = $(this);\n      anchor.attr('href', base + anchor.attr('href'));\n    });\n    tabsAccordionOnBind.call(this);\n  },\n  getValue: function() { // Helper: get the index of the currently selected tab\n    return this.widget.options.active;\n  }\n}\n\n};\n\n$.views.tags(tagDefs);\n\n// ============================= BUTTON AND BUTTONSET =============================\nif ($.ui.version.slice(0, 4) === \"1.11\") {\n  // Add backward compatibility for {{buttonset}} and {{button}}\n  tagDefs.button = {\n    baseTag: \"widget\",\n    widgetName: \"button\",\n    elem: \"button\",\n    setSize: true,\n    contentCtx: true,\n    init: function(tagCtx, linkCtx) {\n      var template,\n        tag = this,\n        content = tagCtx.tmpl,\n        props = tagCtx.props,\n        id = props.id,\n        parent = tag.parent;\n\n      if (tag._.radio = parent && parent.tagName === \"buttonset\") {\n        tagCtx = parent.tagCtx;\n      } else {\n        tag._.chkBx = (tag.inline ? props : linkCtx.elem).type === \"checkbox\";\n      }\n\n      var  params = tagCtx.params,\n        paramprops = params.props || {};\n\n      tag.baseApply(arguments);\n\n      if (tag.inline) {\n        content = content && content.markup || \"&nbsp;\";\n        // (&nbsp; fixes a jQueryUI button rendering issue)\n        if (tag._.radio || tag._.chkBx) {\n          id = id || \"jsv\" + Math.random();\n          template = '<input id=\"' + id + '\" data-link=\"' + params.args[0] \n            + (paramprops.convert ? \" convert=\" + paramprops.convert : \"\")\n            + (paramprops.convertBack ? \" convertBack=\" + paramprops.convertBack : \"\")\n            + (tag._.radio\n              ? '\" name=\"' + parent.id + '\" type=\"radio\" value=\"' + props.value + \n                '\"/><label for=\"' + id + '\">' + content + '</label>'\n              : '\" type=\"checkbox\"/><label for=\"' + id + '\">' + content + '</label>');\n        } else {\n          template = \"<button>\" + content + \"</button>\";\n        }\n        tag.template = template;\n      }\n    },\n    onAfterLink: function(tagCtx, linkCtx) {\n      var tag = this,\n        elem = linkCtx.elem,\n        val = tag.bndArgs()[0];\n\n      if (tag._.radio || tag._.chkBx) {\n        if (!tag.inline) {\n          if (tag._.unlinked && !elem.id) {\n            elem.id = \"jsv\" + Math.random();\n            $(elem).after('<label for=\"' + elem.id + '\">&nbsp;</label>');\n          }\n          elem.checked = tag._.radio\n            ? (elem.name = tag.parent.id, val === elem.value)\n            : val && val !== \"false\";\n        }\n\n        tag.baseApply(arguments);\n\n        elem = tag.mainElem[0];\n\n        if (tag._.radio) {\n          // Use {^{button value=\"xxx\"}}Label{{/button}}\n          if (elem.value === \"undefined\") {\n            // Default, for {^{button}}xxx{{/button}} or {^{button _label=\"xxx\"/}}\n            elem.value = tag.widget.options.label; \n          }\n          elem.checked = val === elem.value;\n        } else {\n          elem.checked = val && val !== \"false\";\n        }\n\n        if (tag._.chkBx) {\n          tag.widget.refresh();\n        }\n      } else {\n        if (!tag.inline) {\n          elem.innerHTML = elem.innerHTML || \"&nbsp;\"; // Fixes jQuery UI button issue if no label text\n        }\n        tag.baseApply(arguments);\n      }\n    }\n  };\n\n  tagDefs.buttonset = {\n    baseTag: \"widget\",\n    widgetName: \"buttonset\",\n    setSize: true,\n    contentCtx: true,\n    init: function(tagCtx) {\n      var id,\n        tag = this;\n\n      tag.baseApply(arguments);\n\n      if (tag.inline) {\n        tag.id = tagCtx.props.id || \"jsv\" + Math.random();\n        tag.template = '<span id=\"' + tag.id + '\">' + tagCtx.tmpl.markup + \"</span>\";\n      }\n    },\n    onAfterLink: function(tagCtx, linkCtx) {\n      var tag = this,\n        elem = linkCtx.elem,\n        val = tag.bndArgs()[0];\n      tag.baseApply(arguments);\n      tag.widget.buttons.each(function(i, elem) {\n        elem.checked = val === elem.value;\n        $(elem).button(\"refresh\");\n      });\n    }\n  };\n}\n\n// Compile tags\n$.views.tags(tagDefs);\n\nfunction unlinkedClone() {\n  // Ensure that cloned element (and its contents) created by jQuery UI to show dragging\n  // element does not have any data-jsv tokens (since deleting the element would then\n  // remove those views associated with the original element)\n  var clone = $(this).clone();\n  clone.find(\"*\").addBack().removeAttr( \"id data-link data-jsv data-jsv-df\" );\n  clone.find(\"script\").remove();\n  return clone;\n}\n\n// ============================= DRAGGABLE =============================\nif ($.ui.draggable) {\n  // Create derived draggable widget\n  $.widget(\"jsv.draggable\", $.ui.draggable, {\n    _createHelper: function() {\n      if (this.options.helper === \"clone\") {\n        this.options.helper = unlinkedClone;\n      }\n      return this._super();\n    }\n  });\n\n  $.views.tags(\"draggable\", {\n    baseTag: \"widget\",\n    widgetName: \"jsv-draggable\",\n    bindTo: [\"left\", \"top\"],\n    linkedCtxParam: [\"left\", \"top\"],\n    elem: \"div\",\n    wrap: true,\n    setSize: true,\n    contentCtx: true,\n    options: function() {\n      var tag = this;\n      return {\n        drag: function(evt, ui) {\n          tag.updateValues(ui.offset.left, ui.offset.top, true); // Async update\n          if (tag.convert) {\n            tag.setValues(ui.offset.left, ui.offset.top);\n          }\n        }\n      };\n    },\n    setValue: function(value, index) {\n      if (value === undefined) {\n        this.ctxPrm(this.linkedCtxParam[index], this.getValue()[index]);\n      } else {\n        // Set new position (offset left/top) to ui.offset.left/top (and include effect of margin, if set)\n        var offset = {},\n          topLeft = index ? \"top\" : \"left\";\n        offset[topLeft] = value + parseInt(this.mainElem.css(\"margin-\" + topLeft));\n        this.mainElem.offset(offset);\n      }\n    },\n    getValue: function() {\n      var position = this.mainElem.position();\n      return [position.left, position.top];\n    }\n  });\n}\n\n// ============================= ACCORDION =============================\nif ($.ui.accordion) {\n  // Create derived accordion widget\n  $.widget(\"jsv.accordion\", $.ui.accordion, {\n    _create: function() {\n      var widget = this;\n      widget.options.header = widget.options.header.replace(\":not(li):even\", \":not(li,script):even\");\n      widget._super();\n    }\n  });\n\n  $.views.tags(\"accordion\", {\n    baseTag: \"widget\",\n    widgetName: \"jsv-accordion\",\n    wrap: true,\n    setSize: true,\n    contentCtx: true,\n    options: tabsAccordionOptions,\n    initOptions: [\"header\"], // Options which need to be set on creation, not later\n    onBind: function(value) {\n      this.baseApply(arguments);\n      tabsAccordionOnBind.call(this);\n    },\n    setValue: function(value) {\n      if (value !== undefined) {\n        // Select the tab whose index is the currently selected one\n        this.widget.option(\"active\", parseInt(value));\n      }\n    },\n    getValue: function() { // Helper: get the index of the currently selected panel\n      return this.widget.options.active;\n    }\n  });\n}\n\n// ============================= SORTABLE =============================\nif ($.ui.sortable) {\n  $.widget(\"jsv.sortable\", $.ui.sortable, {\n    _create: function() {\n      var innerView, moveFrom,\n        widget = this,\n        startOption = widget.options.start,\n        stopOption = widget.options.stop;\n\n      widget.option({\n        start: function(event, ui) {\n          startOption && startOption.apply(this, arguments);\n\n          if (widget.options.bindArray !== false) {\n            innerView = ui.item.view(); // The view of the item that is being dragged\n            if (innerView.type === \"item\") {\n              // The sortable items are within a {{for}} loop, so this is a data-linked sortable list\n              moveFrom = innerView.index + 1; // 1-based starting index of dragged item\n            }\n          }\n        },\n        stop: function(event, ui) {\n          var moveTo;\n\n          if (moveFrom) {\n            // This is a data-linked sortable list\n            moveTo = ui.item.prevAll(ui.item[0].tagName).length; // The new index after\n            // being dragged (count of previous siblings of same tagName)\n            widget.cancel(); // Now cancel the DOM changes, since we are data-driven,\n            // and should use JsViews data-linking to move the sorted items\n            $.observable(innerView.parent.data).move(moveFrom-1, moveTo); // Make the equivalent\n            // observable change to the underlying data\n            moveFrom = undefined;\n            // Remove the starting index, ready for new sorting actions on this sortable list\n          }\n          stopOption && stopOption.apply(this, arguments);\n        }\n      });\n      widget._super();\n    }\n  });\n\n  $.views.tags(\"sortable\", {\n    baseTag: \"widget\",\n    widgetName: \"jsv-sortable\",\n    wrap: true,\n    contentCtx: true,\n  });\n}\n\n// ============================= SELECTABLE =============================\nif ($.ui.selectable) {\n  $.widget(\"jsv.selectable\", $.ui.selectable, {\n    _create: function() {\n      var widget = this;\n\n      widget.options.filter += \":not(script)\";\n      widget._super();\n    }\n  });\n\n  $.views.tags(\"selectable\", {\n    baseTag: \"widget\",\n    widgetName: \"jsv-selectable\",\n    wrap: true,\n    setSize: true,\n    contentCtx: true,\n    options: function() {\n      var tag = this;\n      return {\n        stop: function(evt, ui) {\n          tag.setSelectedItems();\n        }\n      };\n    },\n    initOptions: [\"filter\"], // Options which need to be set on creation, not later\n    onBind: function() {\n      var tag = this;\n      tag.selected = []; // Value of first arg (after applying converter, if there is one)\n\n      function selObs(ev, eventArgs) {\n        if (!eventArgs.refresh) {\n          tag.setSelection();\n        }\n      }\n\n      tag.selObs = selObs; // Store function instance, for disposing of just this binding, in onDispose\n      tag.baseApply(arguments);\n      tag.mainElem.on(\"jsv-domchange.sel\", function() {\n        tag.widget.refresh();\n        tag.selected._domChg = 2;\n        tag.setSelectedItems();\n        tag.selected._domChg = undefined;\n      });\n    },\n    onDispose: function() {\n      $.unobserve(this.selected, this.selObs);  // Remove just this binding to selected array\n    },\n    setValue: function(selected) { // Set the new observed array of selected indices\n      var tag = this;\n      if (selected !== undefined && $.isArray(selected) && tag.selected !== selected) {\n        $.unobserve(tag.selected, tag.selObs);\n        tag.selected = selected;\n        $.observe(selected, tag.selObs);\n        tag.setSelection();\n      }\n    },\n    getValue: function() {\n      return this.selected;\n    },\n    setSelection: function() {\n      // Set the class on the new selected elements (based on tag.selected array of indices)\n      var tag = this,\n        l = tag.selected.length;\n      if (!tag.selected._domChg) {\n        // No need to update if during a domchange event - only if a selectable change event\n        // Remove selected class from all selectable elements\n        tag.widget.selectees.removeClass(\"ui-selected\");\n        while (l--) {\n          // Set selected class on elements at indices in tag.selected array\n          tag.widget.selectees.eq(tag.selected[l]).addClass(\"ui-selected\");\n        }\n      }\n    },\n    setSelectedItems: function() {\n      // Set observable selectedItems array based on selected elements managed by widget\n      var tag = this,\n        selected = [];\n      if (tag.selected && tag.selected._domChg !== 1) {\n        if (tag.selected._domChg) {\n          // Avoid race conditions when multiple selectables bind to same selected array\n          tag.selected._domChg--;\n        }\n        tag.widget.selectees.each(function(index, elem) {\n          if ((' ' + elem.className + ' ').indexOf(' ui-selected ') > -1) {\n            selected.push(index); // This is the index of a selected element\n          }\n        });\n        tag.setValue(tag.selected); // Update the tag to bind to the new selected array\n        $.observable(tag.selected).refresh(selected); // Refresh to the new selected indices\n      }\n    }\n  });\n}\n})(this, this.jQuery);\n"]}