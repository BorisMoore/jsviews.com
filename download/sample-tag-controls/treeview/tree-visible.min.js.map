{"version":3,"sources":["tree-visible.js"],"names":["$","views","tags","tree","template","expanded","toggle","observable","this","setProperty","jQuery"],"mappings":";;CAOA,SAAUA,GACV,YAEAA,GAAEC,MAAMC,MACNC,MACEC,SAAU,wRAkBVC,UAAU,EAGVC,OAAQ,WACNN,EAAEO,WAAWC,MAAMC,YAAY,YAAaD,KAAKH,eAKpDG,KAAKE","file":"tree-visible.min.js","sourcesContent":["/*! Sample JsViews tag control: {{tree}} control using visible{...} v1.0.2\nsee: http://www.jsviews.com/#download/sample-tagcontrols */\n/*\n * Copyright 2019, Boris Moore\n * Released under the MIT License.\n */\n\n(function($) {\n\"use strict\";\n\n$.views.tags({\n  tree: {\n    template: '<li>' +\n    '{{if folders && folders.length}}' +\n      //If there are child items, show item, with a toggle button to expand/collapse children\n      '<span data-link=\"{on ~tag.toggle} {:~tag.expanded ? \\'-\\' : \\'+\\'}\" class=\"toggle\"></span> {{>name}}' +\n      //If expanded, show the child items\n      '<ul data-link=\"visible{:~tag.expanded}\">' +\n        '{{for folders}}' +\n          //Recursive {{tree}} call to display subtree\n          '{{tree/}}' +\n        '{{/for}}' +\n      '</ul>' +\n    '{{else}}' +\n      //If no child items, show just the item\n      '<span class=\"spacer\">&bull;</span> {{>name}}' +\n    '{{/if}}' +\n  '</li>',\n\n    //PROPERTIES\n    expanded: false, // Default to unexpanded\n\n    //METHODS\n    toggle: function() {\n      $.observable(this).setProperty(\"expanded\", !this.expanded);\n    }\n  }\n});\n\n})(this.jQuery);\n"]}