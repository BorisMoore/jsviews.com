{"version":3,"sources":["tree-if.js"],"names":["$","views","tags","tree","onBind","self","this","contents","first","on","toggle","template","observable","view","data","setProperty","expanded","dataBoundOnly","jQuery"],"mappings":";;CAOA,SAAUA,GACV,YAEAA,GAAEC,MAAMC,MACNC,MACEC,OAAQ,WACN,GAAIC,GAAOC,IACXD,GAAKE,SAAS,MAAMC,QACjBC,GAAG,QAAS,UAAW,WACtBJ,EAAKK,YAGXC,SAAU,sOAmBVD,OAAQ,WACNV,EAAEY,WAAWN,KAAKO,KAAKC,MAAMC,YAAY,YAAaT,KAAKO,KAAKC,KAAKE,WAEvEC,eAAe,MAIhBX,KAAKY","file":"tree-if.min.js","sourcesContent":["/*! Sample JsViews tag control: {{tree}} control using {^{if}} binding v0.9.84 (Beta)\nsee: http://www.jsviews.com/#download/sample-tagcontrols */\n/*\n * Copyright 2017, Boris Moore\n * Released under the MIT License.\n */\n\n(function($) {\n\"use strict\";\n\n$.views.tags({\n  tree: {\n    onBind: function() {\n      var self = this;\n      self.contents(\"li\").first()\n        .on(\"click\", \".toggle\", function() {\n          self.toggle();\n        });\n    },\n    template: '<li>' +\n      '{{if folders && folders.length}}' +\n        '<span class=\"toggle\">{^{:expanded ? \"-\" : \"+\"}}</span>' +\n      '{{else}}' +\n        '<span class=\"spacer\">&bull;</span>' +\n      '{{/if}}' +\n      '{{>name}}' +\n    '</li>' +\n    '{^{if expanded}}' +\n      '<li>' +\n        '<ul>' +\n          '{{for folders}}' +\n            '{^{tree/}}' +\n          '{{/for}}' +\n        '</ul>' +\n      '</li>' +\n    '{{/if}}',\n\n    //METHODS\n    toggle: function() {\n      $.observable(this.view.data).setProperty(\"expanded\", !this.view.data.expanded);\n    },\n    dataBoundOnly: true\n  }\n});\n\n})(this.jQuery);\n"]}