{"version":3,"sources":["spinblock.js"],"names":["$","views","tags","spinblock","dataBoundOnly","bindTo","linkedCtxParam","ctx","pane","template","onUpdate","cycle","this","ctxPrm","tagCtxs","length","jQuery"],"mappings":";;CAOA,SAAUA,GACV,YAEAA,GAAEC,MAAMC,MACRC,WAEEC,eAAe,EACfC,OAAQ,OACRC,eAAgB,OAChBC,KAAMC,KAAM,GACZC,SACA,8NASAC,UAAU,EAGVC,MAAO,SAASH,GAEdI,KAAKC,OAAO,QAASL,EAAO,GAAKI,KAAKE,QAAQC,aAK/CH,KAAKI","file":"spinblock.min.js","sourcesContent":["/*! Sample JsViews tag control: {{spinblock}} control v0.9.91 (Beta)\nsee: http://www.jsviews.com/#download/sample-tagcontrols */\n/*\n * Copyright 2018, Boris Moore\n * Released under the MIT License.\n */\n\n(function($) {\n\"use strict\";\n\n$.views.tags({\nspinblock: {\n  // JsViews tag settings\n  dataBoundOnly: true,\n  bindTo: \"pane\",\n  linkedCtxParam: \"pane\",\n  ctx: {pane: 0}, // Default value for ~pane\n  template:\n  '{{if ~tagCtx.index===0}}' // Render once only\n  + '<svg class=\"switcher\" data-link=\"{on ~tag.cycle ~pane}\" height=\"34\" width=\"17\">'\n    + '<path d=\"M5,6 L11,6 L8,2 Z M5,11 L11,11 L8,15 Z\"></path>'\n  + '</svg>'\n  + '{^{include ^tmpl=~tag.tagCtxs[~pane].content/}}' // Render wrapped content of selected block,\n                                                      // data-linked to ~tag.pane for dynamic switching \n+ '{{/if}}',\n\n  // JsViews handlers and methods\n  onUpdate: false, // No need to re-render on update\n\n  // tag methods\n  cycle: function(pane) {\n    // Method to cycle/increment selected pane\n    this.ctxPrm(\"pane\", (pane + 1) % this.tagCtxs.length);\n  }\n}\n});\n\n})(this.jQuery);\n"]}