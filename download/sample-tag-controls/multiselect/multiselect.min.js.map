{"version":3,"sources":["multiselect.js"],"names":["$","views","tags","multisel","boundProps","init","tagCtx","linkCtx","tag","this","valueProp","props","labelProp","items","selectedItems","selected","_optionsTmpl","inline","content","sub","error","template","elem","multiple","onBind","selectElem","contents","on","ev","evargs","newSelection","children","map","i","get","_selSet","observable","refresh","proxy","updateSelection","updateItems","onAfterLink","propParams","params","size","disabled","prop","onDispose","off","onUpdate","attr","selection","val","l","length","inArray","remove","dataBoundOnly","jQuery"],"mappings":";;CAOA,SAAUA,GACV,YAEAA,GAAEC,MAAMC,MACNC,UACEC,YAAa,OAAQ,YACrBC,KAAM,SAASC,EAAQC,GACrB,GAAIC,GAAMC,IACVD,GAAIE,UAAYF,EAAIF,OAAOK,MAAMD,WAAa,KAC9CF,EAAII,UAAYJ,EAAIF,OAAOK,MAAMC,WAAa,OAC9CJ,EAAIK,MAAQP,EAAOK,MAAME,MACzBL,EAAIM,cAAgBR,EAAOK,MAAMI,aACjCP,EAAIQ,aAAe,gDAAkDR,EAAIE,UAAY,SAAWF,EAAII,UAAY,sBAC5GJ,EAAIS,OACFX,EAAOY,QACTlB,EAAEC,MAAMkB,IAAIC,MAAM,iCAElBZ,EAAIa,SAAW,+BAAiCb,EAAIQ,aAAe,aAGrET,EAAQe,KAAKC,SAAW,WACxBf,EAAIa,SAAWb,EAAIQ,eAGvBQ,OAAQ,SAASlB,EAAQC,GACvB,GAAIC,GAAMC,IACVD,GAAIiB,WAAajB,EAAIS,OAAST,EAAIkB,SAAS,UAAY1B,EAAEO,EAAQe,MACjEd,EAAIiB,WAAWE,GAAG,SAAU,SAASC,EAAIC,GACrC,GAAIC,GAAetB,EAAIiB,WAAWM,WAAWC,IAAI,SAASC,GACxD,MAAOxB,MAAKM,UAAYP,EAAIK,MAAMoB,IAAM,OACvCC,KAEL1B,GAAI2B,SAAU,EACdnC,EAAEoC,WAAW5B,EAAIM,eAAeuB,QAAQP,GACxCtB,EAAI2B,SAAU,IAEhBnC,GAAGQ,EAAIM,gBAAgBa,GAAG,cAAe3B,EAAEsC,MAAM9B,EAAI+B,gBAAiB/B,IACtER,GAAGQ,EAAIK,QAAQc,GAAG,cAAe3B,EAAEsC,MAAM9B,EAAIgC,YAAahC,IAC1DA,EAAI+B,mBAENE,YAAa,SAASnC,EAAQC,GAC9B,GAAImC,GAAapC,EAAOqC,OAAOhC,KAC3B+B,KACEA,EAAWE,OACbnC,KAAKgB,WAAW,GAAGmB,KAAOtC,EAAOK,MAAMiC,MAErCF,EAAWG,UACbpC,KAAKgB,WAAWqB,KAAK,aAAcxC,EAAOK,MAAMkC,YAIpDE,UAAW,WACT,GAAIvC,GAAMC,IACVT,IAAGQ,EAAIM,gBAAgBkC,IAAI,cAAexC,EAAI+B,iBAC9CvC,GAAGQ,EAAIK,QAAQmC,IAAI,cAAexC,EAAIgC,cAExCS,UAAU,EACVC,KAAM,OAGNX,gBAAiB,WACf,GAAI/B,GAAMC,IACV,KAAKD,EAAI2B,QAAS,CAGhB,GAAIgB,GAAY3C,EAAIM,cAAckB,IAAI,SAASoB,GAC7C,MAAOA,GAAI5C,EAAIE,YAEjBF,GAAIiB,WAAW2B,IAAID,KAGvBX,YAAa,WAGX,IAFA,GAAIhC,GAAMC,KACR4C,EAAI7C,EAAIM,cAAcwC,OACjBD,KAAM,GACPrD,EAAEuD,QAAQ/C,EAAIM,cAAcuC,GAAI7C,EAAIK,OAAS,GAE/Cb,EAAEoC,WAAW5B,EAAIM,eAAe0C,OAAOH,EAG3C5C,MAAK8B,mBAEPkB,eAAe,MAIhBhD,KAAKiD","file":"multiselect.min.js","sourcesContent":["/*! Sample JsViews tag control: {{multiselect}} control v1.0.4\r\nsee: http://www.jsviews.com/#download/sample-tagcontrols */\r\n/*\r\n * Copyright 2019, Boris Moore\r\n * Released under the MIT License.\r\n */\r\n\r\n(function($) {\r\n\"use strict\";\r\n\r\n$.views.tags({\r\n  multisel: {\r\n    boundProps: [\"size\", \"disabled\"],\r\n    init: function(tagCtx, linkCtx) {\r\n      var tag = this;\r\n      tag.valueProp = tag.tagCtx.props.valueProp || \"id\",\r\n      tag.labelProp = tag.tagCtx.props.labelProp || \"name\";\r\n      tag.items = tagCtx.props.items;\r\n      tag.selectedItems = tagCtx.props.selected || [];\r\n      tag._optionsTmpl = \"{^{for ~tag.items}}<option data-link='value{:\" + tag.valueProp + \"}'>{{:\" + tag.labelProp + \"}}</option>{{/for}}\";\r\n      if (tag.inline) {\r\n        if (tagCtx.content) {\r\n          $.views.sub.error(\"{{multiselect}} must be empty\");\r\n        } else {\r\n          tag.template = \"<select multiple='multiple'>\" + tag._optionsTmpl + \"</select>\";\r\n        }\r\n      } else {\r\n        linkCtx.elem.multiple = \"multiple\";\r\n        tag.template = tag._optionsTmpl;\r\n      }\r\n    },\r\n    onBind: function(tagCtx, linkCtx) {\r\n      var tag = this;\r\n      tag.selectElem = tag.inline ? tag.contents(\"select\") : $(linkCtx.elem);\r\n      tag.selectElem.on(\"change\", function(ev, evargs) {\r\n          var newSelection = tag.selectElem.children().map(function(i) {\r\n            return this.selected && tag.items[i] || null;\r\n          }).get();\r\n\r\n        tag._selSet = true;\r\n        $.observable(tag.selectedItems).refresh(newSelection);\r\n        tag._selSet = false;\r\n      });\r\n      $([tag.selectedItems]).on(\"arrayChange\", $.proxy(tag.updateSelection, tag));\r\n      $([tag.items]).on(\"arrayChange\", $.proxy(tag.updateItems, tag));\r\n      tag.updateSelection();\r\n    },\r\n    onAfterLink: function(tagCtx, linkCtx) {\r\n    var propParams = tagCtx.params.props;\r\n    if (propParams) {\r\n      if (propParams.size) {\r\n        this.selectElem[0].size = tagCtx.props.size;\r\n      }\r\n      if (propParams.disabled) {\r\n        this.selectElem.prop(\"disabled\", !!tagCtx.props.disabled);\r\n      }\r\n    }\r\n    },\r\n    onDispose: function() {\r\n      var tag = this;\r\n      $([tag.selectedItems]).off(\"arrayChange\", tag.updateSelection);\r\n      $([tag.items]).off(\"arrayChange\", tag.updateItems);\r\n    },\r\n    onUpdate: false, // don't rerender\r\n    attr: \"html\",\r\n\r\n    //METHODS\r\n    updateSelection: function() {\r\n      var tag = this;\r\n      if (!tag._selSet) {\r\n        // Map selectedItems to the corresponding array of strings\r\n        // (the names, or other prop specified by valueProp)\r\n        var selection = tag.selectedItems.map(function(val) {\r\n          return val[tag.valueProp];\r\n        });\r\n        tag.selectElem.val(selection); // Set selection on the <select> element\r\n      }\r\n    },\r\n    updateItems: function() {\r\n      var tag = this,\r\n        l = tag.selectedItems.length;\r\n      while (l-- > 0) {\r\n        if ($.inArray(tag.selectedItems[l], tag.items) < 0) {\r\n          // This selectedItem is no longer in the items\r\n          $.observable(tag.selectedItems).remove(l);\r\n        }\r\n      }\r\n      this.updateSelection();\r\n    },\r\n    dataBoundOnly: true\r\n  }\r\n});\r\n\r\n})(this.jQuery);\r\n"]}