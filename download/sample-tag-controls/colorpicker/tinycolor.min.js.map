{"version":3,"sources":["tinycolor.js"],"names":["Math","tinycolor","color","opts","this","rgb","inputToRGB","_originalInput","_r","r","_g","g","_b","b","_a","a","_roundA","mathRound","_format","format","_gradientType","gradientType","_ok","ok","_tc_id","tinyCounter","s","v","l","stringInputToObject","isValidCSSUnit","rgbToRgb","String","substr","h","convertToPercentage","hsvToRgb","hslToRgb","hasOwnProperty","boundAlpha","mathMin","mathMax","bound01","rgbToHsl","max","min","d","hue2rgb","p","q","t","rgbToHsv","i","floor","f","mod","rgbToHex","allow3Char","hex","pad2","toString","charAt","join","rgbaToHex","allow4Char","convertDecimalToHex","rgbaToArgbHex","desaturate","amount","hsl","toHsl","clamp01","saturate","greyscale","lighten","brighten","toRgb","darken","spin","hue","complement","triad","tetrad","splitcomplement","analogous","results","slices","part","ret","push","monochromatic","hsv","toHsv","modification","flip","o","flipped","parseFloat","isNaN","n","isOnePointZero","processPercent","isPercentage","parseInt","abs","val","parseIntFromHex","indexOf","c","length","round","convertHexToDecimal","matchers","CSS_UNIT","exec","replace","trimLeft","trimRight","toLowerCase","named","names","match","rgba","hsla","hsva","hex8","hex6","hex4","hex3","validateWCAG2Parms","parms","level","size","toUpperCase","mathRandom","random","prototype","isDark","getBrightness","isLight","isValid","getOriginalInput","getFormat","getAlpha","getLuminance","RsRGB","GsRGB","BsRGB","R","G","B","pow","setAlpha","value","toHsvString","toHslString","toHex","toHexString","toHex8","toHex8String","toRgbString","toPercentageRgb","toPercentageRgbString","toName","hexNames","toFilter","secondColor","hex8String","secondHex8String","formatSet","formattedString","hasAlpha","needsAlphaFormat","clone","_applyModification","fn","args","apply","concat","slice","call","arguments","_applyCombination","fromRatio","newColor","equals","color1","color2","mix","rgb1","rgb2","readability","c1","c2","isReadable","wcag2","wcag2Parms","out","mostReadable","baseColor","colorList","includeFallbackColors","bestColor","bestScore","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","CSS_INTEGER","CSS_NUMBER","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","RegExp","module","exports","define","amd","window"],"mappings":"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","file":"tinycolor.min.js","sourcesContent":["// TinyColor v1.4.1\r\n// https://github.com/bgrins/TinyColor\r\n// Brian Grinstead, MIT License\r\n\r\n(function(Math) {\r\n\r\nvar trimLeft = /^\\s+/,\r\n  trimRight = /\\s+$/,\r\n  tinyCounter = 0,\r\n  mathRound = Math.round,\r\n  mathMin = Math.min,\r\n  mathMax = Math.max,\r\n  mathRandom = Math.random;\r\n\r\nfunction tinycolor (color, opts) {\r\n\r\n  color = (color) ? color : '';\r\n  opts = opts || { };\r\n\r\n  // If input is already a tinycolor, return itself\r\n  if (color instanceof tinycolor) {\r\n     return color;\r\n  }\r\n  // If we are called as a function, call using new instead\r\n  if (!(this instanceof tinycolor)) {\r\n    return new tinycolor(color, opts);\r\n  }\r\n\r\n  var rgb = inputToRGB(color);\r\n  this._originalInput = color,\r\n  this._r = rgb.r,\r\n  this._g = rgb.g,\r\n  this._b = rgb.b,\r\n  this._a = rgb.a,\r\n  this._roundA = mathRound(100*this._a) / 100,\r\n  this._format = opts.format || rgb.format;\r\n  this._gradientType = opts.gradientType;\r\n\r\n  // Don't let the range of [0,255] come back in [0,1].\r\n  // Potentially lose a little bit of precision here, but will fix issues where\r\n  // .5 gets interpreted as half of the total, instead of half of 1\r\n  // If it was supposed to be 128, this was already taken care of by `inputToRgb`\r\n  if (this._r < 1) { this._r = mathRound(this._r); }\r\n  if (this._g < 1) { this._g = mathRound(this._g); }\r\n  if (this._b < 1) { this._b = mathRound(this._b); }\r\n\r\n  this._ok = rgb.ok;\r\n  this._tc_id = tinyCounter++;\r\n}\r\n\r\ntinycolor.prototype = {\r\n  isDark: function() {\r\n    return this.getBrightness() < 128;\r\n  },\r\n  isLight: function() {\r\n    return !this.isDark();\r\n  },\r\n  isValid: function() {\r\n    return this._ok;\r\n  },\r\n  getOriginalInput: function() {\r\n    return this._originalInput;\r\n  },\r\n  getFormat: function() {\r\n    return this._format;\r\n  },\r\n  getAlpha: function() {\r\n    return this._a;\r\n  },\r\n  getBrightness: function() {\r\n    //http://www.w3.org/TR/AERT#color-contrast\r\n    var rgb = this.toRgb();\r\n    return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\r\n  },\r\n  getLuminance: function() {\r\n    //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\r\n    var rgb = this.toRgb();\r\n    var RsRGB, GsRGB, BsRGB, R, G, B;\r\n    RsRGB = rgb.r/255;\r\n    GsRGB = rgb.g/255;\r\n    BsRGB = rgb.b/255;\r\n\r\n    if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\r\n    if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\r\n    if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\r\n    return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\r\n  },\r\n  setAlpha: function(value) {\r\n    this._a = boundAlpha(value);\r\n    this._roundA = mathRound(100*this._a) / 100;\r\n    return this;\r\n  },\r\n  toHsv: function() {\r\n    var hsv = rgbToHsv(this._r, this._g, this._b);\r\n    return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\r\n  },\r\n  toHsvString: function() {\r\n    var hsv = rgbToHsv(this._r, this._g, this._b);\r\n    var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\r\n    return (this._a == 1) ?\r\n      \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\r\n      \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\r\n  },\r\n  toHsl: function() {\r\n    var hsl = rgbToHsl(this._r, this._g, this._b);\r\n    return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\r\n  },\r\n  toHslString: function() {\r\n    var hsl = rgbToHsl(this._r, this._g, this._b);\r\n    var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\r\n    return (this._a == 1) ?\r\n      \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\r\n      \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\r\n  },\r\n  toHex: function(allow3Char) {\r\n    return rgbToHex(this._r, this._g, this._b, allow3Char);\r\n  },\r\n  toHexString: function(allow3Char) {\r\n    return '#' + this.toHex(allow3Char);\r\n  },\r\n  toHex8: function(allow4Char) {\r\n    return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\r\n  },\r\n  toHex8String: function(allow4Char) {\r\n    return '#' + this.toHex8(allow4Char);\r\n  },\r\n  toRgb: function() {\r\n    return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\r\n  },\r\n  toRgbString: function() {\r\n    return (this._a == 1) ?\r\n      \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\r\n      \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\r\n  },\r\n  toPercentageRgb: function() {\r\n    return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\r\n  },\r\n  toPercentageRgbString: function() {\r\n    return (this._a == 1) ?\r\n      \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\r\n      \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\r\n  },\r\n  toName: function() {\r\n    if (this._a === 0) {\r\n      return \"transparent\";\r\n    }\r\n\r\n    if (this._a < 1) {\r\n      return false;\r\n    }\r\n\r\n    return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\r\n  },\r\n  toFilter: function(secondColor) {\r\n    var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\r\n    var secondHex8String = hex8String;\r\n    var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\r\n\r\n    if (secondColor) {\r\n      var s = tinycolor(secondColor);\r\n      secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\r\n    }\r\n\r\n    return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\r\n  },\r\n  toString: function(format) {\r\n    var formatSet = !!format;\r\n    format = format || this._format;\r\n\r\n    var formattedString = false;\r\n    var hasAlpha = this._a < 1 && this._a >= 0;\r\n    var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\r\n\r\n    if (needsAlphaFormat) {\r\n      // Special case for \"transparent\", all other non-alpha formats\r\n      // will return rgba when there is transparency.\r\n      if (format === \"name\" && this._a === 0) {\r\n        return this.toName();\r\n      }\r\n      return this.toRgbString();\r\n    }\r\n    if (format === \"rgb\") {\r\n      formattedString = this.toRgbString();\r\n    }\r\n    if (format === \"prgb\") {\r\n      formattedString = this.toPercentageRgbString();\r\n    }\r\n    if (format === \"hex\" || format === \"hex6\") {\r\n      formattedString = this.toHexString();\r\n    }\r\n    if (format === \"hex3\") {\r\n      formattedString = this.toHexString(true);\r\n    }\r\n    if (format === \"hex4\") {\r\n      formattedString = this.toHex8String(true);\r\n    }\r\n    if (format === \"hex8\") {\r\n      formattedString = this.toHex8String();\r\n    }\r\n    if (format === \"name\") {\r\n      formattedString = this.toName();\r\n    }\r\n    if (format === \"hsl\") {\r\n      formattedString = this.toHslString();\r\n    }\r\n    if (format === \"hsv\") {\r\n      formattedString = this.toHsvString();\r\n    }\r\n\r\n    return formattedString || this.toHexString();\r\n  },\r\n  clone: function() {\r\n    return tinycolor(this.toString());\r\n  },\r\n\r\n  _applyModification: function(fn, args) {\r\n    var color = fn.apply(null, [this].concat([].slice.call(args)));\r\n    this._r = color._r;\r\n    this._g = color._g;\r\n    this._b = color._b;\r\n    this.setAlpha(color._a);\r\n    return this;\r\n  },\r\n  lighten: function() {\r\n    return this._applyModification(lighten, arguments);\r\n  },\r\n  brighten: function() {\r\n    return this._applyModification(brighten, arguments);\r\n  },\r\n  darken: function() {\r\n    return this._applyModification(darken, arguments);\r\n  },\r\n  desaturate: function() {\r\n    return this._applyModification(desaturate, arguments);\r\n  },\r\n  saturate: function() {\r\n    return this._applyModification(saturate, arguments);\r\n  },\r\n  greyscale: function() {\r\n    return this._applyModification(greyscale, arguments);\r\n  },\r\n  spin: function() {\r\n    return this._applyModification(spin, arguments);\r\n  },\r\n\r\n  _applyCombination: function(fn, args) {\r\n    return fn.apply(null, [this].concat([].slice.call(args)));\r\n  },\r\n  analogous: function() {\r\n    return this._applyCombination(analogous, arguments);\r\n  },\r\n  complement: function() {\r\n    return this._applyCombination(complement, arguments);\r\n  },\r\n  monochromatic: function() {\r\n    return this._applyCombination(monochromatic, arguments);\r\n  },\r\n  splitcomplement: function() {\r\n    return this._applyCombination(splitcomplement, arguments);\r\n  },\r\n  triad: function() {\r\n    return this._applyCombination(triad, arguments);\r\n  },\r\n  tetrad: function() {\r\n    return this._applyCombination(tetrad, arguments);\r\n  }\r\n};\r\n\r\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\r\n// String input requires \"1.0\" as input, so 1 will be treated as 1\r\ntinycolor.fromRatio = function(color, opts) {\r\n  if (typeof color == \"object\") {\r\n    var newColor = {};\r\n    for (var i in color) {\r\n      if (color.hasOwnProperty(i)) {\r\n        if (i === \"a\") {\r\n          newColor[i] = color[i];\r\n        }\r\n        else {\r\n          newColor[i] = convertToPercentage(color[i]);\r\n        }\r\n      }\r\n    }\r\n    color = newColor;\r\n  }\r\n\r\n  return tinycolor(color, opts);\r\n};\r\n\r\n// Given a string or object, convert that input to RGB\r\n// Possible string inputs:\r\n//\r\n//     \"red\"\r\n//     \"#f00\" or \"f00\"\r\n//     \"#ff0000\" or \"ff0000\"\r\n//     \"#ff000000\" or \"ff000000\"\r\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\r\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\r\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\r\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\r\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\r\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\r\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\r\n//\r\nfunction inputToRGB(color) {\r\n\r\n  var rgb = { r: 0, g: 0, b: 0 };\r\n  var a = 1;\r\n  var s = null;\r\n  var v = null;\r\n  var l = null;\r\n  var ok = false;\r\n  var format = false;\r\n\r\n  if (typeof color == \"string\") {\r\n    color = stringInputToObject(color);\r\n  }\r\n\r\n  if (typeof color == \"object\") {\r\n    if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\r\n      rgb = rgbToRgb(color.r, color.g, color.b);\r\n      ok = true;\r\n      format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\r\n    }\r\n    else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\r\n      s = convertToPercentage(color.s);\r\n      v = convertToPercentage(color.v);\r\n      rgb = hsvToRgb(color.h, s, v);\r\n      ok = true;\r\n      format = \"hsv\";\r\n    }\r\n    else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\r\n      s = convertToPercentage(color.s);\r\n      l = convertToPercentage(color.l);\r\n      rgb = hslToRgb(color.h, s, l);\r\n      ok = true;\r\n      format = \"hsl\";\r\n    }\r\n\r\n    if (color.hasOwnProperty(\"a\")) {\r\n      a = color.a;\r\n    }\r\n  }\r\n\r\n  a = boundAlpha(a);\r\n\r\n  return {\r\n    ok: ok,\r\n    format: color.format || format,\r\n    r: mathMin(255, mathMax(rgb.r, 0)),\r\n    g: mathMin(255, mathMax(rgb.g, 0)),\r\n    b: mathMin(255, mathMax(rgb.b, 0)),\r\n    a: a\r\n  };\r\n}\r\n\r\n\r\n// Conversion Functions\r\n// --------------------\r\n\r\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\r\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\r\n\r\n// `rgbToRgb`\r\n// Handle bounds / percentage checking to conform to CSS color spec\r\n// <http://www.w3.org/TR/css3-color/>\r\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\r\n// *Returns:* { r, g, b } in [0, 255]\r\nfunction rgbToRgb(r, g, b){\r\n  return {\r\n    r: bound01(r, 255) * 255,\r\n    g: bound01(g, 255) * 255,\r\n    b: bound01(b, 255) * 255\r\n  };\r\n}\r\n\r\n// `rgbToHsl`\r\n// Converts an RGB color value to HSL.\r\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\r\n// *Returns:* { h, s, l } in [0,1]\r\nfunction rgbToHsl(r, g, b) {\r\n\r\n  r = bound01(r, 255);\r\n  g = bound01(g, 255);\r\n  b = bound01(b, 255);\r\n\r\n  var max = mathMax(r, g, b), min = mathMin(r, g, b);\r\n  var h, s, l = (max + min) / 2;\r\n\r\n  if(max == min) {\r\n    h = s = 0; // achromatic\r\n  }\r\n  else {\r\n    var d = max - min;\r\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n    switch(max) {\r\n      case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n      case g: h = (b - r) / d + 2; break;\r\n      case b: h = (r - g) / d + 4; break;\r\n    }\r\n\r\n    h /= 6;\r\n  }\r\n\r\n  return { h: h, s: s, l: l };\r\n}\r\n\r\n// `hslToRgb`\r\n// Converts an HSL color value to RGB.\r\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\r\n// *Returns:* { r, g, b } in the set [0, 255]\r\nfunction hslToRgb(h, s, l) {\r\n  var r, g, b;\r\n\r\n  h = bound01(h, 360);\r\n  s = bound01(s, 100);\r\n  l = bound01(l, 100);\r\n\r\n  function hue2rgb(p, q, t) {\r\n    if(t < 0) t += 1;\r\n    if(t > 1) t -= 1;\r\n    if(t < 1/6) return p + (q - p) * 6 * t;\r\n    if(t < 1/2) return q;\r\n    if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n    return p;\r\n  }\r\n\r\n  if(s === 0) {\r\n    r = g = b = l; // achromatic\r\n  }\r\n  else {\r\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n    var p = 2 * l - q;\r\n    r = hue2rgb(p, q, h + 1/3);\r\n    g = hue2rgb(p, q, h);\r\n    b = hue2rgb(p, q, h - 1/3);\r\n  }\r\n\r\n  return { r: r * 255, g: g * 255, b: b * 255 };\r\n}\r\n\r\n// `rgbToHsv`\r\n// Converts an RGB color value to HSV\r\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\r\n// *Returns:* { h, s, v } in [0,1]\r\nfunction rgbToHsv(r, g, b) {\r\n\r\n  r = bound01(r, 255);\r\n  g = bound01(g, 255);\r\n  b = bound01(b, 255);\r\n\r\n  var max = mathMax(r, g, b), min = mathMin(r, g, b);\r\n  var h, s, v = max;\r\n\r\n  var d = max - min;\r\n  s = max === 0 ? 0 : d / max;\r\n\r\n  if(max == min) {\r\n    h = 0; // achromatic\r\n  }\r\n  else {\r\n    switch(max) {\r\n      case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n      case g: h = (b - r) / d + 2; break;\r\n      case b: h = (r - g) / d + 4; break;\r\n    }\r\n    h /= 6;\r\n  }\r\n  return { h: h, s: s, v: v };\r\n}\r\n\r\n// `hsvToRgb`\r\n// Converts an HSV color value to RGB.\r\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\r\n// *Returns:* { r, g, b } in the set [0, 255]\r\n function hsvToRgb(h, s, v) {\r\n\r\n  h = bound01(h, 360) * 6;\r\n  s = bound01(s, 100);\r\n  v = bound01(v, 100);\r\n\r\n  var i = Math.floor(h),\r\n    f = h - i,\r\n    p = v * (1 - s),\r\n    q = v * (1 - f * s),\r\n    t = v * (1 - (1 - f) * s),\r\n    mod = i % 6,\r\n    r = [v, q, p, p, t, v][mod],\r\n    g = [t, v, v, q, p, p][mod],\r\n    b = [p, p, t, v, v, q][mod];\r\n\r\n  return { r: r * 255, g: g * 255, b: b * 255 };\r\n}\r\n\r\n// `rgbToHex`\r\n// Converts an RGB color to hex\r\n// Assumes r, g, and b are contained in the set [0, 255]\r\n// Returns a 3 or 6 character hex\r\nfunction rgbToHex(r, g, b, allow3Char) {\r\n\r\n  var hex = [\r\n    pad2(mathRound(r).toString(16)),\r\n    pad2(mathRound(g).toString(16)),\r\n    pad2(mathRound(b).toString(16))\r\n  ];\r\n\r\n  // Return a 3 character hex if possible\r\n  if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\r\n    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\r\n  }\r\n\r\n  return hex.join(\"\");\r\n}\r\n\r\n// `rgbaToHex`\r\n// Converts an RGBA color plus alpha transparency to hex\r\n// Assumes r, g, b are contained in the set [0, 255] and\r\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\r\nfunction rgbaToHex(r, g, b, a, allow4Char) {\r\n\r\n  var hex = [\r\n    pad2(mathRound(r).toString(16)),\r\n    pad2(mathRound(g).toString(16)),\r\n    pad2(mathRound(b).toString(16)),\r\n    pad2(convertDecimalToHex(a))\r\n  ];\r\n\r\n  // Return a 4 character hex if possible\r\n  if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\r\n    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\r\n  }\r\n\r\n  return hex.join(\"\");\r\n}\r\n\r\n// `rgbaToArgbHex`\r\n// Converts an RGBA color to an ARGB Hex8 string\r\n// Rarely used, but required for \"toFilter()\"\r\nfunction rgbaToArgbHex(r, g, b, a) {\r\n\r\n  var hex = [\r\n    pad2(convertDecimalToHex(a)),\r\n    pad2(mathRound(r).toString(16)),\r\n    pad2(mathRound(g).toString(16)),\r\n    pad2(mathRound(b).toString(16))\r\n  ];\r\n\r\n  return hex.join(\"\");\r\n}\r\n\r\n// `equals`\r\n// Can be called with any tinycolor input\r\ntinycolor.equals = function (color1, color2) {\r\n  if (!color1 || !color2) { return false; }\r\n  return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\r\n};\r\n\r\ntinycolor.random = function() {\r\n  return tinycolor.fromRatio({\r\n    r: mathRandom(),\r\n    g: mathRandom(),\r\n    b: mathRandom()\r\n  });\r\n};\r\n\r\n\r\n// Modification Functions\r\n// ----------------------\r\n// Thanks to less.js for some of the basics here\r\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\r\n\r\nfunction desaturate(color, amount) {\r\n  amount = (amount === 0) ? 0 : (amount || 10);\r\n  var hsl = tinycolor(color).toHsl();\r\n  hsl.s -= amount / 100;\r\n  hsl.s = clamp01(hsl.s);\r\n  return tinycolor(hsl);\r\n}\r\n\r\nfunction saturate(color, amount) {\r\n  amount = (amount === 0) ? 0 : (amount || 10);\r\n  var hsl = tinycolor(color).toHsl();\r\n  hsl.s += amount / 100;\r\n  hsl.s = clamp01(hsl.s);\r\n  return tinycolor(hsl);\r\n}\r\n\r\nfunction greyscale(color) {\r\n  return tinycolor(color).desaturate(100);\r\n}\r\n\r\nfunction lighten (color, amount) {\r\n  amount = (amount === 0) ? 0 : (amount || 10);\r\n  var hsl = tinycolor(color).toHsl();\r\n  hsl.l += amount / 100;\r\n  hsl.l = clamp01(hsl.l);\r\n  return tinycolor(hsl);\r\n}\r\n\r\nfunction brighten(color, amount) {\r\n  amount = (amount === 0) ? 0 : (amount || 10);\r\n  var rgb = tinycolor(color).toRgb();\r\n  rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\r\n  rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\r\n  rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\r\n  return tinycolor(rgb);\r\n}\r\n\r\nfunction darken (color, amount) {\r\n  amount = (amount === 0) ? 0 : (amount || 10);\r\n  var hsl = tinycolor(color).toHsl();\r\n  hsl.l -= amount / 100;\r\n  hsl.l = clamp01(hsl.l);\r\n  return tinycolor(hsl);\r\n}\r\n\r\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\r\n// Values outside of this range will be wrapped into this range.\r\nfunction spin(color, amount) {\r\n  var hsl = tinycolor(color).toHsl();\r\n  var hue = (hsl.h + amount) % 360;\r\n  hsl.h = hue < 0 ? 360 + hue : hue;\r\n  return tinycolor(hsl);\r\n}\r\n\r\n// Combination Functions\r\n// ---------------------\r\n// Thanks to jQuery xColor for some of the ideas behind these\r\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\r\n\r\nfunction complement(color) {\r\n  var hsl = tinycolor(color).toHsl();\r\n  hsl.h = (hsl.h + 180) % 360;\r\n  return tinycolor(hsl);\r\n}\r\n\r\nfunction triad(color) {\r\n  var hsl = tinycolor(color).toHsl();\r\n  var h = hsl.h;\r\n  return [\r\n    tinycolor(color),\r\n    tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\r\n    tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\r\n  ];\r\n}\r\n\r\nfunction tetrad(color) {\r\n  var hsl = tinycolor(color).toHsl();\r\n  var h = hsl.h;\r\n  return [\r\n    tinycolor(color),\r\n    tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\r\n    tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\r\n    tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\r\n  ];\r\n}\r\n\r\nfunction splitcomplement(color) {\r\n  var hsl = tinycolor(color).toHsl();\r\n  var h = hsl.h;\r\n  return [\r\n    tinycolor(color),\r\n    tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\r\n    tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\r\n  ];\r\n}\r\n\r\nfunction analogous(color, results, slices) {\r\n  results = results || 6;\r\n  slices = slices || 30;\r\n\r\n  var hsl = tinycolor(color).toHsl();\r\n  var part = 360 / slices;\r\n  var ret = [tinycolor(color)];\r\n\r\n  for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\r\n    hsl.h = (hsl.h + part) % 360;\r\n    ret.push(tinycolor(hsl));\r\n  }\r\n  return ret;\r\n}\r\n\r\nfunction monochromatic(color, results) {\r\n  results = results || 6;\r\n  var hsv = tinycolor(color).toHsv();\r\n  var h = hsv.h, s = hsv.s, v = hsv.v;\r\n  var ret = [];\r\n  var modification = 1 / results;\r\n\r\n  while (results--) {\r\n    ret.push(tinycolor({ h: h, s: s, v: v}));\r\n    v = (v + modification) % 1;\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\n// Utility Functions\r\n// ---------------------\r\n\r\ntinycolor.mix = function(color1, color2, amount) {\r\n  amount = (amount === 0) ? 0 : (amount || 50);\r\n\r\n  var rgb1 = tinycolor(color1).toRgb();\r\n  var rgb2 = tinycolor(color2).toRgb();\r\n\r\n  var p = amount / 100;\r\n\r\n  var rgba = {\r\n    r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\r\n    g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\r\n    b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\r\n    a: ((rgb2.a - rgb1.a) * p) + rgb1.a\r\n  };\r\n\r\n  return tinycolor(rgba);\r\n};\r\n\r\n\r\n// Readability Functions\r\n// ---------------------\r\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\r\n\r\n// `contrast`\r\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\r\ntinycolor.readability = function(color1, color2) {\r\n  var c1 = tinycolor(color1);\r\n  var c2 = tinycolor(color2);\r\n  return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\r\n};\r\n\r\n// `isReadable`\r\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\r\n// The third argument is an optional Object.\r\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\r\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\r\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\r\n\r\n// *Example*\r\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\r\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\r\ntinycolor.isReadable = function(color1, color2, wcag2) {\r\n  var readability = tinycolor.readability(color1, color2);\r\n  var wcag2Parms, out;\r\n\r\n  out = false;\r\n\r\n  wcag2Parms = validateWCAG2Parms(wcag2);\r\n  switch (wcag2Parms.level + wcag2Parms.size) {\r\n    case \"AAsmall\":\r\n    case \"AAAlarge\":\r\n      out = readability >= 4.5;\r\n      break;\r\n    case \"AAlarge\":\r\n      out = readability >= 3;\r\n      break;\r\n    case \"AAAsmall\":\r\n      out = readability >= 7;\r\n      break;\r\n  }\r\n  return out;\r\n\r\n};\r\n\r\n// `mostReadable`\r\n// Given a base color and a list of possible foreground or background\r\n// colors for that base, returns the most readable color.\r\n// Optionally returns Black or White if the most readable color is unreadable.\r\n// *Example*\r\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\r\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\r\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\r\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\r\ntinycolor.mostReadable = function(baseColor, colorList, args) {\r\n  var bestColor = null;\r\n  var bestScore = 0;\r\n  var readability;\r\n  var includeFallbackColors, level, size ;\r\n  args = args || {};\r\n  includeFallbackColors = args.includeFallbackColors ;\r\n  level = args.level;\r\n  size = args.size;\r\n\r\n  for (var i= 0; i < colorList.length ; i++) {\r\n    readability = tinycolor.readability(baseColor, colorList[i]);\r\n    if (readability > bestScore) {\r\n      bestScore = readability;\r\n      bestColor = tinycolor(colorList[i]);\r\n    }\r\n  }\r\n\r\n  if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\r\n    return bestColor;\r\n  }\r\n  else {\r\n    args.includeFallbackColors=false;\r\n    return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\r\n  }\r\n};\r\n\r\n\r\n// Big List of Colors\r\n// ------------------\r\n// <http://www.w3.org/TR/css3-color/#svg-color>\r\nvar names = tinycolor.names = {\r\n  aliceblue: \"f0f8ff\",\r\n  antiquewhite: \"faebd7\",\r\n  aqua: \"0ff\",\r\n  aquamarine: \"7fffd4\",\r\n  azure: \"f0ffff\",\r\n  beige: \"f5f5dc\",\r\n  bisque: \"ffe4c4\",\r\n  black: \"000\",\r\n  blanchedalmond: \"ffebcd\",\r\n  blue: \"00f\",\r\n  blueviolet: \"8a2be2\",\r\n  brown: \"a52a2a\",\r\n  burlywood: \"deb887\",\r\n  burntsienna: \"ea7e5d\",\r\n  cadetblue: \"5f9ea0\",\r\n  chartreuse: \"7fff00\",\r\n  chocolate: \"d2691e\",\r\n  coral: \"ff7f50\",\r\n  cornflowerblue: \"6495ed\",\r\n  cornsilk: \"fff8dc\",\r\n  crimson: \"dc143c\",\r\n  cyan: \"0ff\",\r\n  darkblue: \"00008b\",\r\n  darkcyan: \"008b8b\",\r\n  darkgoldenrod: \"b8860b\",\r\n  darkgray: \"a9a9a9\",\r\n  darkgreen: \"006400\",\r\n  darkgrey: \"a9a9a9\",\r\n  darkkhaki: \"bdb76b\",\r\n  darkmagenta: \"8b008b\",\r\n  darkolivegreen: \"556b2f\",\r\n  darkorange: \"ff8c00\",\r\n  darkorchid: \"9932cc\",\r\n  darkred: \"8b0000\",\r\n  darksalmon: \"e9967a\",\r\n  darkseagreen: \"8fbc8f\",\r\n  darkslateblue: \"483d8b\",\r\n  darkslategray: \"2f4f4f\",\r\n  darkslategrey: \"2f4f4f\",\r\n  darkturquoise: \"00ced1\",\r\n  darkviolet: \"9400d3\",\r\n  deeppink: \"ff1493\",\r\n  deepskyblue: \"00bfff\",\r\n  dimgray: \"696969\",\r\n  dimgrey: \"696969\",\r\n  dodgerblue: \"1e90ff\",\r\n  firebrick: \"b22222\",\r\n  floralwhite: \"fffaf0\",\r\n  forestgreen: \"228b22\",\r\n  fuchsia: \"f0f\",\r\n  gainsboro: \"dcdcdc\",\r\n  ghostwhite: \"f8f8ff\",\r\n  gold: \"ffd700\",\r\n  goldenrod: \"daa520\",\r\n  gray: \"808080\",\r\n  green: \"008000\",\r\n  greenyellow: \"adff2f\",\r\n  grey: \"808080\",\r\n  honeydew: \"f0fff0\",\r\n  hotpink: \"ff69b4\",\r\n  indianred: \"cd5c5c\",\r\n  indigo: \"4b0082\",\r\n  ivory: \"fffff0\",\r\n  khaki: \"f0e68c\",\r\n  lavender: \"e6e6fa\",\r\n  lavenderblush: \"fff0f5\",\r\n  lawngreen: \"7cfc00\",\r\n  lemonchiffon: \"fffacd\",\r\n  lightblue: \"add8e6\",\r\n  lightcoral: \"f08080\",\r\n  lightcyan: \"e0ffff\",\r\n  lightgoldenrodyellow: \"fafad2\",\r\n  lightgray: \"d3d3d3\",\r\n  lightgreen: \"90ee90\",\r\n  lightgrey: \"d3d3d3\",\r\n  lightpink: \"ffb6c1\",\r\n  lightsalmon: \"ffa07a\",\r\n  lightseagreen: \"20b2aa\",\r\n  lightskyblue: \"87cefa\",\r\n  lightslategray: \"789\",\r\n  lightslategrey: \"789\",\r\n  lightsteelblue: \"b0c4de\",\r\n  lightyellow: \"ffffe0\",\r\n  lime: \"0f0\",\r\n  limegreen: \"32cd32\",\r\n  linen: \"faf0e6\",\r\n  magenta: \"f0f\",\r\n  maroon: \"800000\",\r\n  mediumaquamarine: \"66cdaa\",\r\n  mediumblue: \"0000cd\",\r\n  mediumorchid: \"ba55d3\",\r\n  mediumpurple: \"9370db\",\r\n  mediumseagreen: \"3cb371\",\r\n  mediumslateblue: \"7b68ee\",\r\n  mediumspringgreen: \"00fa9a\",\r\n  mediumturquoise: \"48d1cc\",\r\n  mediumvioletred: \"c71585\",\r\n  midnightblue: \"191970\",\r\n  mintcream: \"f5fffa\",\r\n  mistyrose: \"ffe4e1\",\r\n  moccasin: \"ffe4b5\",\r\n  navajowhite: \"ffdead\",\r\n  navy: \"000080\",\r\n  oldlace: \"fdf5e6\",\r\n  olive: \"808000\",\r\n  olivedrab: \"6b8e23\",\r\n  orange: \"ffa500\",\r\n  orangered: \"ff4500\",\r\n  orchid: \"da70d6\",\r\n  palegoldenrod: \"eee8aa\",\r\n  palegreen: \"98fb98\",\r\n  paleturquoise: \"afeeee\",\r\n  palevioletred: \"db7093\",\r\n  papayawhip: \"ffefd5\",\r\n  peachpuff: \"ffdab9\",\r\n  peru: \"cd853f\",\r\n  pink: \"ffc0cb\",\r\n  plum: \"dda0dd\",\r\n  powderblue: \"b0e0e6\",\r\n  purple: \"800080\",\r\n  rebeccapurple: \"663399\",\r\n  red: \"f00\",\r\n  rosybrown: \"bc8f8f\",\r\n  royalblue: \"4169e1\",\r\n  saddlebrown: \"8b4513\",\r\n  salmon: \"fa8072\",\r\n  sandybrown: \"f4a460\",\r\n  seagreen: \"2e8b57\",\r\n  seashell: \"fff5ee\",\r\n  sienna: \"a0522d\",\r\n  silver: \"c0c0c0\",\r\n  skyblue: \"87ceeb\",\r\n  slateblue: \"6a5acd\",\r\n  slategray: \"708090\",\r\n  slategrey: \"708090\",\r\n  snow: \"fffafa\",\r\n  springgreen: \"00ff7f\",\r\n  steelblue: \"4682b4\",\r\n  tan: \"d2b48c\",\r\n  teal: \"008080\",\r\n  thistle: \"d8bfd8\",\r\n  tomato: \"ff6347\",\r\n  turquoise: \"40e0d0\",\r\n  violet: \"ee82ee\",\r\n  wheat: \"f5deb3\",\r\n  white: \"fff\",\r\n  whitesmoke: \"f5f5f5\",\r\n  yellow: \"ff0\",\r\n  yellowgreen: \"9acd32\"\r\n};\r\n\r\n// Make it easy to access colors via `hexNames[hex]`\r\nvar hexNames = tinycolor.hexNames = flip(names);\r\n\r\n\r\n// Utilities\r\n// ---------\r\n\r\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\r\nfunction flip(o) {\r\n  var flipped = { };\r\n  for (var i in o) {\r\n    if (o.hasOwnProperty(i)) {\r\n      flipped[o[i]] = i;\r\n    }\r\n  }\r\n  return flipped;\r\n}\r\n\r\n// Return a valid alpha value [0,1] with all invalid values being set to 1\r\nfunction boundAlpha(a) {\r\n  a = parseFloat(a);\r\n\r\n  if (isNaN(a) || a < 0 || a > 1) {\r\n    a = 1;\r\n  }\r\n\r\n  return a;\r\n}\r\n\r\n// Take input from [0, n] and return it as [0, 1]\r\nfunction bound01(n, max) {\r\n  if (isOnePointZero(n)) { n = \"100%\"; }\r\n\r\n  var processPercent = isPercentage(n);\r\n  n = mathMin(max, mathMax(0, parseFloat(n)));\r\n\r\n  // Automatically convert percentage into number\r\n  if (processPercent) {\r\n    n = parseInt(n * max, 10) / 100;\r\n  }\r\n\r\n  // Handle floating point rounding errors\r\n  if ((Math.abs(n - max) < 0.000001)) {\r\n    return 1;\r\n  }\r\n\r\n  // Convert into [0, 1] range if it isn't already\r\n  return (n % max) / parseFloat(max);\r\n}\r\n\r\n// Force a number between 0 and 1\r\nfunction clamp01(val) {\r\n  return mathMin(1, mathMax(0, val));\r\n}\r\n\r\n// Parse a base-16 hex value into a base-10 integer\r\nfunction parseIntFromHex(val) {\r\n  return parseInt(val, 16);\r\n}\r\n\r\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\r\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\r\nfunction isOnePointZero(n) {\r\n  return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\r\n}\r\n\r\n// Check to see if string passed in is a percentage\r\nfunction isPercentage(n) {\r\n  return typeof n === \"string\" && n.indexOf('%') != -1;\r\n}\r\n\r\n// Force a hex value to have 2 characters\r\nfunction pad2(c) {\r\n  return c.length == 1 ? '0' + c : '' + c;\r\n}\r\n\r\n// Replace a decimal with it's percentage value\r\nfunction convertToPercentage(n) {\r\n  if (n <= 1) {\r\n    n = (n * 100) + \"%\";\r\n  }\r\n\r\n  return n;\r\n}\r\n\r\n// Converts a decimal to a hex value\r\nfunction convertDecimalToHex(d) {\r\n  return Math.round(parseFloat(d) * 255).toString(16);\r\n}\r\n// Converts a hex value to a decimal\r\nfunction convertHexToDecimal(h) {\r\n  return (parseIntFromHex(h) / 255);\r\n}\r\n\r\nvar matchers = (function() {\r\n\r\n  // <http://www.w3.org/TR/css3-values/#integers>\r\n  var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\r\n\r\n  // <http://www.w3.org/TR/css3-values/#number-value>\r\n  var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\r\n\r\n  // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\r\n  var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\r\n\r\n  // Actual matching.\r\n  // Parentheses and commas are optional, but not required.\r\n  // Whitespace can take the place of commas or opening paren\r\n  var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\r\n  var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\r\n\r\n  return {\r\n    CSS_UNIT: new RegExp(CSS_UNIT),\r\n    rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\r\n    rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\r\n    hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\r\n    hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\r\n    hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\r\n    hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\r\n    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\r\n    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\r\n    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\r\n    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\r\n  };\r\n})();\r\n\r\n// `isValidCSSUnit`\r\n// Take in a single string / number and check to see if it looks like a CSS unit\r\n// (see `matchers` above for definition).\r\nfunction isValidCSSUnit(color) {\r\n  return !!matchers.CSS_UNIT.exec(color);\r\n}\r\n\r\n// `stringInputToObject`\r\n// Permissive string parsing.  Take in a number of formats, and output an object\r\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\r\nfunction stringInputToObject(color) {\r\n\r\n  color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\r\n  var named = false;\r\n  if (names[color]) {\r\n    color = names[color];\r\n    named = true;\r\n  }\r\n  else if (color == 'transparent') {\r\n    return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\r\n  }\r\n\r\n  // Try to match string input using regular expressions.\r\n  // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\r\n  // Just return an object and let the conversion functions handle that.\r\n  // This way the result will be the same whether the tinycolor is initialized with string or object.\r\n  var match;\r\n  if ((match = matchers.rgb.exec(color))) {\r\n    return { r: match[1], g: match[2], b: match[3] };\r\n  }\r\n  if ((match = matchers.rgba.exec(color))) {\r\n    return { r: match[1], g: match[2], b: match[3], a: match[4] };\r\n  }\r\n  if ((match = matchers.hsl.exec(color))) {\r\n    return { h: match[1], s: match[2], l: match[3] };\r\n  }\r\n  if ((match = matchers.hsla.exec(color))) {\r\n    return { h: match[1], s: match[2], l: match[3], a: match[4] };\r\n  }\r\n  if ((match = matchers.hsv.exec(color))) {\r\n    return { h: match[1], s: match[2], v: match[3] };\r\n  }\r\n  if ((match = matchers.hsva.exec(color))) {\r\n    return { h: match[1], s: match[2], v: match[3], a: match[4] };\r\n  }\r\n  if ((match = matchers.hex8.exec(color))) {\r\n    return {\r\n      r: parseIntFromHex(match[1]),\r\n      g: parseIntFromHex(match[2]),\r\n      b: parseIntFromHex(match[3]),\r\n      a: convertHexToDecimal(match[4]),\r\n      format: named ? \"name\" : \"hex8\"\r\n    };\r\n  }\r\n  if ((match = matchers.hex6.exec(color))) {\r\n    return {\r\n      r: parseIntFromHex(match[1]),\r\n      g: parseIntFromHex(match[2]),\r\n      b: parseIntFromHex(match[3]),\r\n      format: named ? \"name\" : \"hex\"\r\n    };\r\n  }\r\n  if ((match = matchers.hex4.exec(color))) {\r\n    return {\r\n      r: parseIntFromHex(match[1] + '' + match[1]),\r\n      g: parseIntFromHex(match[2] + '' + match[2]),\r\n      b: parseIntFromHex(match[3] + '' + match[3]),\r\n      a: convertHexToDecimal(match[4] + '' + match[4]),\r\n      format: named ? \"name\" : \"hex8\"\r\n    };\r\n  }\r\n  if ((match = matchers.hex3.exec(color))) {\r\n    return {\r\n      r: parseIntFromHex(match[1] + '' + match[1]),\r\n      g: parseIntFromHex(match[2] + '' + match[2]),\r\n      b: parseIntFromHex(match[3] + '' + match[3]),\r\n      format: named ? \"name\" : \"hex\"\r\n    };\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction validateWCAG2Parms(parms) {\r\n  // return valid WCAG2 parms for isReadable.\r\n  // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\r\n  var level, size;\r\n  parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\r\n  level = (parms.level || \"AA\").toUpperCase();\r\n  size = (parms.size || \"small\").toLowerCase();\r\n  if (level !== \"AA\" && level !== \"AAA\") {\r\n    level = \"AA\";\r\n  }\r\n  if (size !== \"small\" && size !== \"large\") {\r\n    size = \"small\";\r\n  }\r\n  return {\"level\":level, \"size\":size};\r\n}\r\n\r\n// Node: Export function\r\nif (typeof module !== \"undefined\" && module.exports) {\r\n  module.exports = tinycolor;\r\n}\r\n// AMD/requirejs: Define the module\r\nelse if (typeof define === 'function' && define.amd) {\r\n  define(function () {return tinycolor;});\r\n}\r\n// Browser: Expose to window\r\nelse {\r\n  window.tinycolor = tinycolor;\r\n}\r\n\r\n})(Math);"]}