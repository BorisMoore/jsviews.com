{"version":3,"sources":["validate.js"],"names":["$","views","tags","validation","init","this","childValidates","validate","l","length","result","clearMessage","refreshValidates","refresh","addChild","child","push","removeChild","splice","updateIsValid","onChildValidate","groupIsValid","isValid","observable","setProperty","dataBoundOnly","baseTag","linkedElement","boundProps","tagCtx","linkCtx","tag","radiogroup","props","baseApply","arguments","inline","content","template","validationGroup","parents","render","val","ret","view","onBind","targetTag","target","linkedElem","childTags","undefined","onBeforeChange","ev","call","onAfterLink","arg0","cvtArgs","updateValue","preventInvalidData","messageElem","parentNode","contents","elem","addClass","sub","_glt","displayElem","label","insertAfter","onUpdate","eventArgs","tagCtxs","value","onDispose","message","testName","condition","linkedElems","_","radio","find","type","checked","bndArgs","validator","validators","test","isFunction","replace","textContent","innerText","removeClass","required","equal","min","max","maxLength","minLength","regex","RegExp","jQuery"],"mappings":"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","file":"validate.min.js","sourcesContent":["/*! Sample JsViews tag control: {{validate}} control v0.9.84 (Beta)\nsee: http://www.jsviews.com/#download/sample-tagcontrols */\n/*\n * Copyright 2017, Boris Moore\n * Released under the MIT License.\n */\n\n(function($) {\n\"use strict\";\n\n  $.views.tags({\n  validation: {\n    init: function() {\n      this.childValidates = [];\n    },\n    validate: function() {\n      var l = this.childValidates.length,\n          result = true;\n      while (l-- && result !== false) {\n        result = this.childValidates[l].validate();\n      }\n      return result;\n    },\n    clearMessage: function() {\n      var l = this.childValidates.length;\n      while (l--) {\n        this.childValidates[l].clearMessage();\n      }\n    },\n    refreshValidates: function() {\n      var l = this.childValidates.length;\n      while (l--) {\n        this.childValidates[l].refresh();\n      }\n    },\n    addChild: function(child) {\n      this.childValidates.push(child);\n    },\n    removeChild: function(child) {\n      var l = this.childValidates.length;\n      while (l--) {\n        if (this.childValidates[l] === child) {\n          this.childValidates.splice(l, 1);\n          this.updateIsValid();\n          break;\n        }\n      }\n    },\n    onChildValidate: function() {\n      this.updateIsValid();\n    },\n    updateIsValid: function() {\n      var groupIsValid = true,\n        l = this.childValidates.length;\n      while (l--) {\n        if (!this.childValidates[l].isValid) {\n          groupIsValid = false;\n          break;\n        }\n      }\n      $.observable(this).setProperty(\"isValid\", groupIsValid);\n    },\n    isValid: true,\n    dataBoundOnly: true\n  },\n  validate: {\n    baseTag: \"radiogroup\",\n    linkedElement: \"select,textarea,input\",\n    boundProps: [\"preventInvalidData\"],\n    init: function(tagCtx, linkCtx) {\n      var tag = this;\n      if (tag.radiogroup = tagCtx.props.radiogroup) {\n        tag.baseApply(arguments);\n      } else if (tag.inline && !tagCtx.content) {\n        tag.template = \"<input/>\";\n      }\n      tag.validationGroup = this.parents.validation;\n      if (tag.validationGroup) {\n        tag.validationGroup.addChild(this);\n      }\n    },\n    render: function(val) {\n      var ret,\n        tag = this,\n        tagCtx = this.tagCtx;\n      if (tag.inline) {\n         // Keep same data context for content\n        ret = tagCtx.render(tagCtx.view, true);\n        // For radio buttons provide wrapper for validation messages\n        ret = tag.radiogroup ? (\"<div>\" + ret + \"</div>\") : ret;\n        return ret;\n      }\n    },\n    onBind: function(tagCtx, linkCtx) {\n      var targetTag,\n        tag = this,\n        target = tag.linkedElem && tag.linkedElem[0];\n\n      if (targetTag = tag.childTags()[0]) {\n        // {{validate}} may wrap another tag, such as {{slider}}\n        // or {{datepicker}} rather than an element such as <input/>\n        tag.targetTag = targetTag;\n        if (target && $.view(target).tag === targetTag) {\n          tag.linkedElem = undefined;\n        }\n        targetTag.onBeforeChange = function(ev, val) {\n          return tag.onBeforeChange.call(tag, ev, val);\n        };\n      }\n      if (tag.radiogroup) {\n        this.baseApply(arguments);\n      }\n    },\n    onAfterLink: function(tagCtx, linkCtx) {\n      var tag = this,\n        targetTag = tag.targetTag,\n        props = tagCtx.props,\n        arg0 = tag.cvtArgs()[0];\n\n      if (targetTag) {\n        targetTag.updateValue(arg0);\n      }\n\n      if (props.preventInvalidData !== undefined) {\n        tag.preventInvalidData = props.preventInvalidData;\n      } else if (tag.parents.validation) {\n        tag.preventInvalidData = tag.parents.validation.tagCtx.props.preventInvalidData;\n      }\n      if (!tag.messageElem || !tag.messageElem.parentNode) {\n        if (tag.radiogroup) {\n          // messageElem is the div which wraps the group of radio buttons and/or labels\n          tag.messageElem = tag.inline ? tagCtx.contents(\"div\") : $(linkCtx.elem);\n          tag.messageElem.addClass(\"radiogroup\");\n        } else {\n          if (!tag.inline && (targetTag = $.views.sub._glt(linkCtx.elem)[0])) {\n            // Scenario with data-link=\"{targetTag ...}{validate ...}\" (both tags data-linked on same linkedElem)\n            tag.targetTag = targetTag;\n          }\n          tag.messageElem = targetTag && (targetTag.displayElem || targetTag.linkedElem)\n            || tag.displayElem || tag.linkedElem;\n        }\n        tag.messageElem.addClass(\"val-msg\");\n      }\n\n      if (!tag.label || !tag.label.parentNode) {\n        tag.label = $(\"<label class=\\\"error\\\"></label><br/>\").insertAfter(tag.messageElem)[0];\n      }\n      tag.validate(arg0); // Validate initial data\n    },\n    onUpdate: function(ev, eventArgs, tagCtxs) {\n      this.clearMessage();\n      return false; // don't rerender\n    },\n    onBeforeChange: function(ev, eventArgs) {\n      if (this.preventInvalidData) {\n        this.validate(eventArgs.value);\n        return this.isValid;\n        // Allow data to be updated to invalid values - unless preventInvalidData set to true\n      }\n    },\n    onDispose: function() {\n      if (this.validationGroup) {\n        this.validationGroup.removeChild(this);\n      }\n    },\n    validate: function(val) {\n      var message, linkedElem, testName, condition,\n        tag = this,\n        props = tag.tagCtx.props,\n        linkedElems = tag.linkedElem;\n\n      if (val === undefined) {\n        // If no val passed in, get current value from linkedElem, and validate that\n        if (tag._.radio && linkedElems) {\n          linkedElems = linkedElems.find(\"input:checked\");\n        }\n        linkedElem = linkedElems && linkedElems[0];\n        val = \"\";\n        if (linkedElem) {\n          val = linkedElem.type === \"checkbox\" ? linkedElem.checked : linkedElem.value;\n        } else if (tag.targetTag) {\n          val = tag.targetTag.bndArgs()[0];\n        }\n        val = val || \"\";\n      }\n      tag.clearMessage();\n\n      // Test the validation conditions, one after the other.\n      this.isValid = true;\n      for (var validator in this.validators) {\n        condition = props[validator];\n        if (condition !== undefined && this.validators[validator].test(condition, val)) {\n          testName = validator;\n          this.isValid = false;\n          break;\n        }\n      }\n      if (!this.isValid) {// A test failed. Show message for first failed test.\n        message = props[\"msg_\" + testName] || this.validators[testName].message;\n        if ($.isFunction(message)) {\n          message = message(condition, val);\n        }\n        message = message.replace(/%cond%/g, condition).replace(/%val%/g, val)\n        if (tag.label.textContent !== undefined) {\n          tag.label.textContent = message;\n        } else {\n          tag.label.innerText = message; // Older IE does not support textContent\n        }\n        tag.messageElem.addClass(\"invalid\");\n      }\n      if (this.validationGroup) {\n        this.validationGroup.onChildValidate();\n      }\n      return this.isValid;\n    },\n    validators: function(validators) {\n      for (var validator in validators) {\n        this.validators[validator] = validators[validator];\n      }\n    },\n    clearMessage: function() {\n      // Clear previous message.\n      var tag = this,\n        label = tag.label;\n      if (tag.messageElem) {\n        tag.messageElem.removeClass(\"invalid\");\n        if (label.textContent !== undefined) {\n          label.textContent = \"\";\n        } else {\n          label.innerText = \"\"; // Older IE does not support textContent\n        }\n      }\n    }\n}\n});\n\n$.views.tags.validate.validators({\n  required: {\n    message: \"Please provide a value\",\n    test: function(condition, val) {\n      return condition && val === \"\";\n    }\n  },\n  equal: {\n    message: \"Value must be %cond%\",\n    test: function(condition, val) {\n      return val !== \"\" + condition;\n    }\n  },\n  checked: {\n    message: function(condition, val) {\n      return \"Must be \" + (condition ? \"checked\" : \"unchecked\");\n    },\n    test: function(condition, val) {\n      return (val && val !== \"false\") !== condition;\n    }\n  },\n  min: {\n    message: \"Minimum: %cond%\",\n    test: function(condition, val) {\n      return val < condition;\n    }\n  },\n  max: {\n    message: \"Maximum:  %cond%\",\n    test: function(condition, val) {\n      return val > condition;\n    }\n  },\n  maxLength: {\n    message: \"Maximum length: %cond%\",\n    test: function(condition, val) {\n      return val.length > condition;\n    }\n  },\n  minLength: {\n    message: \"Minimum length: %cond%\",\n    test: function(condition, val) {\n      return val.length < condition;\n    }\n  },\n  regex: {\n    message: \"Invalid string format\",\n    test: function(condition, val) {\n      var regex = condition.test ? condition : new RegExp(condition);\n      return !regex.test(val);\n    }\n  }\n});\n\n})(this.jQuery);\n"]}