!function(t,e,a){"use strict";var i=e.templates('{^{if !hidden || ~tree.editable}}<li data-link="class{:~tree.selected === #data ? \'selected\' : \'unselected\'}">{^{if categories && categories.length }}<span class="toggle">{^{:expanded ? \'-\' : \'+\' }}</span>{{else}}<span class="spacer">&bull;</span>{{/if}}{^{if ~tree.editedNode(#data)}}<button class="up cmdbtn">up</button><button class="down cmdbtn">down</button><button class="add cmdbtn">add</button>{{if ~parentTags.treeNode }}<span class="remove"></span>{{/if}}<button class="hide cmdbtn" data-link="hidden ? \'show\' : \'hide\'"></button><label>label: <input data-link="label" /></label><label>name: <input data-link="name" /></label><div class="bottom"></div>{{else}}<span>{{>label}}</span>{{/if}}</li>{^{if expanded }}<li><ul>{^{for categories }}{^{treeNode/}}{{/for}}</ul></li>{{/if}}{{/if}}'),s=e.templates('<ul class="tree">{^{for}}{^{treeNode/}}{{/for}}</ul>'),n=e.templates('<table class="tabsview"><tbody><tr class="tabstrip">{{for ~tag.tagCtxs}}<th data-link="class{:\'header_\' + (#index === ~tag.pane)} {on ~tag.setTab #index} {:props.tabCaption}"></th>{{/for}}</tr><tr class="tabscontent"><td colspan="{{:~tag.tagCtxs.length}}" data-link="{include ^tmpl=~tag.tagCtxs[~tag.pane].content}"></td></tr></tbody></table>'),o={init:function(t){this.pane=t.props.selectedTab||0,this.tabCount=this.tagCtxs.length,(this.parents.section||this.parents.page).tabs=this},render:function(){var t=this.tagCtx;return this.pane===t.index?t.render():""},template:n,setTab:function(t){e.observable(this).setProperty("pane",t),this.onSelectionChange&&this.onSelectionChange(t,this)}},l={init:function(){this.parent.setTree(this),this.ctx.tree=this},onAfterLink:function(){var t=this;t.contents("ul").on("click",".selected, .unselected",function(){e.view(this).ctx.tag.select()}).on("click",".toggle",function(t){e.view(this).ctx.tag.toggle(),t.stopImmediatePropagation()}).on("click",".remove",function(t){e.view(this).ctx.tag.remove(),t.stopImmediatePropagation()}).on("click",".add",function(t){e.view(this).ctx.tag.addCategory(),t.stopImmediatePropagation()}).on("click",".up",function(t){e.view(this).ctx.tag.moveCategoryUp(),t.stopImmediatePropagation()}).on("click",".down",function(t){e.view(this).ctx.tag.moveCategoryDown(),t.stopImmediatePropagation()}).on("click",".hide",function(t){e.view(this).ctx.tag.hideCategory(),t.stopImmediatePropagation()})},template:s,_newNodeCounter:0,select:function(t){e.observable(this).setProperty("selected",t.data),this.onSelectionChange&&this.onSelectionChange(t.data)},editedNode:function(t){return this.editable&&this.selected===t}},d={init:function(t){this.data=t.view.data,this.tree=this.ctxPrm("tree")},template:i,toggle:function(){e.observable(this.data).setProperty("expanded",!this.data.expanded),this.tree.onExpansionChange&&this.tree.onExpansionChange(this.data)},remove:function(){var t,a=this.parent,i=a.data.categories,s=this.tagCtx.view.index;e.observable(i).remove(s),t=a.childTags(),this.tree.select(t[s]||t[s-1]||a)},select:function(){this.tree.selected!==this.data&&this.tree.select(this)},addCategory:function(){var t,a=this.data;a.categories=a.categories||[],e.observable(this.data.categories).insert({name:"name"+this.tree._newNodeCounter++,label:""}),e.observable(a).setProperty("expanded",!0),t=this.childTags(),this.tree.select(t[t.length-1])},moveCategoryUp:function(){var t=this.tagCtx.view.index,a=this.parent.data.categories;t&&e.observable(a).move(t,t-1)},moveCategoryDown:function(){var t=this.tagCtx.view.index,a=this.parent.data.categories;t+1<a.length&&e.observable(a).move(t,t+1)},hideCategory:function(){var t=this.parent.data.categories[this.tagCtx.view.index];e.observable(t).setProperty("hidden",!t.hidden)}},c={baseTag:"for",onArrayChange:function(t,e){this.baseApply(arguments),"insert"===e.change&&this.toggleSelect(e.index)},flow:!1,toggleSelect:function(t){this.item(t).toggleSelect()},item:function(t){return this.childTags()[t]},onToggleSelect:function(t){t===this.selectedChild?this.selectedChild=null:t.selected&&(this.selectedChild&&this.selectedChild.toggleSelect(),this.selectedChild=t)}};l.editedNode.depends="editable",e.views.tags({tabs:o,tree:l,treeNode:d,selectList:c})}(this,this.jQuery);
//# sourceMappingURL=built-in-tags.min.js.map
